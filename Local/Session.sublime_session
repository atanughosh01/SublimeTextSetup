{
	"folder_history":
	[
		"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer",
		"/C/Users/2001a/Documents/GitHub/CPMaster",
		"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces",
		"/C/Users/2001a/Downloads/1633",
		"/C/Users/2001a/Documents/GitHub/Data-structures-and-algorithms",
		"/C/Users/2001a/Documents",
		"/C/Users/2001a",
		"/C/Users/2001a/Documents/GitHub/algorithmic-problem-solving",
		"/C/Users/2001a/Documents/GitHub/sublime-text-setup",
		"/C/Users/2001a/Documents/GitHub/C4E_Coursera",
		"/C/Users/2001a/Documents/GitHub/Network-Simulations",
		"/C/Users/2001a/Downloads/Arko",
		"/C/Users/2001a/Documents/GitHub/Network-Simulations/2_FlowControl/src/Trial2",
		"/C/Users/2001a/Documents/GitHub/Network-Simulations/3_CSMA",
		"/C/Users/2001a/Documents/zzz/CN_Assignment_4",
		"/C/Users/2001a/Documents/zzz/CN_Assignment_3/Arko",
		"/C/Users/2001a/Music/test",
		"/C/Users/2001a/Documents/GitHub/Network-Simulations/FlowControl",
		"/C/Users/2001a/Documents/GitHub/Udemy",
		"/C/Users/2001a/Dropbox/PC/Documents/Codes/Chiru_CN",
		"/C/Users/2001a/Dropbox/PC/Documents/Java_Assignments",
		"/C/Users/2001a/Dropbox/PC/Documents/Codes"
	],
	"last_version": 4126,
	"last_window_id": 83,
	"log_indexing": false,
	"next_update_check": 1656579246,
	"settings":
	{
		"new_window_full_screen": false,
		"new_window_height": 853.132075472,
		"new_window_maximized": true,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"unor",
						"unordered_set"
					],
					[
						"ma",
						"maximumUniqueSubarray"
					],
					[
						"cp",
						"cpsnip"
					],
					[
						"s",
						"sieve"
					],
					[
						"o",
						"output"
					],
					[
						"emp",
						"emplace_back"
					],
					[
						"sol",
						"solFunc"
					],
					[
						"un",
						"unordered_map"
					],
					[
						"INT",
						"INT_MIN"
					],
					[
						"IN",
						"INT_MAX"
					],
					[
						"em",
						"emplace_back"
					],
					[
						"be",
						"beginend"
					],
					[
						"le",
						"lengthOfLongestSubstring"
					],
					[
						"ve",
						"ver1Nums"
					],
					[
						"slope",
						"slope_0"
					],
					[
						"max",
						"maxSubArraySum"
					],
					[
						"maxS",
						"maxSum"
					],
					[
						"uno",
						"unordered_map"
					],
					[
						"de",
						"debug"
					],
					[
						"inc",
						"include"
					],
					[
						"is",
						"isPowOf2"
					],
					[
						"no",
						"node2"
					],
					[
						"MO",
						"MOD"
					],
					[
						"cpsnip",
						"cpsnip"
					],
					[
						"def",
						"define"
					],
					[
						"cpp",
						"cpsnip"
					],
					[
						"su",
						"subsLst"
					],
					[
						"deb",
						"debug"
					],
					[
						"mem",
						"memset"
					],
					[
						"solve",
						"solve3"
					],
					[
						"v",
						"vector"
					],
					[
						"en",
						"end"
					],
					[
						"fo",
						"FOR"
					],
					[
						"solv",
						"solve2"
					],
					[
						"l",
						"length"
					],
					[
						"cou",
						"cout"
					],
					[
						"beg",
						"beginend"
					],
					[
						"to",
						"toupper"
					],
					[
						"co",
						"cout"
					],
					[
						"m",
						"maxPower"
					],
					[
						"scor",
						"scoreList"
					]
				]
			},
			"build_system_choices":
			[
				[
					[
						[
							"Packages/C++/C Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/User/C++ 14.sublime-build",
							""
						],
						[
							"Packages/User/C++ 14.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/User/C++ 14.sublime-build",
							""
						],
						[
							"Packages/User/C++ 14.sublime-build",
							"Run"
						]
					],
					[
						"Packages/User/C++ 14.sublime-build",
						"Run"
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"fo",
						"SublimeAStyleFormatter: Format Current File"
					],
					[
						"for",
						"SublimeAStyleFormatter: Format Current File"
					],
					[
						"buil",
						"Build: Cancel"
					],
					[
						"auto",
						"Toggle AutoSave: all files"
					],
					[
						"au",
						"Toggle AutoSave: all files"
					],
					[
						"forma",
						"SublimeAStyleFormatter: Format Current File"
					],
					[
						"aut",
						"Toggle AutoSave: all files"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"pac",
						"Package Control: Install Package"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 128.981124878,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Associative_Containers/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Associative_Containers/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Associative_Containers/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/unordered_set.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1400/zin.txt",
				"/C/Users/2001a/Music/test.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/test.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1367C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1594E1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1604C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1591C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1561C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1335D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1323C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1454D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/017_APRIL221C_DIV3/05_XORABC.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/05_XORABC.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/04_PRIMESM.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/03_AXNODR.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/02_NOTUNIT.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/01_WATERCOOLER2.cpp",
				"/C/Users/2001a/Downloads/Compiler_Asg3/Atanu/q4_new.cpp",
				"/C/Users/2001a/Downloads/Compiler_Asg3/Atanu/q4_trial.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1534C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1401C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1328B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/1665D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/1665C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/1665B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/1665A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1365B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1612C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1372B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/230B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/05_TwistyLittlePassages.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/04_ChainReactions.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/03_d1000000.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/02_3DPrinting.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/01_PunchCards.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1360D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1553B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1476B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/1660C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/1660D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/1660B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/1660A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1574C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1607D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1617C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1555B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1547D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1618D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/07_MINSUB.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/06_MAX01EVSWP.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/05_MISS_NUM.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/D2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/D1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/E.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/README.md",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/04_RATING.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/03_CHEFRACES.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/02_THREETOPICS.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/01_INCRIQ.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1560D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1521B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1538C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1555C.cpp",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpz.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpy.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpx.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpw.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpv.sublime-snippet",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/try1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/temp2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656E.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/temp2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/C.cpp"
			],
			"find":
			{
				"height": 28.0754716981
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"size"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
				],
				"reverse": false,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 28.0754716981
			},
			"input":
			{
				"height": 39.3207550049
			},
			"menu_visible": true,
			"output.astyle_error_message":
			{
				"height": 0.0
			},
			"output.exec":
			{
				"height": 72.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "Packages/User/CPP17.sublime-build",
			"replace":
			{
				"height": 52.5283018868
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 207.0,
			"status_bar_visible": true,
			"template_settings":
			{
				"max_columns": 2
			}
		},
		"new_window_width": 1369.35849057
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"unor",
						"unordered_set"
					],
					[
						"ma",
						"maximumUniqueSubarray"
					],
					[
						"cp",
						"cpsnip"
					],
					[
						"s",
						"sieve"
					],
					[
						"o",
						"output"
					],
					[
						"emp",
						"emplace_back"
					],
					[
						"sol",
						"solFunc"
					],
					[
						"un",
						"unordered_map"
					],
					[
						"INT",
						"INT_MIN"
					],
					[
						"IN",
						"INT_MAX"
					],
					[
						"em",
						"emplace_back"
					],
					[
						"be",
						"beginend"
					],
					[
						"le",
						"lengthOfLongestSubstring"
					],
					[
						"ve",
						"ver1Nums"
					],
					[
						"slope",
						"slope_0"
					],
					[
						"max",
						"maxSubArraySum"
					],
					[
						"maxS",
						"maxSum"
					],
					[
						"uno",
						"unordered_map"
					],
					[
						"de",
						"debug"
					],
					[
						"inc",
						"include"
					],
					[
						"is",
						"isPowOf2"
					],
					[
						"no",
						"node2"
					],
					[
						"MO",
						"MOD"
					],
					[
						"cpsnip",
						"cpsnip"
					],
					[
						"def",
						"define"
					],
					[
						"cpp",
						"cpsnip"
					],
					[
						"su",
						"subsLst"
					],
					[
						"deb",
						"debug"
					],
					[
						"mem",
						"memset"
					],
					[
						"solve",
						"solve3"
					],
					[
						"v",
						"vector"
					],
					[
						"en",
						"end"
					],
					[
						"fo",
						"FOR"
					],
					[
						"solv",
						"solve2"
					],
					[
						"l",
						"length"
					],
					[
						"cou",
						"cout"
					],
					[
						"beg",
						"beginend"
					],
					[
						"to",
						"toupper"
					],
					[
						"co",
						"cout"
					],
					[
						"m",
						"maxPower"
					],
					[
						"scor",
						"scoreList"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Associative_Containers/multiset.cpp",
					"settings":
					{
						"buffer_size": 905,
						"line_ending": "Windows"
					}
				},
				{
					"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/unordered_multiset.cpp",
					"settings":
					{
						"buffer_size": 409,
						"line_ending": "Windows"
					}
				},
				{
					"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Associative_Containers/set.cpp",
					"settings":
					{
						"buffer_size": 1811,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							36,
							1,
							"insert",
							{
								"characters": "\nint"
							},
							"BQAAAP4FAAAAAAAA/wUAAAAAAAAAAAAA/wUAAAAAAAABBgAAAAAAAAAAAAABBgAAAAAAAAIGAAAAAAAAAAAAAAIGAAAAAAAAAwYAAAAAAAAAAAAAAwYAAAAAAAAEBgAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4FAAAAAAAA/gUAAAAAAAAAAAAAAADwvw"
						],
						[
							37,
							1,
							"insert",
							{
								"characters": " le"
							},
							"AwAAAAQGAAAAAAAABQYAAAAAAAAAAAAABQYAAAAAAAAGBgAAAAAAAAAAAAAGBgAAAAAAAAcGAAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQGAAAAAAAABAYAAAAAAAAAAAAAAADwvw"
						],
						[
							38,
							1,
							"insert",
							{
								"characters": "n"
							},
							"AQAAAAcGAAAAAAAACAYAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcGAAAAAAAABwYAAAAAAAAAAAAAAADwvw"
						],
						[
							39,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAAgGAAAAAAAACQYAAAAAAAAAAAAACQYAAAAAAAAKBgAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgGAAAAAAAACAYAAAAAAAAAAAAAAADwvw"
						],
						[
							40,
							1,
							"insert",
							{
								"characters": " st"
							},
							"AwAAAAoGAAAAAAAACwYAAAAAAAAAAAAACwYAAAAAAAAMBgAAAAAAAAAAAAAMBgAAAAAAAA0GAAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoGAAAAAAAACgYAAAAAAAAAAAAAAADwvw"
						],
						[
							41,
							1,
							"insert",
							{
								"characters": "1.size"
							},
							"BgAAAA0GAAAAAAAADgYAAAAAAAAAAAAADgYAAAAAAAAPBgAAAAAAAAAAAAAPBgAAAAAAABAGAAAAAAAAAAAAABAGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAASBgAAAAAAAAAAAAASBgAAAAAAABMGAAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0GAAAAAAAADQYAAAAAAAAAAAAAAADwvw"
						],
						[
							42,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAABMGAAAAAAAAFQYAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMGAAAAAAAAEwYAAAAAAAAAAAAAAADwvw"
						],
						[
							45,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAABUGAAAAAAAAFgYAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUGAAAAAAAAFQYAAAAAAAAAAAAAAADwvw"
						],
						[
							46,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAABYGAAAAAAAAFwYAAAAAAAAAAAAAFwYAAAAAAAAZBgAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYGAAAAAAAAFgYAAAAAAAAAAAAAAADwvw"
						],
						[
							47,
							1,
							"astyleformat",
							null,
							"AQAAABcGAAAAAAAAFwYAAAAAAAACAAAACQk",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkGAAAAAAAAGQYAAAAAAAAAAAAAAADwvw"
						],
						[
							48,
							1,
							"insert",
							{
								"characters": "debug"
							},
							"BQAAABcGAAAAAAAAGAYAAAAAAAAAAAAAGAYAAAAAAAAZBgAAAAAAAAAAAAAZBgAAAAAAABoGAAAAAAAAAAAAABoGAAAAAAAAGwYAAAAAAAAAAAAAGwYAAAAAAAAcBgAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcGAAAAAAAAFwYAAAAAAAAAAAAAAADwvw"
						],
						[
							49,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAABwGAAAAAAAAHgYAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwGAAAAAAAAHAYAAAAAAAAAAAAAAADwvw"
						],
						[
							50,
							1,
							"astyleformat",
							null,
							"AQAAABcGAAAAAAAAGQYAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0GAAAAAAAAHQYAAAAAAAAAAAAAAADwvw"
						],
						[
							51,
							1,
							"insert",
							{
								"characters": "len"
							},
							"AwAAAB8GAAAAAAAAIAYAAAAAAAAAAAAAIAYAAAAAAAAhBgAAAAAAAAAAAAAhBgAAAAAAACIGAAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8GAAAAAAAAHwYAAAAAAAAAAAAAAADwvw"
						],
						[
							54,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAACMGAAAAAAAAJAYAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMGAAAAAAAAIwYAAAAAAAAAAAAAAADwvw"
						],
						[
							66,
							1,
							"cut",
							null,
							"AQAAAP4FAAAAAAAA/gUAAAAAAAAmAAAACgkJaW50IGxlbiA9IHN0MS5zaXplKCk7CgkJZGVidWcobGVuKTs",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQGAAAAAAAA/gUAAAAAAAAAAAAAAADwvw"
						],
						[
							70,
							1,
							"paste",
							null,
							"AQAAACgEAAAAAAAATgQAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgEAAAAAAAAKAQAAAAAAAAAAAAAAADwvw"
						],
						[
							71,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Add Line.sublime-macro"
							},
							"AgAAAE4EAAAAAAAATwQAAAAAAAAAAAAATwQAAAAAAABRBAAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4EAAAAAAAATgQAAAAAAAAAAAAAAADwvw"
						],
						[
							72,
							1,
							"astyleformat",
							null,
							"AQAAAE8EAAAAAAAATwQAAAAAAAACAAAACQk",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEEAAAAAAAAUQQAAAAAAAAAAAAAAADwvw"
						],
						[
							73,
							1,
							"left_delete",
							null,
							"AQAAAE4EAAAAAAAATgQAAAAAAAABAAAACg",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8EAAAAAAAATwQAAAAAAAAAAAAAAADwvw"
						]
					]
				},
				{
					"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/unordered_set.cpp",
					"redo_stack":
					[
						[
							7,
							1,
							"left_delete",
							null,
							"AQAAAKoGAAAAAAAAuQYAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAqgYAAAAAAACqBgAAAAAAAAAAAAAAAPC/"
						]
					],
					"settings":
					{
						"buffer_size": 1738,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							3,
							1,
							"paste",
							null,
							"AgAAAAAAAAAAAAAAywIAAAAAAAAAAAAAywIAAAAAAADLAgAAAAAAAFoAAAAjaW5jbHVkZTxiaXRzL3N0ZGMrKy5oPgp1c2luZyBuYW1lc3BhY2Ugc3RkOwp0eXBlZGVmIGxvbmcgbG9uZyBsbDsKdHlwZWRlZiBsb25nIGRvdWJsZSBsZDs",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
						],
						[
							7,
							1,
							"insert",
							{
								"characters": "un"
							},
							"AgAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA7AEAAAAAAADtAQAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAQAAAAAAAOsBAAAAAAAAAAAAAAAA8L8"
						],
						[
							9,
							1,
							"insert",
							{
								"characters": "ordere"
							},
							"BgAAAO0BAAAAAAAA7gEAAAAAAAAAAAAA7gEAAAAAAADvAQAAAAAAAAAAAADvAQAAAAAAAPABAAAAAAAAAAAAAPABAAAAAAAA8QEAAAAAAAAAAAAA8QEAAAAAAADyAQAAAAAAAAAAAADyAQAAAAAAAPMBAAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAQAAAAAAAO0BAAAAAAAAAAAAAAAA8L8"
						],
						[
							10,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAPMBAAAAAAAA9AEAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzAQAAAAAAAPMBAAAAAAAAAAAAAAAA8L8"
						],
						[
							12,
							1,
							"insert",
							{
								"characters": "_"
							},
							"AQAAAPQBAAAAAAAA9QEAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0AQAAAAAAAPQBAAAAAAAAAAAAAAAA8L8"
						],
						[
							25,
							1,
							"paste",
							null,
							"AgAAAG8CAAAAAAAAfAIAAAAAAAAAAAAAfAIAAAAAAAB8AgAAAAAAAAMAAABzZXQ",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAgAAAAAAAHICAAAAAAAAAAAAAAAA8L8"
						],
						[
							41,
							1,
							"paste",
							null,
							"AgAAAAkDAAAAAAAANwYAAAAAAAAAAAAANwYAAAAAAAA3BgAAAAAAACgAAAAKCQlpbnQgbjsgY2luID4+IG47CgkJY291dCA8PCBuIDw8ICJcbiI7",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAwAAAAAAAAkDAAAAAAAAAAAAAAAA8L8"
						],
						[
							60,
							1,
							"paste",
							null,
							"AgAAAEADAAAAAAAATQMAAAAAAAAAAAAATQMAAAAAAABNAwAAAAAAAAMAAABzZXQ",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAAwAAAAAAAEMDAAAAAAAAAAAAAAAA8L8"
						],
						[
							66,
							1,
							"paste",
							null,
							"AgAAAFoDAAAAAAAAZwMAAAAAAAAAAAAAZwMAAAAAAABnAwAAAAAAAAMAAABzZXQ",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdAwAAAAAAAFoDAAAAAAAAAAAAAAAA8L8"
						],
						[
							72,
							1,
							"paste",
							null,
							"AgAAAAkEAAAAAAAAFgQAAAAAAAAAAAAAFgQAAAAAAAAWBAAAAAAAAAMAAABzZXQ",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJBAAAAAAAAAwEAAAAAAAAAAAAAAAA8L8"
						],
						[
							82,
							1,
							"paste",
							null,
							"AgAAAKIFAAAAAAAArwUAAAAAAAAAAAAArwUAAAAAAACvBQAAAAAAAAMAAABzZXQ",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiBQAAAAAAAKUFAAAAAAAAAAAAAAAA8L8"
						],
						[
							87,
							1,
							"paste",
							null,
							"AgAAANQFAAAAAAAA4QUAAAAAAAAAAAAA4QUAAAAAAADhBQAAAAAAAAMAAABzZXQ",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUBQAAAAAAANcFAAAAAAAAAAAAAAAA8L8"
						],
						[
							100,
							1,
							"left_delete",
							null,
							"AQAAALsFAAAAAAAAuwUAAAAAAAABAAAAMg",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8BQAAAAAAALwFAAAAAAAAAAAAAAAA8L8"
						],
						[
							101,
							1,
							"insert",
							{
								"characters": "1"
							},
							"AQAAALsFAAAAAAAAvAUAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7BQAAAAAAALsFAAAAAAAAAAAAAAAA8L8"
						],
						[
							105,
							1,
							"right_delete",
							null,
							"AQAAAMgFAAAAAAAAyAUAAAAAAAABAAAAMg",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIBQAAAAAAAMgFAAAAAAAAAAAAAAAA8L8"
						],
						[
							106,
							1,
							"insert",
							{
								"characters": "1"
							},
							"AQAAAMgFAAAAAAAAyQUAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIBQAAAAAAAMgFAAAAAAAAAAAAAAAA8L8"
						],
						[
							110,
							1,
							"left_delete",
							null,
							"AQAAANEFAAAAAAAA0QUAAAAAAAAuAAAACgkJdW5vcmRlcmVkX3NldDxpbnQsIGdyZWF0ZXI8aW50Pj4gc3Q0ID0gc3QyOw",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/BQAAAAAAANEFAAAAAAAAAAAAAAAA8L8"
						],
						[
							116,
							1,
							"left_delete",
							null,
							"AQAAALcFAAAAAAAAtwUAAAAAAAABAAAAMw",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4BQAAAAAAALgFAAAAAAAAAAAAAAAA8L8"
						],
						[
							117,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAALcFAAAAAAAAuAUAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3BQAAAAAAALcFAAAAAAAAAAAAAAAA8L8"
						],
						[
							123,
							1,
							"left_delete",
							null,
							"AQAAANwFAAAAAAAA3AUAAAAAAAABAAAAMw",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdBQAAAAAAAN0FAAAAAAAAAAAAAAAA8L8"
						],
						[
							124,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAANwFAAAAAAAA3QUAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcBQAAAAAAANwFAAAAAAAAAAAAAAAA8L8"
						],
						[
							128,
							1,
							"left_delete",
							null,
							"AQAAAPoFAAAAAAAA+gUAAAAAAAABAAAAMw",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7BQAAAAAAAPsFAAAAAAAAAAAAAAAA8L8"
						],
						[
							129,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAAPoFAAAAAAAA+wUAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6BQAAAAAAAPoFAAAAAAAAAAAAAAAA8L8"
						],
						[
							135,
							1,
							"left_delete",
							null,
							"AQAAACIGAAAAAAAAIgYAAAAAAAABAAAAMw",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjBgAAAAAAACMGAAAAAAAAAAAAAAAA8L8"
						],
						[
							136,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAACIGAAAAAAAAIwYAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiBgAAAAAAACIGAAAAAAAAAAAAAAAA8L8"
						],
						[
							140,
							1,
							"left_delete",
							null,
							"AQAAAD0EAAAAAAAAPQQAAAAAAAAOAAAACgkJZGVidWcoc3QyKTs",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLBAAAAAAAAD0EAAAAAAAAAAAAAAAA8L8"
						],
						[
							146,
							1,
							"cut",
							null,
							"AQAAAOkDAAAAAAAA6QMAAAAAAAAtAAAACS8vIE8obG9nKG4pKSB0aW1lLCBuID0gc2l6ZSBvZiB1bm9yZGVyZWRfc2V0",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWBAAAAAAAAOkDAAAAAAAAAAAAAAAA8L8"
						],
						[
							152,
							1,
							"paste",
							null,
							"AQAAAPsDAAAAAAAAKAQAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7AwAAAAAAAPsDAAAAAAAAAAAAAAAA8L8"
						],
						[
							155,
							1,
							"left_delete",
							null,
							"AQAAANcDAAAAAAAA1wMAAAAAAAASAAAACgkJCXN0MS5pbnNlcnQoZSk7",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAwAAAAAAANcDAAAAAAAAAAAAAAAA8L8"
						],
						[
							159,
							1,
							"left_delete",
							null,
							"AQAAAFcDAAAAAAAAVwMAAAAAAAAoAAAACgkJdW5vcmRlcmVkX3NldDxpbnQsIGdyZWF0ZXI8aW50Pj4gc3QyOw",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/AwAAAAAAAFcDAAAAAAAAAAAAAAAA8L8"
						],
						[
							165,
							1,
							"left_delete",
							null,
							"AQAAAJcFAAAAAAAAlwUAAAAAAAAMAAAAIGRlYnVnKHN0NCk7",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjBQAAAAAAAJcFAAAAAAAAAAAAAAAA8L8"
						],
						[
							171,
							1,
							"left_delete",
							null,
							"AQAAALUDAAAAAAAAtQMAAAAAAAABAAAAMg",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2AwAAAAAAALYDAAAAAAAAAAAAAAAA8L8"
						],
						[
							172,
							1,
							"insert",
							{
								"characters": "1"
							},
							"AQAAALUDAAAAAAAAtgMAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1AwAAAAAAALUDAAAAAAAAAAAAAAAA8L8"
						],
						[
							190,
							1,
							"insert",
							{
								"characters": "\ncerr"
							},
							"BgAAAMMGAAAAAAAAxAYAAAAAAAAAAAAAxAYAAAAAAADGBgAAAAAAAAAAAADGBgAAAAAAAMcGAAAAAAAAAAAAAMcGAAAAAAAAyAYAAAAAAAAAAAAAyAYAAAAAAADJBgAAAAAAAAAAAADJBgAAAAAAAMoGAAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDBgAAAAAAAMMGAAAAAAAAAAAAAAAA8L8"
						],
						[
							192,
							1,
							"insert",
							{
								"characters": ">>"
							},
							"AgAAAMoGAAAAAAAAywYAAAAAAAAAAAAAywYAAAAAAADMBgAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKBgAAAAAAAMoGAAAAAAAAAAAAAAAA8L8"
						],
						[
							193,
							1,
							"astyleformat",
							null,
							"AQAAAMoGAAAAAAAAywYAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMBgAAAAAAAMwGAAAAAAAAAAAAAAAA8L8"
						],
						[
							194,
							2,
							"left_delete",
							null,
							"AgAAAMwGAAAAAAAAzAYAAAAAAAABAAAAPssGAAAAAAAAywYAAAAAAAABAAAAPg",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNBgAAAAAAAM0GAAAAAAAAAAAAAAAA8L8"
						],
						[
							195,
							1,
							"astyleformat",
							null,
							"AQAAAMoGAAAAAAAAygYAAAAAAAABAAAAIA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLBgAAAAAAAMsGAAAAAAAAAAAAAAAA8L8"
						],
						[
							196,
							1,
							"insert",
							{
								"characters": "<<"
							},
							"AgAAAMoGAAAAAAAAywYAAAAAAAAAAAAAywYAAAAAAADMBgAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKBgAAAAAAAMoGAAAAAAAAAAAAAAAA8L8"
						],
						[
							197,
							1,
							"astyleformat",
							null,
							"AQAAAMoGAAAAAAAAywYAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMBgAAAAAAAMwGAAAAAAAAAAAAAAAA8L8"
						],
						[
							198,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAM0GAAAAAAAAzwYAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNBgAAAAAAAM0GAAAAAAAAAAAAAAAA8L8"
						],
						[
							199,
							1,
							"astyleformat",
							null,
							"AQAAAM0GAAAAAAAAzgYAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOBgAAAAAAAM4GAAAAAAAAAAAAAAAA8L8"
						],
						[
							200,
							1,
							"insert",
							{
								"characters": "\\n"
							},
							"AgAAAM8GAAAAAAAA0AYAAAAAAAAAAAAA0AYAAAAAAADRBgAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPBgAAAAAAAM8GAAAAAAAAAAAAAAAA8L8"
						],
						[
							203,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAANIGAAAAAAAA0wYAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSBgAAAAAAANIGAAAAAAAAAAAAAAAA8L8"
						],
						[
							211,
							1,
							"cut",
							null,
							"AQAAAMMGAAAAAAAAwwYAAAAAAAAQAAAACgkJY2VyciA8PCAiXG4iOw",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTBgAAAAAAAMMGAAAAAAAAAAAAAAAA8L8"
						],
						[
							214,
							1,
							"paste",
							null,
							"AQAAAOcFAAAAAAAA9wUAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnBQAAAAAAAOcFAAAAAAAAAAAAAAAA8L8"
						],
						[
							217,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAOcFAAAAAAAA6AUAAAAAAAAAAAAA6AUAAAAAAADqBQAAAAAAAAAAAAA",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnBQAAAAAAAOcFAAAAAAAAAAAAAAAA8L8"
						],
						[
							218,
							1,
							"astyleformat",
							null,
							"AQAAAOgFAAAAAAAA6AUAAAAAAAACAAAACQk",
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqBQAAAAAAAOoFAAAAAAAAAAAAAAAA8L8"
						],
						[
							7,
							1,
							"insert",
							{
								"characters": "\ndebug"
							},
							"BwAAAPgFAAAAAAAA+QUAAAAAAAAAAAAA+QUAAAAAAAD7BQAAAAAAAAAAAAD7BQAAAAAAAPwFAAAAAAAAAAAAAPwFAAAAAAAA/QUAAAAAAAAAAAAA/QUAAAAAAAD+BQAAAAAAAAAAAAD+BQAAAAAAAP8FAAAAAAAAAAAAAP8FAAAAAAAAAAYAAAAAAAAAAAAA",
							"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+AUAAAAAAAD4BQAAAAAAAAAAAAAAAPC/"
						],
						[
							17,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAAAGAAAAAAAAAgYAAAAAAAAAAAAA",
							"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAPC/"
						],
						[
							18,
							1,
							"insert",
							{
								"characters": "a"
							},
							"AQAAAAEGAAAAAAAAAgYAAAAAAAAAAAAA",
							"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQYAAAAAAAABBgAAAAAAAAAAAAAAAPC/"
						],
						[
							19,
							1,
							"left_delete",
							null,
							"AQAAAAEGAAAAAAAAAQYAAAAAAAABAAAAYQ",
							"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgYAAAAAAAACBgAAAAAAAAAAAAAAAPC/"
						],
						[
							21,
							1,
							"insert",
							{
								"characters": "st1"
							},
							"AwAAAAEGAAAAAAAAAgYAAAAAAAAAAAAAAgYAAAAAAAADBgAAAAAAAAAAAAADBgAAAAAAAAQGAAAAAAAAAAAAAA",
							"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQYAAAAAAAABBgAAAAAAAAAAAAAAAPC/"
						],
						[
							23,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAAUGAAAAAAAABgYAAAAAAAAAAAAA",
							"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAAPC/"
						],
						[
							7,
							1,
							"left_delete",
							null,
							"AQAAAL4FAAAAAAAAvgUAAAAAAAApAAAACgkJYXV0byBpdHIgPSBzdDIuZmluZCg5KTsKCQlkZWJ1ZygqaXRyKTs",
							"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcFAAAAAAAAvgUAAAAAAAAAAAAAAADwvw"
						],
						[
							3,
							1,
							"insert",
							{
								"characters": "\n\n"
							},
							"AgAAAMoGAAAAAAAAywYAAAAAAAAAAAAAywYAAAAAAADMBgAAAAAAAAAAAAA",
							"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoGAAAAAAAAygYAAAAAAAAAAAAAAADwvw"
						],
						[
							5,
							1,
							"insert",
							{
								"characters": "cp"
							},
							"AgAAAMwGAAAAAAAAzQYAAAAAAAAAAAAAzQYAAAAAAADOBgAAAAAAAAAAAAA",
							"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwGAAAAAAAAzAYAAAAAAAAAAAAAAADwvw"
						],
						[
							6,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AQAAAM4GAAAAAAAAzwYAAAAAAAAAAAAA",
							"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4GAAAAAAAAzgYAAAAAAAAAAAAAAADwvw"
						],
						[
							8,
							1,
							"left_delete",
							null,
							"AQAAAM4GAAAAAAAAzgYAAAAAAAABAAAACg",
							"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8GAAAAAAAAzwYAAAAAAAAAAAAAAADwvw"
						],
						[
							10,
							1,
							"insert",
							{
								"characters": "s"
							},
							"AQAAAM4GAAAAAAAAzwYAAAAAAAAAAAAA",
							"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4GAAAAAAAAzgYAAAAAAAAAAAAAAADwvw"
						],
						[
							11,
							1,
							"insert_completion",
							{
								"completion": "// Problem: \n\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace chrono;\nusing namespace __gnu_pbds;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<ll, ll>, null_type, less<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update> pbds;\n//--------------------------------------------------------------------------------------------------------------\n#define ff first\n#define ss second\n#define endl \"\\n\"\n#define INF (ll)1e18\n#define MOD (ll)1e9+7\n#define MOD2 998244353\n#define PI (ld)acos(-1.0)\n#define sz(x) ((int)(x).size())\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define fill(x,y) memset(x,y,sizeof(x))\n#define FOR(i,a,b) for(ll i=(a);i<(b);++i)\n#define output(a,n,s) FOR(i,0,n) cout<<a[i]<<s;\n#define input(a,n) FOR(i,0,n) cin>>a[i];\n#define minv(v) *min_element(all(v))\n#define maxv(v) *max_element(all(v))\n#define pbds_getidx order_of_key\n#define setbits(x) __builtin_popcountll(x)\n#define prcs cout.precision(15);cout << fixed;\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n#define deb1(a) cerr<<#a<<\": \"<<a<<endl;\n#define deb2(a,b) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<endl;\n#define deb3(a,b,c) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<endl;\n#define deb4(a,b,c,d) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<endl;\n#define deb5(a,b,c,d,e) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<\", \"<<#e<<\": \"<<e<<endl;\n#define deb6(a,b,c,d,e,f) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<\", \"<<#e<<\": \"<<e<<\", \"<<#f<<\": \"<<f<<endl;\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n#ifndef ONLINE_JUDGE\n#define debug(x) cerr << #x << \" : \"; _print(x); cerr << endl;\n#else\n#define debug(x)\n#endif\nvoid _print(ll t) {cerr << t;}\nvoid _print(int t) {cerr << t;}\nvoid _print(string t) {cerr << t;}\nvoid _print(char t) {cerr << t;}\nvoid _print(ld t) {cerr << t;}\nvoid _print(double t) {cerr << t;}\nvoid _print(ull t) {cerr << t;}\ntemplate<class T, class V> void _print(pair<T, V> p);\ntemplate<class T> void _print(vector<T> v);\ntemplate<class T> void _print(set<T> v);\ntemplate<class T> void _print(multiset<T> v);\ntemplate<class T, class V> void _print(map<T, V> v);\ntemplate<class T, class V> void _print(unordered_map<T, V> v);\ntemplate<class T> void _print(vector<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(set<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(multiset<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(unordered_set<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T, class V> void _print(pair<T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\ntemplate<class T, class V> void _print(map<T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T, class V> void _print(unordered_map<T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\nvoid _print(pbds v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n//-----------------------------------------------------------------------------------------------------------------------------------------------------\n/* Pass an array of size 3 in the extendgcd() funtion */\n// void extendgcd(ll a,ll b,ll* v){if(b==0){v[0]=1;v[1]=0;v[2]=a;return;}extendgcd(b,a%b,v);ll x=v[1];v[1]=v[0]-v[1]*(a/b);v[0]=x;return;}\n// void google(int t) {cout << \"Case #\" << t << \": \";}\n// ll msb(ll n){ll r=0;FOR(i,0,32){if((1ll<<i)==n) return(i+1);if(((1ll<<i)&n)==(1ll<<i)){if(n==i)r=i;else r=i+1;}} return(r+1);}\n// ll aot(ll x1,ll y1,ll x2,ll y2,ll x3,ll y3){return abs(x1*y2+x2*y3+x3*y1-x2*y1-x3*y2-x1*y3);} // 2*(Area of triangle)\n// ll mex(vector<ll>& v){set<ll> s;for(auto x:v)s.insert(x);ll r=0;for(auto it:s){if(it!=r)return r;++r;}return r;}\n// ll phi(ll n){ll r=n;for(ll i=2;i*i<=n;i++){if(n%i==0){while(n%i==0)n/=i;r-=r/i;}}if(n > 1)r-=r/n;return r;} //O(sqrt(N))\n// ll gcd(ll a,ll b) {if(a>b) swap(a,b);if(a==0) return 0;if(b%a) return gcd(a,b-a);return a;}\n// ll lcm(ll a,ll b) {return (a/gcd(a,b)*b);}\n// ll binexp(ll a,ll b,ll mod) {ll r=1;while(b){if(b&1) r=(r*1LL*a)%mod;a=(a*1LL*a)%mod;b=b>>1;} return r;}\n// ll mminv(ll a,ll b) {ll arr[3];extendgcd(a,b,arr);return arr[0];}    // For non prime b\n// ll mminvprime(ll n,ll mod) {return binexp(n,mod-2,mod);}\n// ll mod_add(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a + b) % m) + m)%m;}\n// ll mod_mul(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a * b) % m) + m)%m;}\n// ll mod_sub(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a - b) % m) + m)%m;}\n// ll mod_div(ll a, ll b, ll m) {a = a%m; b = b%m; return (mod_mul(a,mminvprime(b,m),m)+m)%m;} // Only for prime m\n// ll getRandomNumber(ll l, ll r) {return uniform_int_distribution<ll>(l, r)(rng);}\n// string to_binary(ll n){string s;while(n){s += to_string(n%2);n/=2;}reverse(all(s));return s;}\n// char to_lower(char c){if(c>=97) return c;return c+32;}\n// char to_upper(char c){if(c<97) return c;return c-32;}\n// bool revsort(ll a, ll b) {return a > b;}\n// bool isPowerOf2(ll x){return x && (!(x&(x-1)));}\n// bool isPalindromeV(vector<ll>& v){ll n=sz(v);FOR(i,0,n/2){if(v[i]!=v[n-i-1]) return false;}return true;}\n// bool isPalindromeS(string& v){ll n=sz(v);FOR(i,0,n/2){if(v[i]!=v[n-i-1]) return false;}return true;}\n// bool isSorted(vector<ll> v) {FOR(i,0,sz(v)-1) {if(v[i]>v[i+1]) return false;}return true;}\n// bool isPrime(ll n) {if(n<=1) return false; for(ll i=2;i*i<n;++i) {if(n%i==0) return false;} return true;}\n// vector<ll> sieve(int n){int*a=new int[n+1]();vector<ll>v;for(int i=2;i<=n;i++)if(a[i]==0){v.push_back(i);for(int j=2*i;j<=n;j+=i)a[j]=1;}return v;}\n// const int N = 2e5 + 12, M = 1e8 + 15;\n// int arr[N], pre[N], dp[M];\n// priority_queue<int,vector<int>,greater<int>> pq;\n//-----------------------------------------------------------------------------------------------------------------------------------------------------\n\nvoid solve() {\n    int n; cin >> n;\n    vector<int> a(n);\n    input(a, n);\n    // debug(a);\n    // output(a,n,\" \");\n    // cout << endl;\n    // return;\n}\n\nint main() {\n    prcs; fast;\n#ifndef ONLINE_JUDGE\n    freopen(\"zin.txt\", \"r\", stdin);\n    freopen(\"zout.txt\", \"w\", stdout);\n    freopen(\"zerr.txt\", \"w\", stderr);\n#endif\n    auto start = high_resolution_clock::now();\n    int T = 1;\n    cin >> T;\n    for (int i = 1; i <= T; i++) {\n        // google(i);\n        solve();\n    }\n    auto stop = high_resolution_clock::now();\n    auto duration = duration_cast<nanoseconds>(stop - start);\n#ifndef ONLINE_JUDGE\n    cerr << \"\\n[Completed in \" << ((ld)duration.count()) / ((ld)1e9) << \" s]\" << endl;\n#endif\n    return 0;\n}\n",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "cpsnip"
							},
							"AgAAAMwGAAAAAAAAzAYAAAAAAAADAAAAY3BzzAYAAAAAAABFIwAAAAAAAAAAAAA",
							"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8GAAAAAAAAzwYAAAAAAAAAAAAAAADwvw"
						],
						[
							14,
							1,
							"cut",
							{
								"event":
								{
									"modifier_keys":
									{
									},
									"x": 311.141509434,
									"y": 392.650943396
								}
							},
							"AQAAANoGAAAAAAAA2gYAAAAAAABSDgAAI2luY2x1ZGU8Yml0cy9zdGRjKysuaD4KI2luY2x1ZGU8ZXh0L3BiX2RzL2Fzc29jX2NvbnRhaW5lci5ocHA+CiNpbmNsdWRlPGV4dC9wYl9kcy90cmVlX3BvbGljeS5ocHA+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CnVzaW5nIG5hbWVzcGFjZSBjaHJvbm87CnVzaW5nIG5hbWVzcGFjZSBfX2dudV9wYmRzOwptdDE5OTM3IHJuZyhjaHJvbm86OnN0ZWFkeV9jbG9jazo6bm93KCkudGltZV9zaW5jZV9lcG9jaCgpLmNvdW50KCkpOwp0eXBlZGVmIGxvbmcgbG9uZyBsbDsKdHlwZWRlZiBsb25nIGRvdWJsZSBsZDsKdHlwZWRlZiB1bnNpZ25lZCBsb25nIGxvbmcgdWxsOwp0eXBlZGVmIHRyZWU8cGFpcjxsbCwgbGw+LCBudWxsX3R5cGUsIGxlc3M8cGFpcjxsbCwgbGw+PiwgcmJfdHJlZV90YWcsIHRyZWVfb3JkZXJfc3RhdGlzdGljc19ub2RlX3VwZGF0ZT4gcGJkczsKLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojZGVmaW5lIGZmIGZpcnN0CiNkZWZpbmUgc3Mgc2Vjb25kCiNkZWZpbmUgZW5kbCAiXG4iCiNkZWZpbmUgSU5GIChsbCkxZTE4CiNkZWZpbmUgTU9EIChsbCkxZTkrNwojZGVmaW5lIE1PRDIgOTk4MjQ0MzUzCiNkZWZpbmUgUEkgKGxkKWFjb3MoLTEuMCkKI2RlZmluZSBzeih4KSAoKGludCkoeCkuc2l6ZSgpKQojZGVmaW5lIGFsbCh4KSAoeCkuYmVnaW4oKSwoeCkuZW5kKCkKI2RlZmluZSByYWxsKHgpICh4KS5yYmVnaW4oKSwoeCkucmVuZCgpCiNkZWZpbmUgZmlsbCh4LHkpIG1lbXNldCh4LHksc2l6ZW9mKHgpKQojZGVmaW5lIEZPUihpLGEsYikgZm9yKGxsIGk9KGEpO2k8KGIpOysraSkKI2RlZmluZSBvdXRwdXQoYSxuLHMpIEZPUihpLDAsbikgY291dDw8YVtpXTw8czsKI2RlZmluZSBpbnB1dChhLG4pIEZPUihpLDAsbikgY2luPj5hW2ldOwojZGVmaW5lIG1pbnYodikgKm1pbl9lbGVtZW50KGFsbCh2KSkKI2RlZmluZSBtYXh2KHYpICptYXhfZWxlbWVudChhbGwodikpCiNkZWZpbmUgcGJkc19nZXRpZHggb3JkZXJfb2Zfa2V5CiNkZWZpbmUgc2V0Yml0cyh4KSBfX2J1aWx0aW5fcG9wY291bnRsbCh4KQojZGVmaW5lIHByY3MgY291dC5wcmVjaXNpb24oMTUpO2NvdXQgPDwgZml4ZWQ7CiNkZWZpbmUgZmFzdCBpb3NfYmFzZTo6c3luY193aXRoX3N0ZGlvKGZhbHNlKTtjaW4udGllKE5VTEwpO2NvdXQudGllKE5VTEwpOwovLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiNkZWZpbmUgZGViMShhKSBjZXJyPDwjYTw8IjogIjw8YTw8ZW5kbDsKI2RlZmluZSBkZWIyKGEsYikgY2Vycjw8I2E8PCI6ICI8PGE8PCIsICI8PCNiPDwiOiAiPDxiPDxlbmRsOwojZGVmaW5lIGRlYjMoYSxiLGMpIGNlcnI8PCNhPDwiOiAiPDxhPDwiLCAiPDwjYjw8IjogIjw8Yjw8IiwgIjw8I2M8PCI6ICI8PGM8PGVuZGw7CiNkZWZpbmUgZGViNChhLGIsYyxkKSBjZXJyPDwjYTw8IjogIjw8YTw8IiwgIjw8I2I8PCI6ICI8PGI8PCIsICI8PCNjPDwiOiAiPDxjPDwiLCAiPDwjZDw8IjogIjw8ZDw8ZW5kbDsKI2RlZmluZSBkZWI1KGEsYixjLGQsZSkgY2Vycjw8I2E8PCI6ICI8PGE8PCIsICI8PCNiPDwiOiAiPDxiPDwiLCAiPDwjYzw8IjogIjw8Yzw8IiwgIjw8I2Q8PCI6ICI8PGQ8PCIsICI8PCNlPDwiOiAiPDxlPDxlbmRsOwojZGVmaW5lIGRlYjYoYSxiLGMsZCxlLGYpIGNlcnI8PCNhPDwiOiAiPDxhPDwiLCAiPDwjYjw8IjogIjw8Yjw8IiwgIjw8I2M8PCI6ICI8PGM8PCIsICI8PCNkPDwiOiAiPDxkPDwiLCAiPDwjZTw8IjogIjw8ZTw8IiwgIjw8I2Y8PCI6ICI8PGY8PGVuZGw7Ci8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KI2lmbmRlZiBPTkxJTkVfSlVER0UKI2RlZmluZSBkZWJ1Zyh4KSBjZXJyIDw8ICN4IDw8ICIgOiAiOyBfcHJpbnQoeCk7IGNlcnIgPDwgZW5kbDsKI2Vsc2UKI2RlZmluZSBkZWJ1Zyh4KQojZW5kaWYKdm9pZCBfcHJpbnQobGwgdCkge2NlcnIgPDwgdDt9CnZvaWQgX3ByaW50KGludCB0KSB7Y2VyciA8PCB0O30Kdm9pZCBfcHJpbnQoc3RyaW5nIHQpIHtjZXJyIDw8IHQ7fQp2b2lkIF9wcmludChjaGFyIHQpIHtjZXJyIDw8IHQ7fQp2b2lkIF9wcmludChsZCB0KSB7Y2VyciA8PCB0O30Kdm9pZCBfcHJpbnQoZG91YmxlIHQpIHtjZXJyIDw8IHQ7fQp2b2lkIF9wcmludCh1bGwgdCkge2NlcnIgPDwgdDt9CnRlbXBsYXRlPGNsYXNzIFQsIGNsYXNzIFY+IHZvaWQgX3ByaW50KHBhaXI8VCwgVj4gcCk7CnRlbXBsYXRlPGNsYXNzIFQ+IHZvaWQgX3ByaW50KHZlY3RvcjxUPiB2KTsKdGVtcGxhdGU8Y2xhc3MgVD4gdm9pZCBfcHJpbnQoc2V0PFQ+IHYpOwp0ZW1wbGF0ZTxjbGFzcyBUPiB2b2lkIF9wcmludChtdWx0aXNldDxUPiB2KTsKdGVtcGxhdGU8Y2xhc3MgVCwgY2xhc3MgVj4gdm9pZCBfcHJpbnQobWFwPFQsIFY+IHYpOwp0ZW1wbGF0ZTxjbGFzcyBULCBjbGFzcyBWPiB2b2lkIF9wcmludCh1bm9yZGVyZWRfbWFwPFQsIFY+IHYpOwp0ZW1wbGF0ZTxjbGFzcyBUPiB2b2lkIF9wcmludCh2ZWN0b3I8VD4gdikge2NlcnIgPDwgIlsgIjsgZm9yIChUIGkgOiB2KSB7X3ByaW50KGkpOyBjZXJyIDw8ICIgIjt9IGNlcnIgPDwgIl0iO30KdGVtcGxhdGU8Y2xhc3MgVD4gdm9pZCBfcHJpbnQoc2V0PFQ+IHYpIHtjZXJyIDw8ICJbICI7IGZvciAoVCBpIDogdikge19wcmludChpKTsgY2VyciA8PCAiICI7fSBjZXJyIDw8ICJdIjt9CnRlbXBsYXRlPGNsYXNzIFQ+IHZvaWQgX3ByaW50KG11bHRpc2V0PFQ+IHYpIHtjZXJyIDw8ICJbICI7IGZvciAoVCBpIDogdikge19wcmludChpKTsgY2VyciA8PCAiICI7fSBjZXJyIDw8ICJdIjt9CnRlbXBsYXRlPGNsYXNzIFQ+IHZvaWQgX3ByaW50KHVub3JkZXJlZF9zZXQ8VD4gdikge2NlcnIgPDwgIlsgIjsgZm9yIChUIGkgOiB2KSB7X3ByaW50KGkpOyBjZXJyIDw8ICIgIjt9IGNlcnIgPDwgIl0iO30KdGVtcGxhdGU8Y2xhc3MgVCwgY2xhc3MgVj4gdm9pZCBfcHJpbnQocGFpcjxULCBWPiBwKSB7Y2VyciA8PCAieyI7IF9wcmludChwLmZmKTsgY2VyciA8PCAiLCI7IF9wcmludChwLnNzKTsgY2VyciA8PCAifSI7fQp0ZW1wbGF0ZTxjbGFzcyBULCBjbGFzcyBWPiB2b2lkIF9wcmludChtYXA8VCwgVj4gdikge2NlcnIgPDwgIlsgIjsgZm9yIChhdXRvIGkgOiB2KSB7X3ByaW50KGkpOyBjZXJyIDw8ICIgIjt9IGNlcnIgPDwgIl0iO30KdGVtcGxhdGU8Y2xhc3MgVCwgY2xhc3MgVj4gdm9pZCBfcHJpbnQodW5vcmRlcmVkX21hcDxULCBWPiB2KSB7Y2VyciA8PCAiWyAiOyBmb3IgKGF1dG8gaSA6IHYpIHtfcHJpbnQoaSk7IGNlcnIgPDwgIiAiO30gY2VyciA8PCAiXSI7fQp2b2lkIF9wcmludChwYmRzIHYpIHtjZXJyIDw8ICJbICI7IGZvciAoYXV0byBpIDogdikge19wcmludChpKTsgY2VyciA8PCAiICI7fSBjZXJyIDw8ICJdIjt9",
							"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwVAAAAAAAA2gYAAAAAAAAAAAAAAADwvw"
						],
						[
							15,
							1,
							"astyleformat",
							null,
							"KwAAANcGAAAAAAAA1wYAAAAAAAABAAAAIDISAAAAAAAAMhIAAAAAAAAEAAAAICAgIDISAAAAAAAAMxIAAAAAAAAAAAAARBIAAAAAAABEEgAAAAAAAAQAAAAgICAgRBIAAAAAAABFEgAAAAAAAAAAAABXEgAAAAAAAFcSAAAAAAAABAAAACAgICBXEgAAAAAAAFgSAAAAAAAAAAAAAGUSAAAAAAAAZRIAAAAAAAAEAAAAICAgIGUSAAAAAAAAZhIAAAAAAAAAAAAAcxIAAAAAAABzEgAAAAAAAAQAAAAgICAgcxIAAAAAAAB0EgAAAAAAAAAAAACIEgAAAAAAAIgSAAAAAAAABAAAACAgICCIEgAAAAAAAIkSAAAAAAAAAAAAAJoSAAAAAAAAmhIAAAAAAAAEAAAAICAgIJoSAAAAAAAAmxIAAAAAAAAAAAAAthIAAAAAAAC2EgAAAAAAAAQAAAAgICAgthIAAAAAAAC3EgAAAAAAAAAAAADYEgAAAAAAANgSAAAAAAAABAAAACAgICDYEgAAAAAAANkSAAAAAAAAAAAAAPkSAAAAAAAA+RIAAAAAAAAEAAAAICAgIPkSAAAAAAAA+hIAAAAAAAAAAAAAHBMAAAAAAAAcEwAAAAAAAAQAAAAgICAgHBMAAAAAAAAdEwAAAAAAAAAAAABGEwAAAAAAAEYTAAAAAAAABAAAACAgICBGEwAAAAAAAEcTAAAAAAAAAAAAAHITAAAAAAAAchMAAAAAAAAEAAAAICAgIHITAAAAAAAAcxMAAAAAAAAAAAAAfhMAAAAAAAB+EwAAAAAAAAQAAAAgICAgfhMAAAAAAAB/EwAAAAAAAAAAAACJEwAAAAAAAIkTAAAAAAAABAAAACAgICCJEwAAAAAAAIoTAAAAAAAAAAAAAKkTAAAAAAAAqRMAAAAAAAAIAAAAICAgICAgICCpEwAAAAAAAKsTAAAAAAAAAAAAALkTAAAAAAAAuRMAAAAAAAAIAAAAICAgICAgICC5EwAAAAAAALsTAAAAAAAAAAAAAMQTAAAAAAAAxBMAAAAAAAAKAAAAICAgIH0KICAgIMQTAAAAAAAAyBMAAAAAAAAAAAAA8hMAAAAAAADyEwAAAAAAAAQAAAAgICAg8hMAAAAAAADzEwAAAAAAAAAAAABCFAAAAAAAAEIUAAAAAAAABAAAACAgICBCFAAAAAAAAEMUAAAAAAAAAAAAAJ0UAAAAAAAAnRQAAAAAAAAEAAAAICAgIJ0UAAAAAAAAnhQAAAAAAAAAAAAA",
							"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoGAAAAAAAA2gYAAAAAAAAAAAAAAADwvw"
						],
						[
							18,
							1,
							"left_delete",
							null,
							"AQAAAMoGAAAAAAAAygYAAAAAAADgDQAACgovLyBQcm9ibGVtOgoKCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLyogUGFzcyBhbiBhcnJheSBvZiBzaXplIDMgaW4gdGhlIGV4dGVuZGdjZCgpIGZ1bnRpb24gKi8KLy8gdm9pZCBleHRlbmRnY2QobGwgYSxsbCBiLGxsKiB2KXtpZihiPT0wKXt2WzBdPTE7dlsxXT0wO3ZbMl09YTtyZXR1cm47fWV4dGVuZGdjZChiLGElYix2KTtsbCB4PXZbMV07dlsxXT12WzBdLXZbMV0qKGEvYik7dlswXT14O3JldHVybjt9Ci8vIHZvaWQgZ29vZ2xlKGludCB0KSB7Y291dCA8PCAiQ2FzZSAjIiA8PCB0IDw8ICI6ICI7fQovLyBsbCBtc2IobGwgbil7bGwgcj0wO0ZPUihpLDAsMzIpe2lmKCgxbGw8PGkpPT1uKSByZXR1cm4oaSsxKTtpZigoKDFsbDw8aSkmbik9PSgxbGw8PGkpKXtpZihuPT1pKXI9aTtlbHNlIHI9aSsxO319IHJldHVybihyKzEpO30KLy8gbGwgYW90KGxsIHgxLGxsIHkxLGxsIHgyLGxsIHkyLGxsIHgzLGxsIHkzKXtyZXR1cm4gYWJzKHgxKnkyK3gyKnkzK3gzKnkxLXgyKnkxLXgzKnkyLXgxKnkzKTt9IC8vIDIqKEFyZWEgb2YgdHJpYW5nbGUpCi8vIGxsIG1leCh2ZWN0b3I8bGw+JiB2KXtzZXQ8bGw+IHM7Zm9yKGF1dG8geDp2KXMuaW5zZXJ0KHgpO2xsIHI9MDtmb3IoYXV0byBpdDpzKXtpZihpdCE9cilyZXR1cm4gcjsrK3I7fXJldHVybiByO30KLy8gbGwgcGhpKGxsIG4pe2xsIHI9bjtmb3IobGwgaT0yO2kqaTw9bjtpKyspe2lmKG4laT09MCl7d2hpbGUobiVpPT0wKW4vPWk7ci09ci9pO319aWYobiA+IDEpci09ci9uO3JldHVybiByO30gLy9PKHNxcnQoTikpCi8vIGxsIGdjZChsbCBhLGxsIGIpIHtpZihhPmIpIHN3YXAoYSxiKTtpZihhPT0wKSByZXR1cm4gMDtpZihiJWEpIHJldHVybiBnY2QoYSxiLWEpO3JldHVybiBhO30KLy8gbGwgbGNtKGxsIGEsbGwgYikge3JldHVybiAoYS9nY2QoYSxiKSpiKTt9Ci8vIGxsIGJpbmV4cChsbCBhLGxsIGIsbGwgbW9kKSB7bGwgcj0xO3doaWxlKGIpe2lmKGImMSkgcj0ocioxTEwqYSklbW9kO2E9KGEqMUxMKmEpJW1vZDtiPWI+PjE7fSByZXR1cm4gcjt9Ci8vIGxsIG1taW52KGxsIGEsbGwgYikge2xsIGFyclszXTtleHRlbmRnY2QoYSxiLGFycik7cmV0dXJuIGFyclswXTt9ICAgIC8vIEZvciBub24gcHJpbWUgYgovLyBsbCBtbWludnByaW1lKGxsIG4sbGwgbW9kKSB7cmV0dXJuIGJpbmV4cChuLG1vZC0yLG1vZCk7fQovLyBsbCBtb2RfYWRkKGxsIGEsIGxsIGIsIGxsIG0pIHthID0gYSVtOyBiID0gYiVtOyByZXR1cm4gKCgoYSArIGIpICUgbSkgKyBtKSVtO30KLy8gbGwgbW9kX211bChsbCBhLCBsbCBiLCBsbCBtKSB7YSA9IGElbTsgYiA9IGIlbTsgcmV0dXJuICgoKGEgKiBiKSAlIG0pICsgbSklbTt9Ci8vIGxsIG1vZF9zdWIobGwgYSwgbGwgYiwgbGwgbSkge2EgPSBhJW07IGIgPSBiJW07IHJldHVybiAoKChhIC0gYikgJSBtKSArIG0pJW07fQovLyBsbCBtb2RfZGl2KGxsIGEsIGxsIGIsIGxsIG0pIHthID0gYSVtOyBiID0gYiVtOyByZXR1cm4gKG1vZF9tdWwoYSxtbWludnByaW1lKGIsbSksbSkrbSklbTt9IC8vIE9ubHkgZm9yIHByaW1lIG0KLy8gbGwgZ2V0UmFuZG9tTnVtYmVyKGxsIGwsIGxsIHIpIHtyZXR1cm4gdW5pZm9ybV9pbnRfZGlzdHJpYnV0aW9uPGxsPihsLCByKShybmcpO30KLy8gc3RyaW5nIHRvX2JpbmFyeShsbCBuKXtzdHJpbmcgczt3aGlsZShuKXtzICs9IHRvX3N0cmluZyhuJTIpO24vPTI7fXJldmVyc2UoYWxsKHMpKTtyZXR1cm4gczt9Ci8vIGNoYXIgdG9fbG93ZXIoY2hhciBjKXtpZihjPj05NykgcmV0dXJuIGM7cmV0dXJuIGMrMzI7fQovLyBjaGFyIHRvX3VwcGVyKGNoYXIgYyl7aWYoYzw5NykgcmV0dXJuIGM7cmV0dXJuIGMtMzI7fQovLyBib29sIHJldnNvcnQobGwgYSwgbGwgYikge3JldHVybiBhID4gYjt9Ci8vIGJvb2wgaXNQb3dlck9mMihsbCB4KXtyZXR1cm4geCAmJiAoISh4Jih4LTEpKSk7fQovLyBib29sIGlzUGFsaW5kcm9tZVYodmVjdG9yPGxsPiYgdil7bGwgbj1zeih2KTtGT1IoaSwwLG4vMil7aWYodltpXSE9dltuLWktMV0pIHJldHVybiBmYWxzZTt9cmV0dXJuIHRydWU7fQovLyBib29sIGlzUGFsaW5kcm9tZVMoc3RyaW5nJiB2KXtsbCBuPXN6KHYpO0ZPUihpLDAsbi8yKXtpZih2W2ldIT12W24taS0xXSkgcmV0dXJuIGZhbHNlO31yZXR1cm4gdHJ1ZTt9Ci8vIGJvb2wgaXNTb3J0ZWQodmVjdG9yPGxsPiB2KSB7Rk9SKGksMCxzeih2KS0xKSB7aWYodltpXT52W2krMV0pIHJldHVybiBmYWxzZTt9cmV0dXJuIHRydWU7fQovLyBib29sIGlzUHJpbWUobGwgbikge2lmKG48PTEpIHJldHVybiBmYWxzZTsgZm9yKGxsIGk9MjtpKmk8bjsrK2kpIHtpZihuJWk9PTApIHJldHVybiBmYWxzZTt9IHJldHVybiB0cnVlO30KLy8gdmVjdG9yPGxsPiBzaWV2ZShpbnQgbil7aW50KmE9bmV3IGludFtuKzFdKCk7dmVjdG9yPGxsPnY7Zm9yKGludCBpPTI7aTw9bjtpKyspaWYoYVtpXT09MCl7di5wdXNoX2JhY2soaSk7Zm9yKGludCBqPTIqaTtqPD1uO2orPWkpYVtqXT0xO31yZXR1cm4gdjt9Ci8vIGNvbnN0IGludCBOID0gMmU1ICsgMTIsIE0gPSAxZTggKyAxNTsKLy8gaW50IGFycltOXSwgcHJlW05dLCBkcFtNXTsKLy8gcHJpb3JpdHlfcXVldWU8aW50LHZlY3RvcjxpbnQ+LGdyZWF0ZXI8aW50Pj4gcHE7Ci8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCnZvaWQgc29sdmUoKSB7CglpbnQgbjsgY2luID4+IG47Cgl2ZWN0b3I8aW50PiBhKG4pOwoJaW5wdXQoYSwgbik7CgkvLyBkZWJ1ZyhhKTsKCS8vIG91dHB1dChhLG4sIiAiKTsKCS8vIGNvdXQgPDwgZW5kbDsKCS8vIHJldHVybjsKfQoKaW50IG1haW4oKSB7CglwcmNzOyBmYXN0OwojaWZuZGVmIE9OTElORV9KVURHRQoJZnJlb3BlbigiemluLnR4dCIsICJyIiwgc3RkaW4pOwoJZnJlb3Blbigiem91dC50eHQiLCAidyIsIHN0ZG91dCk7CglmcmVvcGVuKCJ6ZXJyLnR4dCIsICJ3Iiwgc3RkZXJyKTsKI2VuZGlmCglhdXRvIHN0YXJ0ID0gaGlnaF9yZXNvbHV0aW9uX2Nsb2NrOjpub3coKTsKCWludCBUID0gMTsKCWNpbiA+PiBUOwoJZm9yIChpbnQgaSA9IDE7IGkgPD0gVDsgaSsrKSB7CgkJLy8gZ29vZ2xlKGkpOwoJCXNvbHZlKCk7Cgl9CglhdXRvIHN0b3AgPSBoaWdoX3Jlc29sdXRpb25fY2xvY2s6Om5vdygpOwoJYXV0byBkdXJhdGlvbiA9IGR1cmF0aW9uX2Nhc3Q8bmFub3NlY29uZHM+KHN0b3AgLSBzdGFydCk7CiNpZm5kZWYgT05MSU5FX0pVREdFCgljZXJyIDw8ICJcbltDb21wbGV0ZWQgaW4gIiA8PCAoKGxkKWR1cmF0aW9uLmNvdW50KCkpIC8gKChsZCkxZTkpIDw8ICIgc10iIDw8IGVuZGw7CiNlbmRpZgoJcmV0dXJuIDA7Cn0K",
							"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoUAAAAAAAAygYAAAAAAAAAAAAAAADwvw"
						],
						[
							1,
							1,
							"insert",
							{
								"characters": "\n\ncp"
							},
							"BAAAAMoGAAAAAAAAywYAAAAAAAAAAAAAywYAAAAAAADMBgAAAAAAAAAAAADMBgAAAAAAAM0GAAAAAAAAAAAAAM0GAAAAAAAAzgYAAAAAAAAAAAAA",
							"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKBgAAAAAAAMoGAAAAAAAAAAAAAAAA8L8"
						],
						[
							2,
							1,
							"insert_completion",
							{
								"completion": "// Problem: \n\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace chrono;\nusing namespace __gnu_pbds;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<ll, ll>, null_type, less<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update> pbds;\n//--------------------------------------------------------------------------------------------------------------\n#define ff first\n#define ss second\n#define endl \"\\n\"\n#define INF (ll)1e18\n#define MOD (ll)1e9+7\n#define MOD2 998244353\n#define PI (ld)acos(-1.0)\n#define sz(x) ((int)(x).size())\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define fill(x,y) memset(x,y,sizeof(x))\n#define FOR(i,a,b) for(ll i=(a);i<(b);++i)\n#define output(a,n,s) FOR(i,0,n) cout<<a[i]<<s;\n#define input(a,n) FOR(i,0,n) cin>>a[i];\n#define minv(v) *min_element(all(v))\n#define maxv(v) *max_element(all(v))\n#define pbds_getidx order_of_key\n#define setbits(x) __builtin_popcountll(x)\n#define prcs cout.precision(15);cout << fixed;\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n#define deb1(a) cerr<<#a<<\": \"<<a<<endl;\n#define deb2(a,b) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<endl;\n#define deb3(a,b,c) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<endl;\n#define deb4(a,b,c,d) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<endl;\n#define deb5(a,b,c,d,e) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<\", \"<<#e<<\": \"<<e<<endl;\n#define deb6(a,b,c,d,e,f) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<\", \"<<#e<<\": \"<<e<<\", \"<<#f<<\": \"<<f<<endl;\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n#ifndef ONLINE_JUDGE\n#define debug(x) cerr << #x << \" : \"; _print(x); cerr << endl;\n#else\n#define debug(x)\n#endif\nvoid _print(ll t) {cerr << t;}\nvoid _print(int t) {cerr << t;}\nvoid _print(string t) {cerr << t;}\nvoid _print(char t) {cerr << t;}\nvoid _print(ld t) {cerr << t;}\nvoid _print(double t) {cerr << t;}\nvoid _print(ull t) {cerr << t;}\ntemplate<class T, class V> void _print(pair<T, V> p);\ntemplate<class T> void _print(vector<T> v);\ntemplate<class T> void _print(set<T> v);\ntemplate<class T> void _print(multiset<T> v);\ntemplate<class T, class V> void _print(map<T, V> v);\ntemplate<class T, class V> void _print(unordered_map<T, V> v);\ntemplate<class T> void _print(vector<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(set<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(multiset<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(unordered_set<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T, class V> void _print(pair<T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\ntemplate<class T, class V> void _print(map<T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T, class V> void _print(unordered_map<T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\nvoid _print(pbds v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n//-----------------------------------------------------------------------------------------------------------------------------------------------------\n/* Pass an array of size 3 in the extendgcd() funtion */\n// void extendgcd(ll a,ll b,ll* v){if(b==0){v[0]=1;v[1]=0;v[2]=a;return;}extendgcd(b,a%b,v);ll x=v[1];v[1]=v[0]-v[1]*(a/b);v[0]=x;return;}\n// void google(int t) {cout << \"Case #\" << t << \": \";}\n// ll msb(ll n){ll r=0;FOR(i,0,32){if((1ll<<i)==n) return(i+1);if(((1ll<<i)&n)==(1ll<<i)){if(n==i)r=i;else r=i+1;}} return(r+1);}\n// ll aot(ll x1,ll y1,ll x2,ll y2,ll x3,ll y3){return abs(x1*y2+x2*y3+x3*y1-x2*y1-x3*y2-x1*y3);} // 2*(Area of triangle)\n// ll mex(vector<ll>& v){set<ll> s;for(auto x:v)s.insert(x);ll r=0;for(auto it:s){if(it!=r)return r;++r;}return r;}\n// ll phi(ll n){ll r=n;for(ll i=2;i*i<=n;i++){if(n%i==0){while(n%i==0)n/=i;r-=r/i;}}if(n > 1)r-=r/n;return r;} //O(sqrt(N))\n// ll gcd(ll a,ll b) {if(a>b) swap(a,b);if(a==0) return 0;if(b%a) return gcd(a,b-a);return a;}\n// ll lcm(ll a,ll b) {return (a/gcd(a,b)*b);}\n// ll binexp(ll a,ll b,ll mod) {ll r=1;while(b){if(b&1) r=(r*1LL*a)%mod;a=(a*1LL*a)%mod;b=b>>1;} return r;}\n// ll mminv(ll a,ll b) {ll arr[3];extendgcd(a,b,arr);return arr[0];}    // For non prime b\n// ll mminvprime(ll n,ll mod) {return binexp(n,mod-2,mod);}\n// ll mod_add(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a + b) % m) + m)%m;}\n// ll mod_mul(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a * b) % m) + m)%m;}\n// ll mod_sub(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a - b) % m) + m)%m;}\n// ll mod_div(ll a, ll b, ll m) {a = a%m; b = b%m; return (mod_mul(a,mminvprime(b,m),m)+m)%m;} // Only for prime m\n// ll getRandomNumber(ll l, ll r) {return uniform_int_distribution<ll>(l, r)(rng);}\n// string to_binary(ll n){string s;while(n){s += to_string(n%2);n/=2;}reverse(all(s));return s;}\n// char to_lower(char c){if(c>=97) return c;return c+32;}\n// char to_upper(char c){if(c<97) return c;return c-32;}\n// bool revsort(ll a, ll b) {return a > b;}\n// bool isPowerOf2(ll x){return x && (!(x&(x-1)));}\n// bool isPalindromeV(vector<ll>& v){ll n=sz(v);FOR(i,0,n/2){if(v[i]!=v[n-i-1]) return false;}return true;}\n// bool isPalindromeS(string& v){ll n=sz(v);FOR(i,0,n/2){if(v[i]!=v[n-i-1]) return false;}return true;}\n// bool isSorted(vector<ll> v) {FOR(i,0,sz(v)-1) {if(v[i]>v[i+1]) return false;}return true;}\n// bool isPrime(ll n) {if(n<=1) return false; for(ll i=2;i*i<n;++i) {if(n%i==0) return false;} return true;}\n// vector<ll> sieve(int n){int*a=new int[n+1]();vector<ll>v;for(int i=2;i<=n;i++)if(a[i]==0){v.push_back(i);for(int j=2*i;j<=n;j+=i)a[j]=1;}return v;}\n// const int N = 2e5 + 12, M = 1e8 + 15;\n// int arr[N], pre[N], dp[M];\n// priority_queue<int,vector<int>,greater<int>> pq;\n//-----------------------------------------------------------------------------------------------------------------------------------------------------\n\nvoid solve() {\n    int n; cin >> n;\n    vector<int> a(n);\n    input(a, n);\n    // debug(a);\n    // output(a,n,\" \");\n    // cout << endl;\n    // return;\n}\n\nint main() {\n    prcs; fast;\n#ifndef ONLINE_JUDGE\n    freopen(\"zin.txt\", \"r\", stdin);\n    freopen(\"zout.txt\", \"w\", stdout);\n    freopen(\"zerr.txt\", \"w\", stderr);\n#endif\n    auto start = high_resolution_clock::now();\n    int T = 1;\n    cin >> T;\n    for (int i = 1; i <= T; i++) {\n        // google(i);\n        solve();\n    }\n    auto stop = high_resolution_clock::now();\n    auto duration = duration_cast<nanoseconds>(stop - start);\n#ifndef ONLINE_JUDGE\n    cerr << \"\\n[Completed in \" << ((ld)duration.count()) / ((ld)1e9) << \" s]\" << endl;\n#endif\n    return 0;\n}\n",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "cpsnip"
							},
							"AgAAAMwGAAAAAAAAzAYAAAAAAAACAAAAY3DMBgAAAAAAAEUjAAAAAAAAAAAAAA",
							"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOBgAAAAAAAM4GAAAAAAAAAAAAAAAA8L8"
						],
						[
							5,
							1,
							"cut",
							null,
							"AQAAANoGAAAAAAAA2gYAAAAAAABSDgAAI2luY2x1ZGU8Yml0cy9zdGRjKysuaD4KI2luY2x1ZGU8ZXh0L3BiX2RzL2Fzc29jX2NvbnRhaW5lci5ocHA+CiNpbmNsdWRlPGV4dC9wYl9kcy90cmVlX3BvbGljeS5ocHA+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CnVzaW5nIG5hbWVzcGFjZSBjaHJvbm87CnVzaW5nIG5hbWVzcGFjZSBfX2dudV9wYmRzOwptdDE5OTM3IHJuZyhjaHJvbm86OnN0ZWFkeV9jbG9jazo6bm93KCkudGltZV9zaW5jZV9lcG9jaCgpLmNvdW50KCkpOwp0eXBlZGVmIGxvbmcgbG9uZyBsbDsKdHlwZWRlZiBsb25nIGRvdWJsZSBsZDsKdHlwZWRlZiB1bnNpZ25lZCBsb25nIGxvbmcgdWxsOwp0eXBlZGVmIHRyZWU8cGFpcjxsbCwgbGw+LCBudWxsX3R5cGUsIGxlc3M8cGFpcjxsbCwgbGw+PiwgcmJfdHJlZV90YWcsIHRyZWVfb3JkZXJfc3RhdGlzdGljc19ub2RlX3VwZGF0ZT4gcGJkczsKLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojZGVmaW5lIGZmIGZpcnN0CiNkZWZpbmUgc3Mgc2Vjb25kCiNkZWZpbmUgZW5kbCAiXG4iCiNkZWZpbmUgSU5GIChsbCkxZTE4CiNkZWZpbmUgTU9EIChsbCkxZTkrNwojZGVmaW5lIE1PRDIgOTk4MjQ0MzUzCiNkZWZpbmUgUEkgKGxkKWFjb3MoLTEuMCkKI2RlZmluZSBzeih4KSAoKGludCkoeCkuc2l6ZSgpKQojZGVmaW5lIGFsbCh4KSAoeCkuYmVnaW4oKSwoeCkuZW5kKCkKI2RlZmluZSByYWxsKHgpICh4KS5yYmVnaW4oKSwoeCkucmVuZCgpCiNkZWZpbmUgZmlsbCh4LHkpIG1lbXNldCh4LHksc2l6ZW9mKHgpKQojZGVmaW5lIEZPUihpLGEsYikgZm9yKGxsIGk9KGEpO2k8KGIpOysraSkKI2RlZmluZSBvdXRwdXQoYSxuLHMpIEZPUihpLDAsbikgY291dDw8YVtpXTw8czsKI2RlZmluZSBpbnB1dChhLG4pIEZPUihpLDAsbikgY2luPj5hW2ldOwojZGVmaW5lIG1pbnYodikgKm1pbl9lbGVtZW50KGFsbCh2KSkKI2RlZmluZSBtYXh2KHYpICptYXhfZWxlbWVudChhbGwodikpCiNkZWZpbmUgcGJkc19nZXRpZHggb3JkZXJfb2Zfa2V5CiNkZWZpbmUgc2V0Yml0cyh4KSBfX2J1aWx0aW5fcG9wY291bnRsbCh4KQojZGVmaW5lIHByY3MgY291dC5wcmVjaXNpb24oMTUpO2NvdXQgPDwgZml4ZWQ7CiNkZWZpbmUgZmFzdCBpb3NfYmFzZTo6c3luY193aXRoX3N0ZGlvKGZhbHNlKTtjaW4udGllKE5VTEwpO2NvdXQudGllKE5VTEwpOwovLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiNkZWZpbmUgZGViMShhKSBjZXJyPDwjYTw8IjogIjw8YTw8ZW5kbDsKI2RlZmluZSBkZWIyKGEsYikgY2Vycjw8I2E8PCI6ICI8PGE8PCIsICI8PCNiPDwiOiAiPDxiPDxlbmRsOwojZGVmaW5lIGRlYjMoYSxiLGMpIGNlcnI8PCNhPDwiOiAiPDxhPDwiLCAiPDwjYjw8IjogIjw8Yjw8IiwgIjw8I2M8PCI6ICI8PGM8PGVuZGw7CiNkZWZpbmUgZGViNChhLGIsYyxkKSBjZXJyPDwjYTw8IjogIjw8YTw8IiwgIjw8I2I8PCI6ICI8PGI8PCIsICI8PCNjPDwiOiAiPDxjPDwiLCAiPDwjZDw8IjogIjw8ZDw8ZW5kbDsKI2RlZmluZSBkZWI1KGEsYixjLGQsZSkgY2Vycjw8I2E8PCI6ICI8PGE8PCIsICI8PCNiPDwiOiAiPDxiPDwiLCAiPDwjYzw8IjogIjw8Yzw8IiwgIjw8I2Q8PCI6ICI8PGQ8PCIsICI8PCNlPDwiOiAiPDxlPDxlbmRsOwojZGVmaW5lIGRlYjYoYSxiLGMsZCxlLGYpIGNlcnI8PCNhPDwiOiAiPDxhPDwiLCAiPDwjYjw8IjogIjw8Yjw8IiwgIjw8I2M8PCI6ICI8PGM8PCIsICI8PCNkPDwiOiAiPDxkPDwiLCAiPDwjZTw8IjogIjw8ZTw8IiwgIjw8I2Y8PCI6ICI8PGY8PGVuZGw7Ci8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KI2lmbmRlZiBPTkxJTkVfSlVER0UKI2RlZmluZSBkZWJ1Zyh4KSBjZXJyIDw8ICN4IDw8ICIgOiAiOyBfcHJpbnQoeCk7IGNlcnIgPDwgZW5kbDsKI2Vsc2UKI2RlZmluZSBkZWJ1Zyh4KQojZW5kaWYKdm9pZCBfcHJpbnQobGwgdCkge2NlcnIgPDwgdDt9CnZvaWQgX3ByaW50KGludCB0KSB7Y2VyciA8PCB0O30Kdm9pZCBfcHJpbnQoc3RyaW5nIHQpIHtjZXJyIDw8IHQ7fQp2b2lkIF9wcmludChjaGFyIHQpIHtjZXJyIDw8IHQ7fQp2b2lkIF9wcmludChsZCB0KSB7Y2VyciA8PCB0O30Kdm9pZCBfcHJpbnQoZG91YmxlIHQpIHtjZXJyIDw8IHQ7fQp2b2lkIF9wcmludCh1bGwgdCkge2NlcnIgPDwgdDt9CnRlbXBsYXRlPGNsYXNzIFQsIGNsYXNzIFY+IHZvaWQgX3ByaW50KHBhaXI8VCwgVj4gcCk7CnRlbXBsYXRlPGNsYXNzIFQ+IHZvaWQgX3ByaW50KHZlY3RvcjxUPiB2KTsKdGVtcGxhdGU8Y2xhc3MgVD4gdm9pZCBfcHJpbnQoc2V0PFQ+IHYpOwp0ZW1wbGF0ZTxjbGFzcyBUPiB2b2lkIF9wcmludChtdWx0aXNldDxUPiB2KTsKdGVtcGxhdGU8Y2xhc3MgVCwgY2xhc3MgVj4gdm9pZCBfcHJpbnQobWFwPFQsIFY+IHYpOwp0ZW1wbGF0ZTxjbGFzcyBULCBjbGFzcyBWPiB2b2lkIF9wcmludCh1bm9yZGVyZWRfbWFwPFQsIFY+IHYpOwp0ZW1wbGF0ZTxjbGFzcyBUPiB2b2lkIF9wcmludCh2ZWN0b3I8VD4gdikge2NlcnIgPDwgIlsgIjsgZm9yIChUIGkgOiB2KSB7X3ByaW50KGkpOyBjZXJyIDw8ICIgIjt9IGNlcnIgPDwgIl0iO30KdGVtcGxhdGU8Y2xhc3MgVD4gdm9pZCBfcHJpbnQoc2V0PFQ+IHYpIHtjZXJyIDw8ICJbICI7IGZvciAoVCBpIDogdikge19wcmludChpKTsgY2VyciA8PCAiICI7fSBjZXJyIDw8ICJdIjt9CnRlbXBsYXRlPGNsYXNzIFQ+IHZvaWQgX3ByaW50KG11bHRpc2V0PFQ+IHYpIHtjZXJyIDw8ICJbICI7IGZvciAoVCBpIDogdikge19wcmludChpKTsgY2VyciA8PCAiICI7fSBjZXJyIDw8ICJdIjt9CnRlbXBsYXRlPGNsYXNzIFQ+IHZvaWQgX3ByaW50KHVub3JkZXJlZF9zZXQ8VD4gdikge2NlcnIgPDwgIlsgIjsgZm9yIChUIGkgOiB2KSB7X3ByaW50KGkpOyBjZXJyIDw8ICIgIjt9IGNlcnIgPDwgIl0iO30KdGVtcGxhdGU8Y2xhc3MgVCwgY2xhc3MgVj4gdm9pZCBfcHJpbnQocGFpcjxULCBWPiBwKSB7Y2VyciA8PCAieyI7IF9wcmludChwLmZmKTsgY2VyciA8PCAiLCI7IF9wcmludChwLnNzKTsgY2VyciA8PCAifSI7fQp0ZW1wbGF0ZTxjbGFzcyBULCBjbGFzcyBWPiB2b2lkIF9wcmludChtYXA8VCwgVj4gdikge2NlcnIgPDwgIlsgIjsgZm9yIChhdXRvIGkgOiB2KSB7X3ByaW50KGkpOyBjZXJyIDw8ICIgIjt9IGNlcnIgPDwgIl0iO30KdGVtcGxhdGU8Y2xhc3MgVCwgY2xhc3MgVj4gdm9pZCBfcHJpbnQodW5vcmRlcmVkX21hcDxULCBWPiB2KSB7Y2VyciA8PCAiWyAiOyBmb3IgKGF1dG8gaSA6IHYpIHtfcHJpbnQoaSk7IGNlcnIgPDwgIiAiO30gY2VyciA8PCAiXSI7fQp2b2lkIF9wcmludChwYmRzIHYpIHtjZXJyIDw8ICJbICI7IGZvciAoYXV0byBpIDogdikge19wcmludChpKTsgY2VyciA8PCAiICI7fSBjZXJyIDw8ICJdIjt9",
							"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsFQAAAAAAANoGAAAAAAAAAAAAAAAA8L8"
						],
						[
							6,
							1,
							"astyleformat",
							null,
							"KwAAANcGAAAAAAAA1wYAAAAAAAABAAAAIDISAAAAAAAAMhIAAAAAAAAEAAAAICAgIDISAAAAAAAAMxIAAAAAAAAAAAAARBIAAAAAAABEEgAAAAAAAAQAAAAgICAgRBIAAAAAAABFEgAAAAAAAAAAAABXEgAAAAAAAFcSAAAAAAAABAAAACAgICBXEgAAAAAAAFgSAAAAAAAAAAAAAGUSAAAAAAAAZRIAAAAAAAAEAAAAICAgIGUSAAAAAAAAZhIAAAAAAAAAAAAAcxIAAAAAAABzEgAAAAAAAAQAAAAgICAgcxIAAAAAAAB0EgAAAAAAAAAAAACIEgAAAAAAAIgSAAAAAAAABAAAACAgICCIEgAAAAAAAIkSAAAAAAAAAAAAAJoSAAAAAAAAmhIAAAAAAAAEAAAAICAgIJoSAAAAAAAAmxIAAAAAAAAAAAAAthIAAAAAAAC2EgAAAAAAAAQAAAAgICAgthIAAAAAAAC3EgAAAAAAAAAAAADYEgAAAAAAANgSAAAAAAAABAAAACAgICDYEgAAAAAAANkSAAAAAAAAAAAAAPkSAAAAAAAA+RIAAAAAAAAEAAAAICAgIPkSAAAAAAAA+hIAAAAAAAAAAAAAHBMAAAAAAAAcEwAAAAAAAAQAAAAgICAgHBMAAAAAAAAdEwAAAAAAAAAAAABGEwAAAAAAAEYTAAAAAAAABAAAACAgICBGEwAAAAAAAEcTAAAAAAAAAAAAAHITAAAAAAAAchMAAAAAAAAEAAAAICAgIHITAAAAAAAAcxMAAAAAAAAAAAAAfhMAAAAAAAB+EwAAAAAAAAQAAAAgICAgfhMAAAAAAAB/EwAAAAAAAAAAAACJEwAAAAAAAIkTAAAAAAAABAAAACAgICCJEwAAAAAAAIoTAAAAAAAAAAAAAKkTAAAAAAAAqRMAAAAAAAAIAAAAICAgICAgICCpEwAAAAAAAKsTAAAAAAAAAAAAALkTAAAAAAAAuRMAAAAAAAAIAAAAICAgICAgICC5EwAAAAAAALsTAAAAAAAAAAAAAMQTAAAAAAAAxBMAAAAAAAAKAAAAICAgIH0KICAgIMQTAAAAAAAAyBMAAAAAAAAAAAAA8hMAAAAAAADyEwAAAAAAAAQAAAAgICAg8hMAAAAAAADzEwAAAAAAAAAAAABCFAAAAAAAAEIUAAAAAAAABAAAACAgICBCFAAAAAAAAEMUAAAAAAAAAAAAAJ0UAAAAAAAAnRQAAAAAAAAEAAAAICAgIJ0UAAAAAAAAnhQAAAAAAAAAAAAA",
							"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaBgAAAAAAANoGAAAAAAAAAAAAAAAA8L8"
						],
						[
							9,
							1,
							"left_delete",
							null,
							"AQAAAMoGAAAAAAAAygYAAAAAAADgDQAACgovLyBQcm9ibGVtOgoKCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLyogUGFzcyBhbiBhcnJheSBvZiBzaXplIDMgaW4gdGhlIGV4dGVuZGdjZCgpIGZ1bnRpb24gKi8KLy8gdm9pZCBleHRlbmRnY2QobGwgYSxsbCBiLGxsKiB2KXtpZihiPT0wKXt2WzBdPTE7dlsxXT0wO3ZbMl09YTtyZXR1cm47fWV4dGVuZGdjZChiLGElYix2KTtsbCB4PXZbMV07dlsxXT12WzBdLXZbMV0qKGEvYik7dlswXT14O3JldHVybjt9Ci8vIHZvaWQgZ29vZ2xlKGludCB0KSB7Y291dCA8PCAiQ2FzZSAjIiA8PCB0IDw8ICI6ICI7fQovLyBsbCBtc2IobGwgbil7bGwgcj0wO0ZPUihpLDAsMzIpe2lmKCgxbGw8PGkpPT1uKSByZXR1cm4oaSsxKTtpZigoKDFsbDw8aSkmbik9PSgxbGw8PGkpKXtpZihuPT1pKXI9aTtlbHNlIHI9aSsxO319IHJldHVybihyKzEpO30KLy8gbGwgYW90KGxsIHgxLGxsIHkxLGxsIHgyLGxsIHkyLGxsIHgzLGxsIHkzKXtyZXR1cm4gYWJzKHgxKnkyK3gyKnkzK3gzKnkxLXgyKnkxLXgzKnkyLXgxKnkzKTt9IC8vIDIqKEFyZWEgb2YgdHJpYW5nbGUpCi8vIGxsIG1leCh2ZWN0b3I8bGw+JiB2KXtzZXQ8bGw+IHM7Zm9yKGF1dG8geDp2KXMuaW5zZXJ0KHgpO2xsIHI9MDtmb3IoYXV0byBpdDpzKXtpZihpdCE9cilyZXR1cm4gcjsrK3I7fXJldHVybiByO30KLy8gbGwgcGhpKGxsIG4pe2xsIHI9bjtmb3IobGwgaT0yO2kqaTw9bjtpKyspe2lmKG4laT09MCl7d2hpbGUobiVpPT0wKW4vPWk7ci09ci9pO319aWYobiA+IDEpci09ci9uO3JldHVybiByO30gLy9PKHNxcnQoTikpCi8vIGxsIGdjZChsbCBhLGxsIGIpIHtpZihhPmIpIHN3YXAoYSxiKTtpZihhPT0wKSByZXR1cm4gMDtpZihiJWEpIHJldHVybiBnY2QoYSxiLWEpO3JldHVybiBhO30KLy8gbGwgbGNtKGxsIGEsbGwgYikge3JldHVybiAoYS9nY2QoYSxiKSpiKTt9Ci8vIGxsIGJpbmV4cChsbCBhLGxsIGIsbGwgbW9kKSB7bGwgcj0xO3doaWxlKGIpe2lmKGImMSkgcj0ocioxTEwqYSklbW9kO2E9KGEqMUxMKmEpJW1vZDtiPWI+PjE7fSByZXR1cm4gcjt9Ci8vIGxsIG1taW52KGxsIGEsbGwgYikge2xsIGFyclszXTtleHRlbmRnY2QoYSxiLGFycik7cmV0dXJuIGFyclswXTt9ICAgIC8vIEZvciBub24gcHJpbWUgYgovLyBsbCBtbWludnByaW1lKGxsIG4sbGwgbW9kKSB7cmV0dXJuIGJpbmV4cChuLG1vZC0yLG1vZCk7fQovLyBsbCBtb2RfYWRkKGxsIGEsIGxsIGIsIGxsIG0pIHthID0gYSVtOyBiID0gYiVtOyByZXR1cm4gKCgoYSArIGIpICUgbSkgKyBtKSVtO30KLy8gbGwgbW9kX211bChsbCBhLCBsbCBiLCBsbCBtKSB7YSA9IGElbTsgYiA9IGIlbTsgcmV0dXJuICgoKGEgKiBiKSAlIG0pICsgbSklbTt9Ci8vIGxsIG1vZF9zdWIobGwgYSwgbGwgYiwgbGwgbSkge2EgPSBhJW07IGIgPSBiJW07IHJldHVybiAoKChhIC0gYikgJSBtKSArIG0pJW07fQovLyBsbCBtb2RfZGl2KGxsIGEsIGxsIGIsIGxsIG0pIHthID0gYSVtOyBiID0gYiVtOyByZXR1cm4gKG1vZF9tdWwoYSxtbWludnByaW1lKGIsbSksbSkrbSklbTt9IC8vIE9ubHkgZm9yIHByaW1lIG0KLy8gbGwgZ2V0UmFuZG9tTnVtYmVyKGxsIGwsIGxsIHIpIHtyZXR1cm4gdW5pZm9ybV9pbnRfZGlzdHJpYnV0aW9uPGxsPihsLCByKShybmcpO30KLy8gc3RyaW5nIHRvX2JpbmFyeShsbCBuKXtzdHJpbmcgczt3aGlsZShuKXtzICs9IHRvX3N0cmluZyhuJTIpO24vPTI7fXJldmVyc2UoYWxsKHMpKTtyZXR1cm4gczt9Ci8vIGNoYXIgdG9fbG93ZXIoY2hhciBjKXtpZihjPj05NykgcmV0dXJuIGM7cmV0dXJuIGMrMzI7fQovLyBjaGFyIHRvX3VwcGVyKGNoYXIgYyl7aWYoYzw5NykgcmV0dXJuIGM7cmV0dXJuIGMtMzI7fQovLyBib29sIHJldnNvcnQobGwgYSwgbGwgYikge3JldHVybiBhID4gYjt9Ci8vIGJvb2wgaXNQb3dlck9mMihsbCB4KXtyZXR1cm4geCAmJiAoISh4Jih4LTEpKSk7fQovLyBib29sIGlzUGFsaW5kcm9tZVYodmVjdG9yPGxsPiYgdil7bGwgbj1zeih2KTtGT1IoaSwwLG4vMil7aWYodltpXSE9dltuLWktMV0pIHJldHVybiBmYWxzZTt9cmV0dXJuIHRydWU7fQovLyBib29sIGlzUGFsaW5kcm9tZVMoc3RyaW5nJiB2KXtsbCBuPXN6KHYpO0ZPUihpLDAsbi8yKXtpZih2W2ldIT12W24taS0xXSkgcmV0dXJuIGZhbHNlO31yZXR1cm4gdHJ1ZTt9Ci8vIGJvb2wgaXNTb3J0ZWQodmVjdG9yPGxsPiB2KSB7Rk9SKGksMCxzeih2KS0xKSB7aWYodltpXT52W2krMV0pIHJldHVybiBmYWxzZTt9cmV0dXJuIHRydWU7fQovLyBib29sIGlzUHJpbWUobGwgbikge2lmKG48PTEpIHJldHVybiBmYWxzZTsgZm9yKGxsIGk9MjtpKmk8bjsrK2kpIHtpZihuJWk9PTApIHJldHVybiBmYWxzZTt9IHJldHVybiB0cnVlO30KLy8gdmVjdG9yPGxsPiBzaWV2ZShpbnQgbil7aW50KmE9bmV3IGludFtuKzFdKCk7dmVjdG9yPGxsPnY7Zm9yKGludCBpPTI7aTw9bjtpKyspaWYoYVtpXT09MCl7di5wdXNoX2JhY2soaSk7Zm9yKGludCBqPTIqaTtqPD1uO2orPWkpYVtqXT0xO31yZXR1cm4gdjt9Ci8vIGNvbnN0IGludCBOID0gMmU1ICsgMTIsIE0gPSAxZTggKyAxNTsKLy8gaW50IGFycltOXSwgcHJlW05dLCBkcFtNXTsKLy8gcHJpb3JpdHlfcXVldWU8aW50LHZlY3RvcjxpbnQ+LGdyZWF0ZXI8aW50Pj4gcHE7Ci8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCnZvaWQgc29sdmUoKSB7CglpbnQgbjsgY2luID4+IG47Cgl2ZWN0b3I8aW50PiBhKG4pOwoJaW5wdXQoYSwgbik7CgkvLyBkZWJ1ZyhhKTsKCS8vIG91dHB1dChhLG4sIiAiKTsKCS8vIGNvdXQgPDwgZW5kbDsKCS8vIHJldHVybjsKfQoKaW50IG1haW4oKSB7CglwcmNzOyBmYXN0OwojaWZuZGVmIE9OTElORV9KVURHRQoJZnJlb3BlbigiemluLnR4dCIsICJyIiwgc3RkaW4pOwoJZnJlb3Blbigiem91dC50eHQiLCAidyIsIHN0ZG91dCk7CglmcmVvcGVuKCJ6ZXJyLnR4dCIsICJ3Iiwgc3RkZXJyKTsKI2VuZGlmCglhdXRvIHN0YXJ0ID0gaGlnaF9yZXNvbHV0aW9uX2Nsb2NrOjpub3coKTsKCWludCBUID0gMTsKCWNpbiA+PiBUOwoJZm9yIChpbnQgaSA9IDE7IGkgPD0gVDsgaSsrKSB7CgkJLy8gZ29vZ2xlKGkpOwoJCXNvbHZlKCk7Cgl9CglhdXRvIHN0b3AgPSBoaWdoX3Jlc29sdXRpb25fY2xvY2s6Om5vdygpOwoJYXV0byBkdXJhdGlvbiA9IGR1cmF0aW9uX2Nhc3Q8bmFub3NlY29uZHM+KHN0b3AgLSBzdGFydCk7CiNpZm5kZWYgT05MSU5FX0pVREdFCgljZXJyIDw8ICJcbltDb21wbGV0ZWQgaW4gIiA8PCAoKGxkKWR1cmF0aW9uLmNvdW50KCkpIC8gKChsZCkxZTkpIDw8ICIgc10iIDw8IGVuZGw7CiNlbmRpZgoJcmV0dXJuIDA7Cn0K",
							"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqFAAAAAAAAMoGAAAAAAAAAAAAAAAA8L8"
						]
					]
				},
				{
					"file": "/C/Users/2001a/Downloads/new.cpp",
					"settings":
					{
						"buffer_size": 5437,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							4,
							1,
							"paste",
							null,
							"AgAAAAAAAAAAAAAAMRMAAAAAAAAAAAAAMRMAAAAAAAAxEwAAAAAAALUGAAAvKgoxNjQyLiBGdXJ0aGVzdCBCdWlsZGluZyBZb3UgQ2FuIFJlYWNoCllvdSBhcmUgZ2l2ZW4gYW4gaW50ZWdlciBhcnJheSBoZWlnaHRzIHJlcHJlc2VudGluZyB0aGUgaGVpZ2h0cyBvZiBidWlsZGluZ3MsIHNvbWUgYnJpY2tzLCBhbmQgc29tZSBsYWRkZXJzLgpZb3Ugc3RhcnQgeW91ciBqb3VybmV5IGZyb20gYnVpbGRpbmcgMCBhbmQgbW92ZSB0byB0aGUgbmV4dCBidWlsZGluZyBieSBwb3NzaWJseSB1c2luZyBicmlja3Mgb3IgbGFkZGVycy4KV2hpbGUgbW92aW5nIGZyb20gYnVpbGRpbmcgaSB0byBidWlsZGluZyBpKzEgKDAtaW5kZXhlZCksCklmIHRoZSBjdXJyZW50IGJ1aWxkaW5nJ3MgaGVpZ2h0IGlzIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byB0aGUgbmV4dCBidWlsZGluZydzIGhlaWdodCwgeW91IGRvIG5vdCBuZWVkIGEgbGFkZGVyIG9yIGJyaWNrcy4KSWYgdGhlIGN1cnJlbnQgYnVpbGRpbmcncyBoZWlnaHQgaXMgbGVzcyB0aGFuIHRoZSBuZXh0IGJ1aWxkaW5nJ3MgaGVpZ2h0LCB5b3UgY2FuIGVpdGhlciB1c2Ugb25lIGxhZGRlciBvciAoaFtpKzFdIC0gaFtpXSkgYnJpY2tzLgpSZXR1cm4gdGhlIGZ1cnRoZXN0IGJ1aWxkaW5nIGluZGV4ICgwLWluZGV4ZWQpIHlvdSBjYW4gcmVhY2ggaWYgeW91IHVzZSB0aGUgZ2l2ZW4gbGFkZGVycyBhbmQgYnJpY2tzIG9wdGltYWxseS4KCgpFeGFtcGxlIDE6CgpJbnB1dDogaGVpZ2h0cyA9IFs0LDIsNyw2LDksMTQsMTJdLCBicmlja3MgPSA1LCBsYWRkZXJzID0gMQpPdXRwdXQ6IDQKRXhwbGFuYXRpb246IFN0YXJ0aW5nIGF0IGJ1aWxkaW5nIDAsIHlvdSBjYW4gZm9sbG93IHRoZXNlIHN0ZXBzOgotIEdvIHRvIGJ1aWxkaW5nIDEgd2l0aG91dCB1c2luZyBsYWRkZXJzIG5vciBicmlja3Mgc2luY2UgNCA+PSAyLgotIEdvIHRvIGJ1aWxkaW5nIDIgdXNpbmcgNSBicmlja3MuIFlvdSBtdXN0IHVzZSBlaXRoZXIgYnJpY2tzIG9yIGxhZGRlcnMgYmVjYXVzZSAyIDwgNy4KLSBHbyB0byBidWlsZGluZyAzIHdpdGhvdXQgdXNpbmcgbGFkZGVycyBub3IgYnJpY2tzIHNpbmNlIDcgPj0gNi4KLSBHbyB0byBidWlsZGluZyA0IHVzaW5nIHlvdXIgb25seSBsYWRkZXIuIFlvdSBtdXN0IHVzZSBlaXRoZXIgYnJpY2tzIG9yIGxhZGRlcnMgYmVjYXVzZSA2IDwgOS4KSXQgaXMgaW1wb3NzaWJsZSB0byBnbyBiZXlvbmQgYnVpbGRpbmcgNCBiZWNhdXNlIHlvdSBkbyBub3QgaGF2ZSBhbnkgbW9yZSBicmlja3Mgb3IgbGFkZGVycy4KCgpFeGFtcGxlIDI6CgpJbnB1dDogaGVpZ2h0cyA9IFs0LDEyLDIsNywzLDE4LDIwLDMsMTldLCBicmlja3MgPSAxMCwgbGFkZGVycyA9IDIKT3V0cHV0OiA3CkV4YW1wbGUgMzoKCklucHV0OiBoZWlnaHRzID0gWzE0LDMsMTksM10sIGJyaWNrcyA9IDE3LCBsYWRkZXJzID0gMApPdXRwdXQ6IDMKIAoKQ29uc3RyYWludHM6CgoxIDw9IGhlaWdodHMubGVuZ3RoIDw9IDEwNQoxIDw9IGhlaWdodHNbaV0gPD0gMTA2CjAgPD0gYnJpY2tzIDw9IDEwOQowIDw9IGxhZGRlcnMgPD0gaGVpZ2h0cy5sZW5ndGgKKi8KCgojaW5jbHVkZSA8Yml0cy9zdGRjKysuaD4KdXNpbmcgbmFtZXNwYWNlIHN0ZDsKCmNsYXNzIFNvbHV0aW9uIHsKcHVibGljOgogICAgaW50IGZ1cnRoZXN0QnVpbGRpbmcodmVjdG9yPGludD4gJmhlaWdodHMsIGludCBicmlja3MsIGludCBsYWRkZXJzKSB7CiAgICAgICAgaW50IG4gPSBoZWlnaHRzLnNpemUoKTsKICAgIH0KfTsK",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAtQYAAAAAAAAAAAAAAADwvw"
						],
						[
							5,
							1,
							"astyleformat",
							null,
							"CAAAAOsLAAAAAAAA7AsAAAAAAAAAAAAAjgwAAAAAAACPDAAAAAAAAAAAAADzEQAAAAAAAPQRAAAAAAAAAAAAAPURAAAAAAAA9hEAAAAAAAAAAAAA+hEAAAAAAAD7EQAAAAAAAAAAAAD8EQAAAAAAAP0RAAAAAAAAAAAAAAcSAAAAAAAACRIAAAAAAAAAAAAANBIAAAAAAAA2EgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADETAAAAAAAAMRMAAAAAAAAAAAAAAADwvw"
						],
						[
							8,
							1,
							"cut",
							null,
							"AQAAAOkJAAAAAAAA6QkAAAAAAAB/AAAACnRlbXBsYXRlPGNsYXNzIFQ+IHZvaWQgX3ByaW50KHByaW9yaXR5X3F1ZXVlPFQ+IHYpOwp0ZW1wbGF0ZTxjbGFzcyBUPiB2b2lkIF9wcmludChwcmlvcml0eV9xdWV1ZTxULCB2ZWN0b3I8VD4sIGdyZWF0ZXI8VD4+IHYpOw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgKAAAAAAAA6QkAAAAAAAAAAAAAAADwvw"
						],
						[
							12,
							1,
							"paste",
							null,
							"AQAAALQKAAAAAAAAMwsAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQKAAAAAAAAtAoAAAAAAAAAAAAAAADwvw"
						],
						[
							19,
							1,
							"cut",
							null,
							"AQAAAKMLAAAAAAAAowsAAAAAAAAvAQAACnRlbXBsYXRlPGNsYXNzIFQ+IHZvaWQgX3ByaW50KHByaW9yaXR5X3F1ZXVlPFQ+IHYpIHtjZXJyIDw8ICJbICI7IHdoaWxlICghdi5lbXB0eSgpKSB7X3ByaW50KHYudG9wKCkpOyBjZXJyIDw8ICIgIjsgdi5wb3AoKTt9IGNlcnIgPDwgIl0iO30KdGVtcGxhdGU8Y2xhc3MgVD4gdm9pZCBfcHJpbnQocHJpb3JpdHlfcXVldWU8VCwgdmVjdG9yPFQ+LCBncmVhdGVyPFQ+PiB2KSB7Y2VyciA8PCAiWyAiOyB3aGlsZSAoIXYuZW1wdHkoKSkge19wcmludCh2LnRvcCgpKTsgY2VyciA8PCAiICI7IHYucG9wKCk7fSBjZXJyIDw8ICJdIjt9",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANIMAAAAAAAAowsAAAAAAAAAAAAAAADwvw"
						],
						[
							29,
							1,
							"paste",
							null,
							"AQAAAHUOAAAAAAAApA8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUOAAAAAAAAdQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							3,
							1,
							"paste",
							null,
							"AgAAAAMQAAAAAAAAkhMAAAAAAAAAAAAAkhMAAAAAAACSEwAAAAAAAIEBAABjbGFzcyBTb2x1dGlvbiB7CnB1YmxpYzoKICAgIHZlY3Rvcjx2ZWN0b3I8aW50Pj4gcmVjb25zdHJ1Y3RRdWV1ZSh2ZWN0b3I8dmVjdG9yPGludD4+ICZwZW9wbGUpIHsKICAgICAgICBpbnQgbiA9IChpbnQpKHBlb3BsZS5zaXplKCkpOwogICAgICAgIHZlY3Rvcjx2ZWN0b3I8aW50Pj4gcXVldWUobiwgdmVjdG9yPGludD4gKDIpKTsKICAgICAgICBwcmlvcml0eV9xdWV1ZTxpbnQsIHZlY3RvcjxpbnQ+LCBncmVhdGVyPGludD4+IHBxOwogICAgICAgIGZvciAodmVjdG9yPGludD4gJnBlcnNvbiA6IHBlb3BsZSkgewogICAgICAgICAgICBwcS5wdXNoKHBlcnNvblswXSk7CiAgICAgICAgfQogICAgICAgIGRlYnVnKHBxKTsKICAgICAgICByZXR1cm4gcXVldWU7CiAgICB9Cn07",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEEQAAAAAAAAMQAAAAAAAAAAAAAAAA8L8"
						],
						[
							4,
							1,
							"astyleformat",
							null,
							"BgAAADUQAAAAAAAANhAAAAAAAAAAAAAARxIAAAAAAABIEgAAAAAAAAAAAABVEgAAAAAAAFYSAAAAAAAAAAAAAIkSAAAAAAAAiRIAAAAAAAABAAAAIJsSAAAAAAAAnBIAAAAAAAAAAAAAyRIAAAAAAADKEgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSEwAAAAAAAJITAAAAAAAAAAAAAAAA8L8"
						],
						[
							17,
							1,
							"insert",
							{
								"characters": ","
							},
							"AgAAAG0SAAAAAAAAbhIAAAAAAAAAAAAAbhIAAAAAAABuEgAAAAAAABIAAAA7CiAgICAgICAgICAgIGludCA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/EgAAAAAAAG0SAAAAAAAAAAAAAAAA8L8"
						],
						[
							18,
							1,
							"astyleformat",
							null,
							"AQAAAG4SAAAAAAAAbxIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuEgAAAAAAAG4SAAAAAAAAAAAAAAAA8L8"
						]
					]
				},
				{
					"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/zin.txt",
					"settings":
					{
						"buffer_size": 0,
						"line_ending": "Windows"
					}
				},
				{
					"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/zout.txt",
					"settings":
					{
						"buffer_size": 0,
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							5,
							1,
							"revert",
							null,
							"FAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAMAo
							"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAA8L8"
						]
					]
				},
				{
					"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/zerr.txt",
					"settings":
					{
						"buffer_size": 136,
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							3,
							1,
							"revert",
							null,
							"CgAAAAAAAAAAAAAAAAAAAAAAAACIAAAAYXJyIDogWyAyIDUgMiAxIDUgNSAyIDIgMSA2IDYgNyBdCnN0MSA6IHsgNyA2IDEgMiA1IH0KbGVuIDogNQpzdDEgOiB7IDYgMSAyIDUgfQpzdDEgOiB7IDYgMSAyIH0Kc3QxIDogeyAxIDIgfQpzdDEgOiB7IH0Kc3QyIDogeyB9CippdCA6IAAAAAAAAAAAiAAAAAAAAAAAAAAAAAAAAAAAAACIAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAAAAAAAAAAAAAAAAAAAAAAAiAAAAAAAAAAAAAAAAAAAAAAAAACIAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAAAAAAAAAAAAAAAAAAAAAAAiAAAAAAAAAAAAAAAAAAAAAAAAACIAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAAAAAAAAAAAAA",
							"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAADwvw"
						],
						[
							1,
							1,
							"revert",
							null,
							"AwAAAAAAAAAAAAAAAAAAAAAAAACIAAAAYXJyIDogWyAyIDUgMiAxIDUgNSAyIDIgMSA2IDYgNyBdCnN0MSA6IHsgNyA2IDEgMiA1IH0KbGVuIDogNQpzdDEgOiB7IDYgMSAyIDUgfQpzdDEgOiB7IDYgMSAyIH0Kc3QxIDogeyAxIDIgfQpzdDEgOiB7IH0Kc3QyIDogeyB9CippdCA6IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAAPC/"
						]
					]
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Packages/C++/C Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/User/C++ 14.sublime-build",
							""
						],
						[
							"Packages/User/C++ 14.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/User/C++ 14.sublime-build",
							""
						],
						[
							"Packages/User/C++ 14.sublime-build",
							"Run"
						]
					],
					[
						"Packages/User/C++ 14.sublime-build",
						"Run"
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"fo",
						"SublimeAStyleFormatter: Format Current File"
					],
					[
						"for",
						"SublimeAStyleFormatter: Format Current File"
					],
					[
						"buil",
						"Build: Cancel"
					],
					[
						"auto",
						"Toggle AutoSave: all files"
					],
					[
						"au",
						"Toggle AutoSave: all files"
					],
					[
						"forma",
						"SublimeAStyleFormatter: Format Current File"
					],
					[
						"aut",
						"Toggle AutoSave: all files"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"pac",
						"Package Control: Install Package"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 128.981124878,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer",
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers",
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers"
			],
			"file_history":
			[
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Associative_Containers/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Associative_Containers/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Associative_Containers/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/unordered_set.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1400/zin.txt",
				"/C/Users/2001a/Music/test.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/test.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1367C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1594E1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1604C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1591C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1561C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1335D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1323C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1454D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/017_APRIL221C_DIV3/05_XORABC.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/05_XORABC.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/04_PRIMESM.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/03_AXNODR.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/02_NOTUNIT.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/01_WATERCOOLER2.cpp",
				"/C/Users/2001a/Downloads/Compiler_Asg3/Atanu/q4_new.cpp",
				"/C/Users/2001a/Downloads/Compiler_Asg3/Atanu/q4_trial.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1534C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1401C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1328B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/1665D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/1665C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/1665B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/1665A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/024_#781_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1365B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1612C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1372B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/230B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/05_TwistyLittlePassages.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/04_ChainReactions.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/03_d1000000.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/02_3DPrinting.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeJam_2022/01_PunchCards.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1360D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1553B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1476B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/1660C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/1660D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/1660B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/023_#780_DIV3/1660A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1574C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1607D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1617C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1555B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1547D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1618D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/07_MINSUB.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/06_MAX01EVSWP.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/05_MISS_NUM.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/D2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/D1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/E.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/README.md",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/04_RATING.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/03_CHEFRACES.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/02_THREETOPICS.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/016_MARCH222D_DIV4/01_INCRIQ.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1560D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1521B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1538C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1555C.cpp",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpz.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpy.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpx.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpw.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpv.sublime-snippet",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/try1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/temp2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656E.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/temp2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/C.cpp"
			],
			"find":
			{
				"height": 28.0754716981
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"size"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
				],
				"reverse": false,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "C:\\Users\\2001a\\Documents\\GitHub\\CPP-STL-Primer"
				}
			],
			"groups":
			[
				{
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Associative_Containers/multiset.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 905,
								"regions":
								{
								},
								"selection":
								[
									[
										864,
										864
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 96.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/unordered_multiset.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 409,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Associative_Containers/set.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1811,
								"regions":
								{
								},
								"selection":
								[
									[
										733,
										733
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 412.981132075,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/unordered_set.cpp",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1738,
								"regions":
								{
								},
								"selection":
								[
									[
										1738,
										1738
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 1301.43396226,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/C/Users/2001a/Downloads/new.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5437,
								"regions":
								{
								},
								"selection":
								[
									[
										4998,
										4998
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 1234.41509434,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				},
				{
					"sheets":
					[
						{
							"buffer": 5,
							"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/zin.txt",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 0,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				},
				{
					"sheets":
					[
						{
							"buffer": 6,
							"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/zout.txt",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 0,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 7,
							"file": "/C/Users/2001a/Documents/GitHub/CPP-STL-Primer/Containers/Unordered_Associative_Containers/zerr.txt",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 136,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 28.0754716981
			},
			"input":
			{
				"height": 39.3207550049
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						2
					],
					[
						1,
						0,
						2,
						1
					],
					[
						1,
						1,
						2,
						2
					]
				],
				"cols":
				[
					0.0,
					0.734055908732,
					1.0
				],
				"rows":
				[
					0.0,
					0.5,
					1.0
				]
			},
			"menu_visible": true,
			"output.astyle_error_message":
			{
				"height": 0.0
			},
			"output.exec":
			{
				"height": 72.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "Packages/User/CPP17.sublime-build",
			"position": "0,2,3,-1,-1,-1,-1,902,7,0,1377,d95a77b0a7c2034e8744cb8f415a6a73",
			"project": "",
			"replace":
			{
				"height": 52.5283018868
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
				"last_automatic_layout":
				[
					[
						0,
						0,
						1,
						2
					],
					[
						1,
						0,
						2,
						1
					],
					[
						1,
						1,
						2,
						2
					]
				]
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 207.0,
			"status_bar_visible": true,
			"template_settings":
			{
				"max_columns": 2
			},
			"window_id": 81,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
