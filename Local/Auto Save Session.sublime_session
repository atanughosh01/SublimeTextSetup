{
	"folder_history":
	[
		"/C/Users/2001a/Documents/GitHub/CPMaster",
		"/C/Users/2001a/Documents/GitHub/CPP-STL-Primer",
		"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces",
		"/C/Users/2001a/Downloads/1633",
		"/C/Users/2001a/Documents/GitHub/Data-structures-and-algorithms",
		"/C/Users/2001a/Documents",
		"/C/Users/2001a",
		"/C/Users/2001a/Documents/GitHub/algorithmic-problem-solving",
		"/C/Users/2001a/Documents/GitHub/sublime-text-setup",
		"/C/Users/2001a/Documents/GitHub/C4E_Coursera",
		"/C/Users/2001a/Documents/GitHub/Network-Simulations",
		"/C/Users/2001a/Downloads/Arko",
		"/C/Users/2001a/Documents/GitHub/Network-Simulations/2_FlowControl/src/Trial2",
		"/C/Users/2001a/Documents/GitHub/Network-Simulations/3_CSMA",
		"/C/Users/2001a/Documents/zzz/CN_Assignment_4",
		"/C/Users/2001a/Documents/zzz/CN_Assignment_3/Arko",
		"/C/Users/2001a/Music/test",
		"/C/Users/2001a/Documents/GitHub/Network-Simulations/FlowControl",
		"/C/Users/2001a/Documents/GitHub/Udemy",
		"/C/Users/2001a/Dropbox/PC/Documents/Codes/Chiru_CN",
		"/C/Users/2001a/Dropbox/PC/Documents/Java_Assignments",
		"/C/Users/2001a/Dropbox/PC/Documents/Codes"
	],
	"last_version": 4126,
	"last_window_id": 78,
	"log_indexing": false,
	"next_update_check": 1648204975,
	"settings":
	{
		"new_window_full_screen": false,
		"new_window_height": 852.226415094,
		"new_window_maximized": true,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"cp",
						"cpsnip"
					],
					[
						"sol",
						"solFunc"
					],
					[
						"un",
						"unordered_map"
					],
					[
						"INT",
						"INT_MIN"
					],
					[
						"IN",
						"INT_MAX"
					],
					[
						"em",
						"emplace_back"
					],
					[
						"be",
						"beginend"
					],
					[
						"le",
						"lengthOfLongestSubstring"
					],
					[
						"ve",
						"ver1Nums"
					],
					[
						"slope",
						"slope_0"
					],
					[
						"max",
						"maxSubArraySum"
					],
					[
						"maxS",
						"maxSum"
					],
					[
						"uno",
						"unordered_map"
					],
					[
						"de",
						"debug"
					],
					[
						"s",
						"s1"
					],
					[
						"emp",
						"emplace_back"
					],
					[
						"inc",
						"include"
					],
					[
						"is",
						"isPowOf2"
					],
					[
						"no",
						"node2"
					],
					[
						"MO",
						"MOD"
					],
					[
						"cpsnip",
						"cpsnip"
					],
					[
						"def",
						"define"
					],
					[
						"cpp",
						"cpsnip"
					],
					[
						"su",
						"subsLst"
					],
					[
						"deb",
						"debug"
					],
					[
						"mem",
						"memset"
					],
					[
						"solve",
						"solve3"
					],
					[
						"ma",
						"maxCnt"
					],
					[
						"v",
						"vector"
					],
					[
						"en",
						"end"
					],
					[
						"fo",
						"FOR"
					],
					[
						"solv",
						"solve2"
					],
					[
						"l",
						"length"
					],
					[
						"cou",
						"cout"
					],
					[
						"beg",
						"beginend"
					],
					[
						"to",
						"toupper"
					],
					[
						"co",
						"cout"
					],
					[
						"m",
						"maxPower"
					],
					[
						"scor",
						"scoreList"
					]
				]
			},
			"build_system_choices":
			[
				[
					[
						[
							"Packages/C++/C Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/User/C++ 14.sublime-build",
							""
						],
						[
							"Packages/User/C++ 14.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/User/C++ 14.sublime-build",
							""
						],
						[
							"Packages/User/C++ 14.sublime-build",
							"Run"
						]
					],
					[
						"Packages/User/C++ 14.sublime-build",
						"Run"
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"fo",
						"SublimeAStyleFormatter: Format Current File"
					],
					[
						"for",
						"SublimeAStyleFormatter: Format Current File"
					],
					[
						"buil",
						"Build: Cancel"
					],
					[
						"auto",
						"Toggle AutoSave: all files"
					],
					[
						"au",
						"Toggle AutoSave: all files"
					],
					[
						"forma",
						"SublimeAStyleFormatter: Format Current File"
					],
					[
						"aut",
						"Toggle AutoSave: all files"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"pac",
						"Package Control: Install Package"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 128.981124878,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/try1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/temp2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656E.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/temp2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/E.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1536B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1514B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1497C1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1527B1.cpp",
				"/C/Users/2001a/Downloads/assignment3.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/4.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/temp.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1553C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1539C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/test.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1541B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1559C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1537C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1520D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1385C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1339B.cpp",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpv.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpw.sublime-snippet",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/08_SUB_XOR.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/07_SUBSTRING.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/06_GENIUS.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/05_CHFDBT.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/04_CHFCLASS.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/03_WORDLE.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/02_BATH.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/01_DISCUS.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/1647A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/1647B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/1647C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/1647D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/temp2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/try1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1353A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1354B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/018_#776_DIV3/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/018_#776_DIV3/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/018_#776_DIV3/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/018_#776_DIV3/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/018_#776_DIV3/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/018_#776_DIV3/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/README.md",
				"/C/Users/2001a/Downloads/Compiler_Asg3/MH/zin.txt",
				"/C/Users/2001a/Downloads/Compiler_Asg3/MH/zin_3.txt",
				"/C/Users/2001a/Downloads/Compiler_Asg3/MH/q3.cpp",
				"/C/Users/2001a/Downloads/Compiler_Asg3/MH/ques_2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/AtCoder/BeginnerContest240/abc240_A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/1646C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/1646B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/1646A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/1646D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/try1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/temp2.cpp",
				"/C/Program Files/Sublime Text/zerr.txt",
				"/C/Program Files/Sublime Text/zout.txt",
				"/C/Program Files/Sublime Text/zin.txt",
				"/C/Program Files/Sublime Text/new.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1100/1365A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/04_MAGICMOD.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/03_MAGNETSORT.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/02_DISTCON.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/01_PLPROCESS.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/04.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/03.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/02.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/01.cpp"
			],
			"find":
			{
				"height": 28.0754716981
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"int64_t",
					"'\\n'",
					"want",
					"inp",
					"emplace_back",
					"list",
					"Check",
					"Disc",
					"LCM",
					"check",
					"solFunc",
					"vp",
					"cand",
					"pre",
					"vll",
					"SOLVE",
					"last",
					"start",
					"inputFiles",
					"NET_PAY",
					"val",
					"push_back",
					"emplace_back",
					"idxap",
					"sw",
					"vp",
					"curr",
					"__lg",
					"nl"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
				],
				"reverse": false,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 28.0754716981
			},
			"input":
			{
				"height": 39.3207550049
			},
			"menu_visible": true,
			"output.astyle_error_message":
			{
				"height": 0.0
			},
			"output.exec":
			{
				"height": 180.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "Packages/User/CPP17.sublime-build",
			"replace":
			{
				"height": 52.5283018868
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 231.0,
			"status_bar_visible": true,
			"template_settings":
			{
				"max_columns": 2
			}
		},
		"new_window_width": 1369.35849057
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"cp",
						"cpsnip"
					],
					[
						"sol",
						"solFunc"
					],
					[
						"un",
						"unordered_map"
					],
					[
						"INT",
						"INT_MIN"
					],
					[
						"IN",
						"INT_MAX"
					],
					[
						"em",
						"emplace_back"
					],
					[
						"be",
						"beginend"
					],
					[
						"le",
						"lengthOfLongestSubstring"
					],
					[
						"ve",
						"ver1Nums"
					],
					[
						"slope",
						"slope_0"
					],
					[
						"max",
						"maxSubArraySum"
					],
					[
						"maxS",
						"maxSum"
					],
					[
						"uno",
						"unordered_map"
					],
					[
						"de",
						"debug"
					],
					[
						"s",
						"s1"
					],
					[
						"emp",
						"emplace_back"
					],
					[
						"inc",
						"include"
					],
					[
						"is",
						"isPowOf2"
					],
					[
						"no",
						"node2"
					],
					[
						"MO",
						"MOD"
					],
					[
						"cpsnip",
						"cpsnip"
					],
					[
						"def",
						"define"
					],
					[
						"cpp",
						"cpsnip"
					],
					[
						"su",
						"subsLst"
					],
					[
						"deb",
						"debug"
					],
					[
						"mem",
						"memset"
					],
					[
						"solve",
						"solve3"
					],
					[
						"ma",
						"maxCnt"
					],
					[
						"v",
						"vector"
					],
					[
						"en",
						"end"
					],
					[
						"fo",
						"FOR"
					],
					[
						"solv",
						"solve2"
					],
					[
						"l",
						"length"
					],
					[
						"cou",
						"cout"
					],
					[
						"beg",
						"beginend"
					],
					[
						"to",
						"toupper"
					],
					[
						"co",
						"cout"
					],
					[
						"m",
						"maxPower"
					],
					[
						"scor",
						"scoreList"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1538C.cpp",
					"settings":
					{
						"buffer_size": 8311,
						"encoding": "UTF-8",
						"line_ending": "Windows",
						"name": "1538C.cpp"
					},
					"undo_stack":
					[
						[
							197,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAC8OAAAAAAAALw4AAAAAAAADAAAALy8g",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLDgAAAAAAAEsOAAAAAAAAAAAAAAAA8L8"
						],
						[
							201,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAGQJAAAAAAAAZwkAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCCQAAAAAAAIIJAAAAAAAAAAAAAAAA8L8"
						],
						[
							209,
							1,
							"paste",
							null,
							"AQAAAMcVAAAAAAAA8BUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHFQAAAAAAAMcVAAAAAAAAAAAAAAAA8L8"
						],
						[
							213,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAMgVAAAAAAAAyxUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIFQAAAAAAAMgVAAAAAAAAAAAAAAAA8L8"
						],
						[
							223,
							1,
							"paste",
							null,
							"AQAAAMYXAAAAAAAAixgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGFwAAAAAAAMYXAAAAAAAAAAAAAAAA8L8"
						],
						[
							227,
							1,
							"insert",
							{
								"characters": "//"
							},
							"AgAAAMcXAAAAAAAAyBcAAAAAAAAAAAAAyBcAAAAAAADJFwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHFwAAAAAAAMcXAAAAAAAAAAAAAAAA8L8"
						],
						[
							228,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAMkXAAAAAAAAyhcAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJFwAAAAAAAMkXAAAAAAAAAAAAAAAA8L8"
						],
						[
							234,
							1,
							"left_delete",
							null,
							"AQAAAOoXAAAAAAAA6hcAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrFwAAAAAAAOsXAAAAAAAAAAAAAAAA8L8"
						],
						[
							238,
							1,
							"left_delete",
							null,
							"AQAAAOsXAAAAAAAA6xcAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsFwAAAAAAAOwXAAAAAAAAAAAAAAAA8L8"
						],
						[
							246,
							1,
							"insert",
							{
								"characters": "v"
							},
							"AgAAAAgYAAAAAAAACRgAAAAAAAAAAAAACRgAAAAAAAAJGAAAAAAAAAQAAAB2ZWN0",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIGAAAAAAAAAwYAAAAAAAAAAAAAAAA8L8"
						],
						[
							250,
							1,
							"left_delete",
							null,
							"AQAAAAcYAAAAAAAABxgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIGAAAAAAAAAgYAAAAAAAAAAAAAAAA8L8"
						],
						[
							256,
							1,
							"insert",
							{
								"characters": "v"
							},
							"AgAAADgYAAAAAAAAORgAAAAAAAAAAAAAORgAAAAAAAA5GAAAAAAAAAQAAAB2ZWN0",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4GAAAAAAAADwYAAAAAAAAAAAAAAAA8L8"
						],
						[
							262,
							1,
							"insert",
							{
								"characters": "v"
							},
							"AgAAAH8YAAAAAAAAgBgAAAAAAAAAAAAAgBgAAAAAAACAGAAAAAAAAAQAAAB2ZWN0",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/GAAAAAAAAIMYAAAAAAAAAAAAAAAA8L8"
						],
						[
							266,
							1,
							"left_delete",
							null,
							"AQAAAHEYAAAAAAAAcRgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByGAAAAAAAAHIYAAAAAAAAAAAAAAAA8L8"
						],
						[
							269,
							1,
							"right_delete",
							null,
							"AQAAAHIYAAAAAAAAchgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByGAAAAAAAAHIYAAAAAAAAAAAAAAAA8L8"
						],
						[
							275,
							1,
							"left_delete",
							null,
							"AQAAAGgYAAAAAAAAaBgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpGAAAAAAAAGkYAAAAAAAAAAAAAAAA8L8"
						],
						[
							279,
							1,
							"left_delete",
							null,
							"AQAAAGUYAAAAAAAAZRgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmGAAAAAAAAGYYAAAAAAAAAAAAAAAA8L8"
						],
						[
							283,
							1,
							"left_delete",
							null,
							"AQAAAGMYAAAAAAAAYxgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkGAAAAAAAAGQYAAAAAAAAAAAAAAAA8L8"
						],
						[
							287,
							1,
							"left_delete",
							null,
							"AQAAAGAYAAAAAAAAYBgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhGAAAAAAAAGEYAAAAAAAAAAAAAAAA8L8"
						],
						[
							291,
							1,
							"left_delete",
							null,
							"AQAAAF0YAAAAAAAAXRgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeGAAAAAAAAF4YAAAAAAAAAAAAAAAA8L8"
						],
						[
							295,
							1,
							"left_delete",
							null,
							"AQAAAFsYAAAAAAAAWxgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcGAAAAAAAAFwYAAAAAAAAAAAAAAAA8L8"
						],
						[
							299,
							1,
							"left_delete",
							null,
							"AQAAAFgYAAAAAAAAWBgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZGAAAAAAAAFkYAAAAAAAAAAAAAAAA8L8"
						],
						[
							311,
							1,
							"left_delete",
							null,
							"AQAAAFYYAAAAAAAAVhgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXGAAAAAAAAFcYAAAAAAAAAAAAAAAA8L8"
						],
						[
							315,
							1,
							"left_delete",
							null,
							"AQAAAFQYAAAAAAAAVBgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVGAAAAAAAAFUYAAAAAAAAAAAAAAAA8L8"
						],
						[
							318,
							1,
							"left_delete",
							null,
							"AQAAAFIYAAAAAAAAUhgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTGAAAAAAAAFMYAAAAAAAAAAAAAAAA8L8"
						],
						[
							322,
							1,
							"left_delete",
							null,
							"AQAAAEsYAAAAAAAASxgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMGAAAAAAAAEwYAAAAAAAAAAAAAAAA8L8"
						],
						[
							326,
							1,
							"left_delete",
							null,
							"AQAAAEcYAAAAAAAARxgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIGAAAAAAAAEgYAAAAAAAAAAAAAAAA8L8"
						],
						[
							330,
							1,
							"left_delete",
							null,
							"AQAAADYYAAAAAAAANhgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3GAAAAAAAADcYAAAAAAAAAAAAAAAA8L8"
						],
						[
							334,
							1,
							"left_delete",
							null,
							"AQAAADMYAAAAAAAAMxgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0GAAAAAAAADQYAAAAAAAAAAAAAAAA8L8"
						],
						[
							338,
							1,
							"left_delete",
							null,
							"AQAAADAYAAAAAAAAMBgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxGAAAAAAAADEYAAAAAAAAAAAAAAAA8L8"
						],
						[
							342,
							1,
							"left_delete",
							null,
							"AQAAACgYAAAAAAAAKBgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApGAAAAAAAACkYAAAAAAAAAAAAAAAA8L8"
						],
						[
							346,
							1,
							"left_delete",
							null,
							"AQAAACEYAAAAAAAAIRgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiGAAAAAAAACIYAAAAAAAAAAAAAAAA8L8"
						],
						[
							350,
							1,
							"left_delete",
							null,
							"AQAAAB4YAAAAAAAAHhgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfGAAAAAAAAB8YAAAAAAAAAAAAAAAA8L8"
						],
						[
							354,
							1,
							"left_delete",
							null,
							"AQAAABsYAAAAAAAAGxgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcGAAAAAAAABwYAAAAAAAAAAAAAAAA8L8"
						],
						[
							357,
							1,
							"left_delete",
							null,
							"AQAAABkYAAAAAAAAGRgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaGAAAAAAAABoYAAAAAAAAAAAAAAAA8L8"
						],
						[
							361,
							1,
							"left_delete",
							null,
							"AQAAABYYAAAAAAAAFhgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXGAAAAAAAABcYAAAAAAAAAAAAAAAA8L8"
						],
						[
							364,
							1,
							"left_delete",
							null,
							"AQAAABQYAAAAAAAAFBgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVGAAAAAAAABUYAAAAAAAAAAAAAAAA8L8"
						],
						[
							368,
							1,
							"left_delete",
							null,
							"AQAAAA0YAAAAAAAADRgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOGAAAAAAAAA4YAAAAAAAAAAAAAAAA8L8"
						],
						[
							372,
							1,
							"left_delete",
							null,
							"AQAAAAkYAAAAAAAACRgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKGAAAAAAAAAoYAAAAAAAAAAAAAAAA8L8"
						],
						[
							376,
							1,
							"left_delete",
							null,
							"AQAAAF0YAAAAAAAAXRgAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeGAAAAAAAAF4YAAAAAAAAAAAAAAAA8L8"
						],
						[
							380,
							1,
							"left_delete",
							null,
							"AQAAAPwXAAAAAAAA/BcAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9FwAAAAAAAP0XAAAAAAAAAAAAAAAA8L8"
						],
						[
							386,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAPoRAAAAAAAA+xEAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6EQAAAAAAAPoRAAAAAAAAAAAAAAAA8L8"
						],
						[
							396,
							1,
							"astyleformat",
							null,
							"AQAAAPoRAAAAAAAA+hEAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7EQAAAAAAAPsRAAAAAAAAAAAAAAAA8L8"
						],
						[
							458,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAPoRAAAAAAAA+xEAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6EQAAAAAAAPoRAAAAAAAAAAAAAAAA8L8"
						],
						[
							459,
							1,
							"astyleformat",
							null,
							"AQAAAPoRAAAAAAAA+hEAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7EQAAAAAAAPsRAAAAAAAAAAAAAAAA8L8"
						],
						[
							460,
							1,
							"insert",
							{
								"characters": " //"
							},
							"AwAAAPoRAAAAAAAA+xEAAAAAAAAAAAAA+xEAAAAAAAD8EQAAAAAAAAAAAAD8EQAAAAAAAP0RAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6EQAAAAAAAPoRAAAAAAAAAAAAAAAA8L8"
						],
						[
							461,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAP0RAAAAAAAA/hEAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9EQAAAAAAAP0RAAAAAAAAAAAAAAAA8L8"
						],
						[
							462,
							1,
							"astyleformat",
							null,
							"AQAAAP0RAAAAAAAA/REAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+EQAAAAAAAP4RAAAAAAAAAAAAAAAA8L8"
						],
						[
							463,
							1,
							"insert",
							{
								"characters": "O"
							},
							"AQAAAP0RAAAAAAAA/hEAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9EQAAAAAAAP0RAAAAAAAAAAAAAAAA8L8"
						],
						[
							464,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAP4RAAAAAAAAABIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+EQAAAAAAAP4RAAAAAAAAAAAAAAAA8L8"
						],
						[
							465,
							1,
							"insert",
							{
								"characters": "sqrt"
							},
							"BAAAAP8RAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAABEgAAAAAAAAAAAAABEgAAAAAAAAISAAAAAAAAAAAAAAISAAAAAAAAAxIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/EQAAAAAAAP8RAAAAAAAAAAAAAAAA8L8"
						],
						[
							467,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAAMSAAAAAAAABRIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADEgAAAAAAAAMSAAAAAAAAAAAAAAAA8L8"
						],
						[
							468,
							1,
							"insert",
							{
								"characters": "N"
							},
							"AQAAAAQSAAAAAAAABRIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEEgAAAAAAAAQSAAAAAAAAAAAAAAAA8L8"
						],
						[
							478,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AQAAAAEVAAAAAAAAAhUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABFQAAAAAAAAEVAAAAAAAAAAAAAAAA8L8"
						],
						[
							481,
							1,
							"paste",
							null,
							"AQAAAAEVAAAAAAAATRUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABFQAAAAAAAAEVAAAAAAAAAAAAAAAAAAA"
						],
						[
							482,
							1,
							"astyleformat",
							null,
							"AQAAAEwVAAAAAAAATBUAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNFQAAAAAAAE0VAAAAAAAAAAAAAAAA8L8"
						],
						[
							485,
							1,
							"paste",
							null,
							"AgAAAAEVAAAAAAAAUhUAAAAAAAAAAAAAUhUAAAAAAABSFQAAAAAAAEsAAAB0UmFuZG9tTnVtYmVyKGxsIGwsIGxsIHIpIHtyZXR1cm4gdW5pZm9ybV9pbnRfZGlzdHJpYnV0aW9uPGxsPihsLCByKShybmcpO30",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMFQAAAAAAAAEVAAAAAAAAAAAAAAAA8L8"
						],
						[
							486,
							1,
							"astyleformat",
							null,
							"AQAAAFEVAAAAAAAAURUAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSFQAAAAAAAFIVAAAAAAAAAAAAAAAA8L8"
						],
						[
							489,
							1,
							"paste",
							null,
							"AQAAAI0OAAAAAAAA0Q4AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNDgAAAAAAAI0OAAAAAAAAAAAAAAAA8L8"
						],
						[
							490,
							1,
							"astyleformat",
							null,
							"AQAAAI0OAAAAAAAAjg4AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRDgAAAAAAANEOAAAAAAAAAAAAAAAA8L8"
						],
						[
							493,
							1,
							"left_delete",
							null,
							"AQAAAI0OAAAAAAAAjQ4AAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACODgAAAAAAAI4OAAAAAAAAAAAAAAAA8L8"
						],
						[
							494,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AQAAAI0OAAAAAAAAjg4AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNDgAAAAAAAI0OAAAAAAAAAAAAAAAA8L8"
						],
						[
							503,
							1,
							"delete_word",
							{
								"forward": false
							},
							"AQAAAAYaAAAAAAAABhoAAAAAAAABAAAAYQ",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHGgAAAAAAAAcaAAAAAAAAAAAAAAAA8L8"
						],
						[
							504,
							1,
							"paste",
							null,
							"AQAAAAYaAAAAAAAAFRoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGGgAAAAAAAAYaAAAAAAAAAAAAAAAA8L8"
						],
						[
							506,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAABUaAAAAAAAAFxoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVGgAAAAAAABUaAAAAAAAAAAAAAAAA8L8"
						],
						[
							508,
							1,
							"insert",
							{
								"characters": "10,"
							},
							"AwAAABYaAAAAAAAAFxoAAAAAAAAAAAAAFxoAAAAAAAAYGgAAAAAAAAAAAAAYGgAAAAAAABkaAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWGgAAAAAAABYaAAAAAAAAAAAAAAAA8L8"
						],
						[
							509,
							1,
							"insert",
							{
								"characters": " 20"
							},
							"AwAAABkaAAAAAAAAGhoAAAAAAAAAAAAAGhoAAAAAAAAbGgAAAAAAAAAAAAAbGgAAAAAAABwaAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZGgAAAAAAABkaAAAAAAAAAAAAAAAA8L8"
						],
						[
							513,
							1,
							"left_delete",
							null,
							"AQAAAI0OAAAAAAAAjQ4AAAAAAABFAAAACm10MTk5Mzcgcm5nKGNocm9ubzo6c3RlYWR5X2Nsb2NrOjpub3coKS50aW1lX3NpbmNlX2Vwb2NoKCkuY291bnQoKSk7",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSDgAAAAAAAI0OAAAAAAAAAAAAAAAA8L8"
						],
						[
							519,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAAEVAAAAAAAABBUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEFQAAAAAAAAQVAAAAAAAAAAAAAAAA8L8"
						],
						[
							531,
							1,
							"paste",
							null,
							"AQAAAB0QAAAAAAAAUBAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdEAAAAAAAAB0QAAAAAAAAAAAAAAAA8L8"
						],
						[
							533,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AQAAAFAQAAAAAAAAURAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAA8L8"
						],
						[
							537,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAB0QAAAAAAAAIBAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdEAAAAAAAAB0QAAAAAAAAAAAAAAAA8L8"
						],
						[
							539,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAB0QAAAAAAAAHRAAAAAAAAADAAAALy8g",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgEAAAAAAAACAQAAAAAAAAAAAAAAAA8L8"
						],
						[
							545,
							1,
							"paste",
							null,
							"AQAAACsbAAAAAAAAdhsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArGwAAAAAAACsbAAAAAAAAAAAAAAAA8L8"
						],
						[
							546,
							1,
							"astyleformat",
							null,
							"CgAAACwbAAAAAAAALBsAAAAAAAAEAAAAICAgICwbAAAAAAAALRsAAAAAAAAAAAAAMBsAAAAAAAAxGwAAAAAAAAAAAABJGwAAAAAAAEobAAAAAAAAAAAAAEwbAAAAAAAATBsAAAAAAAAIAAAAICAgICAgICBMGwAAAAAAAE4bAAAAAAAAAAAAAFkbAAAAAAAAWRsAAAAAAAAIAAAAICAgICAgICBZGwAAAAAAAFsbAAAAAAAAAAAAAGQbAAAAAAAAZBsAAAAAAAAEAAAAICAgIGQbAAAAAAAAZRsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2GwAAAAAAAHYbAAAAAAAAAAAAAAAA8L8"
						],
						[
							549,
							1,
							"left_delete",
							null,
							"AQAAAEIbAAAAAAAAQhsAAAAAAAABAAAAdA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDGwAAAAAAAEMbAAAAAAAAAAAAAAAA8L8"
						],
						[
							550,
							1,
							"insert",
							{
								"characters": "T"
							},
							"AQAAAEIbAAAAAAAAQxsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCGwAAAAAAAEIbAAAAAAAAAAAAAAAA8L8"
						],
						[
							555,
							1,
							"left_delete",
							null,
							"AQAAAEUbAAAAAAAARRsAAAAAAAABAAAAaQ",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGGwAAAAAAAEYbAAAAAAAAAAAAAAAA8L8"
						],
						[
							556,
							1,
							"insert",
							{
								"characters": "T"
							},
							"AQAAAEUbAAAAAAAARhsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFGwAAAAAAAEUbAAAAAAAAAAAAAAAA8L8"
						],
						[
							561,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"BAAAACobAAAAAAAALRsAAAAAAAAAAAAAGRsAAAAAAAAcGwAAAAAAAAAAAAAJGwAAAAAAAAwbAAAAAAAAAAAAAPoaAAAAAAAA/RoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArGwAAAAAAAPoaAAAAAAAAAAAAAAAA8L8"
						],
						[
							569,
							1,
							"paste",
							null,
							"AQAAABcaAAAAAAAAnxoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXGgAAAAAAABcaAAAAAAAAAAAAAAAA8L8"
						],
						[
							570,
							1,
							"astyleformat",
							null,
							"AQAAABcaAAAAAAAAGBoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfGgAAAAAAAJ8aAAAAAAAAAAAAAAAA8L8"
						],
						[
							573,
							1,
							"left_delete",
							null,
							"AQAAABcaAAAAAAAAFxoAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYGgAAAAAAABgaAAAAAAAAAAAAAAAA8L8"
						],
						[
							574,
							1,
							"astyleformat",
							null,
							"AQAAABcaAAAAAAAAGBoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXGgAAAAAAABcaAAAAAAAAAAAAAAAA8L8"
						],
						[
							575,
							1,
							"insert",
							{
								"characters": "\n\n"
							},
							"AgAAABgaAAAAAAAAGRoAAAAAAAAAAAAAGRoAAAAAAAAaGgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYGgAAAAAAABgaAAAAAAAAAAAAAAAA8L8"
						],
						[
							576,
							1,
							"astyleformat",
							null,
							"AQAAABcaAAAAAAAAFxoAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaGgAAAAAAABoaAAAAAAAAAAAAAAAA8L8"
						],
						[
							579,
							1,
							"left_delete",
							null,
							"AQAAABkaAAAAAAAAGRoAAAAAAAAYAAAAY2xhc3MgU29sdXRpb24gewpwdWJsaWM6",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxGgAAAAAAABkaAAAAAAAAAAAAAAAA8L8"
						],
						[
							580,
							1,
							"astyleformat",
							null,
							"BgAAABoaAAAAAAAAGhoAAAAAAAABAAAACSsaAAAAAAAAKxoAAAAAAAABAAAACT0aAAAAAAAAPRoAAAAAAAABAAAACVEaAAAAAAAAURoAAAAAAAABAAAACV4aAAAAAAAAXhoAAAAAAAABAAAACX8aAAAAAAAAfxoAAAAAAAABAAAACQ",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZGgAAAAAAABkaAAAAAAAAAAAAAAAA8L8"
						],
						[
							583,
							1,
							"left_delete",
							null,
							"AQAAAIAaAAAAAAAAgBoAAAAAAAADAAAACn07",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDGgAAAAAAAIAaAAAAAAAAAAAAAAAA8L8"
						],
						[
							588,
							1,
							"insert",
							{
								"characters": "solve"
							},
							"BgAAAB8aAAAAAAAAIBoAAAAAAAAAAAAAIBoAAAAAAAAgGgAAAAAAAAcAAABzb2xGdW5jIBoAAAAAAAAhGgAAAAAAAAAAAAAhGgAAAAAAACIaAAAAAAAAAAAAACIaAAAAAAAAIxoAAAAAAAAAAAAAIxoAAAAAAAAkGgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfGgAAAAAAACYaAAAAAAAAAAAAAAAA8L8"
						],
						[
							598,
							1,
							"insert",
							{
								"characters": "a"
							},
							"AgAAAGMaAAAAAAAAZBoAAAAAAAAAAAAAZBoAAAAAAABkGgAAAAAAABcAAABnZXRSYW5kb21OdW1iZXIoMTAsIDIwKQ",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6GgAAAAAAAGMaAAAAAAAAAAAAAAAA8L8"
						],
						[
							605,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAPIZAAAAAAAA9RkAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6GQAAAAAAAPoZAAAAAAAAAAAAAAAA8L8"
						],
						[
							6,
							1,
							"left_delete",
							null,
							"AQAAAO8ZAAAAAAAA7xkAAAAAAAAlAAAACgkJLy8gZGVidWcoZ2V0UmFuZG9tTnVtYmVyKDEwLCAyMCkpOw",
							"AQAAAAAAAAABAAAAFBoAAAAAAADvGQAAAAAAAAAAAAAAAPC/"
						],
						[
							10,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"CAAAAPMZAAAAAAAA9hkAAAAAAAAAAAAA8BkAAAAAAADzGQAAAAAAAAAAAADhGQAAAAAAAOQZAAAAAAAAAAAAAM0ZAAAAAAAA0BkAAAAAAAAAAAAAuhkAAAAAAAC9GQAAAAAAAAAAAACoGQAAAAAAAKsZAAAAAAAAAAAAAKAZAAAAAAAAoxkAAAAAAAAAAAAAjxkAAAAAAACSGQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA9RkAAAAAAACPGQAAAAAAAAAAAAAAAPC/"
						],
						[
							31,
							1,
							"left_delete",
							null,
							"AQAAAJgbAAAAAAAAmBsAAAAAAAABAAAAVA",
							"AQAAAAAAAAABAAAAmRsAAAAAAACZGwAAAAAAAAAAAAAAAPC/"
						],
						[
							32,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAJgbAAAAAAAAmRsAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAmBsAAAAAAACYGwAAAAAAAAAAAAAAAPC/"
						],
						[
							44,
							1,
							"paste",
							null,
							"AgAAABAaAAAAAAAAgxoAAAAAAAAAAAAAgxoAAAAAAACDGgAAAAAAAE4AAAB2b2lkIHNvbHZlKCkgewoJaW50IG47IGNpbiA+PiBuOwoJdmVjdG9yPGludD4gYShuKTsKCWlucHV0KGEsIG4pOwoJZGVidWcoYSk7Cn0",
							"AQAAAAAAAAABAAAAXhoAAAAAAAAQGgAAAAAAAAAAAAAAAPC/"
						],
						[
							48,
							1,
							"left_delete",
							null,
							"AQAAAGQbAAAAAAAAZBsAAAAAAAA/AAAACgkvLyB3aGlsZSAoVC0tKSB7CgkvLyAJU29sdXRpb24gb2JqOwoJLy8gCW9iai5zb2xGdW5jKCk7CgkvLyB9",
							"AQAAAAAAAAABAAAAoxsAAAAAAABkGwAAAAAAAAAAAAAAAPC/"
						],
						[
							54,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAIcbAAAAAAAAihsAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAhxsAAAAAAACHGwAAAAAAAAAAAAAAAPC/"
						],
						[
							64,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAB0QAAAAAAAAIBAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAJhAAAAAAAAAmEAAAAAAAAAAAAAAAAPC/"
						],
						[
							72,
							1,
							"cut",
							null,
							"AQAAAAAYAAAAAAAAABgAAAAAAABeAAAACi8vIGJvb2wgaXNTb3J0ZWQodmVjdG9yPGxsPiB2KSB7Rk9SKGksMCxzeih2KS0xKSB7aWYodltpXT52W2krMV0pIHJldHVybiBmYWxzZTt9cmV0dXJuIHRydWU7fQ",
							"AQAAAAAAAAABAAAAXhgAAAAAAAAAGAAAAAAAAAAAAAAAAPC/"
						],
						[
							78,
							1,
							"paste",
							null,
							"AQAAAJMXAAAAAAAA8RcAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAkxcAAAAAAACTFwAAAAAAAAAAAAAAAPC/"
						],
						[
							86,
							1,
							"left_delete",
							null,
							"AQAAAJIZAAAAAAAAkhkAAAAAAAB+AAAALy8gY2xhc3MgU29sdXRpb24gewovLyBwdWJsaWM6Ci8vIAl2b2lkIHNvbEZ1bmMoKSB7Ci8vIAkJaW50IG47IGNpbiA+PiBuOwovLyAJCXZlY3RvcjxpbnQ+IGEobik7Ci8vIAkJaW5wdXQoYSwgbik7Ci8vIAl9Ci8vIH07",
							"AQAAAAAAAAABAAAAEBoAAAAAAACSGQAAAAAAAAAAAAAAAPC/"
						],
						[
							87,
							3,
							"right_delete",
							null,
							"AwAAAJIZAAAAAAAAkhkAAAAAAAABAAAACpIZAAAAAAAAkhkAAAAAAAABAAAACpIZAAAAAAAAkhkAAAAAAAABAAAACg",
							"AQAAAAAAAAABAAAAkhkAAAAAAACSGQAAAAAAAAAAAAAAAPC/"
						],
						[
							93,
							1,
							"left_delete",
							null,
							"AQAAAN4ZAAAAAAAA3hkAAAAAAAAlAAAACgljb3V0IDw8ICIgYVswXSA9ICIgPDwgYVswXSA8PCBlbmRsOw",
							"AQAAAAAAAAABAAAAAxoAAAAAAADeGQAAAAAAAAAAAAAAAPC/"
						],
						[
							94,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAANUZAAAAAAAA2BkAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA3hkAAAAAAADeGQAAAAAAAAAAAAAAAPC/"
						],
						[
							120,
							1,
							"insert",
							{
								"characters": "cp"
							},
							"",
							"AQAAAAAAAAABAAAAAAAAAAAAAADmGwAAAAAAAAAAAAAAAPC/"
						],
						[
							121,
							1,
							"insert_completion",
							{
								"completion": "// Problem: \n\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nusing namespace std;\nusing namespace chrono;\nusing namespace __gnu_pbds;\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<ll, ll>, null_type, less<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n#define ff first\n#define ss second\n#define endl \"\\n\"\n#define INF (ll)1e18\n#define MOD (ll)1e9+7\n#define MOD2 998244353\n#define PI (ld)acos(-1.0)\n#define sz(x) ((int)(x).size())\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define fill(x,y) memset(x,y,sizeof(x))\n#define FOR(i,a,b) for(ll i=(a);i<(b);++i)\n#define output(a,n,s) FOR(i,0,n) cout<<a[i]<<s;\n#define input(a,n) FOR(i,0,n) cin>>a[i];\n#define minv(v) *min_element(all(v))\n#define maxv(v) *max_element(all(v))\n#define pbds_getidx order_of_key\n#define setbits(x) __builtin_popcountll(x)\n#define prcs cout.precision(15);cout << fixed;\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n#define deb1(a) cerr<<#a<<\": \"<<a<<endl;\n#define deb2(a,b) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<endl;\n#define deb3(a,b,c) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<endl;\n#define deb4(a,b,c,d) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<endl;\n#define deb5(a,b,c,d,e) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<\", \"<<#e<<\": \"<<e<<endl;\n#define deb6(a,b,c,d,e,f) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<\", \"<<#e<<\": \"<<e<<\", \"<<#f<<\": \"<<f<<endl;\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n#ifndef ONLINE_JUDGE\n#define debug(x) cerr << #x << \" : \"; _print(x); cerr << endl;\n#else\n#define debug(x)\n#endif\nvoid _print(ll t) {cerr << t;}\nvoid _print(int t) {cerr << t;}\nvoid _print(string t) {cerr << t;}\nvoid _print(char t) {cerr << t;}\nvoid _print(ld t) {cerr << t;}\nvoid _print(double t) {cerr << t;}\nvoid _print(ull t) {cerr << t;}\n// void _print(pbds v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T, class V> void _print(pair<T, V> p);\ntemplate<class T> void _print(vector<T> v);\ntemplate<class T> void _print(set<T> v);\ntemplate<class T> void _print(multiset<T> v);\ntemplate<class T, class V> void _print(map<T, V> v);\ntemplate<class T, class V> void _print(unordered_map<T, V> v);\ntemplate<class T> void _print(vector<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(set<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(multiset<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(unordered_set<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T, class V> void _print(pair<T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\ntemplate<class T, class V> void _print(map<T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T, class V> void _print(unordered_map<T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\nvoid _print(pbds v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n\n// const int MAX_NUM = 200000;\n// priority_queue<int,vector<int>,greater<int>> pq;\n/* Pass an array of size 3 */\n// void extendgcd(ll a,ll b,ll* v){if(b==0){v[0]=1;v[1]=0;v[2]=a;return;}extendgcd(b,a%b,v);ll x=v[1];v[1]=v[0]-v[1]*(a/b);v[0]=x;return;}\n// void google(int t) {cout << \"Case #\" << t << \": \";}\n// ll msb(ll n){ll r=0;FOR(i,0,32){if((1ll<<i)==n) return(i+1);if(((1ll<<i)&n)==(1ll<<i)){if(n==i)r=i;else r=i+1;}} return(r+1);}\n// ll aot(ll x1,ll y1,ll x2,ll y2,ll x3,ll y3){return abs(x1*y2+x2*y3+x3*y1-x2*y1-x3*y2-x1*y3);} // 2*(Area of triangle)\n// ll mex(vector<ll>& v){set<ll> s;for(auto x:v)s.insert(x);ll r=0;for(auto it:s){if(it!=r)return r;++r;}return r;}\n// ll phi(ll n){ll r=n;for(ll i=2;i*i<=n;i++){if(n%i==0){while(n%i==0)n/=i;r-=r/i;}}if(n > 1)r-=r/n;return r;} //O(sqrt(N))\n// ll gcd(ll a,ll b) {if(a>b) swap(a,b);if(a==0) return 0;if(b%a) return gcd(a,b-a);return a;}\n// ll lcm(ll a,ll b) {return (a/gcd(a,b)*b);}\n// ll binexp(ll a,ll b,ll mod) {ll r=1;while(b){if(b&1) r=(r*1LL*a)%mod;a=(a*1LL*a)%mod;b=b>>1;} return r;}\n// ll mminv(ll a,ll b) {ll arr[3];extendgcd(a,b,arr);return arr[0];}    // For non prime b\n// ll mminvprime(ll n,ll mod) {return binexp(n,mod-2,mod);}\n// ll mod_add(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a + b) % m) + m)%m;}\n// ll mod_mul(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a * b) % m) + m)%m;}\n// ll mod_sub(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a - b) % m) + m)%m;}\n// ll mod_div(ll a, ll b, ll m) {a = a%m; b = b%m; return (mod_mul(a,mminvprime(b,m),m)+m)%m;} // Only for prime m\n// ll getRandomNumber(ll l, ll r) {return uniform_int_distribution<ll>(l, r)(rng);}\n// string to_binary(ll n){string s;while(n){s += to_string(n%2);n/=2;}reverse(all(s));return s;}\n// char to_lower(char c){if(c>=97) return c;return c+32;}\n// char to_upper(char c){if(c<97) return c;return c-32;}\n// bool revsort(ll a, ll b) {return a > b;}\n// bool isPowerOf2(ll x){return x && (!(x&(x-1)));}\n// bool isPalindromeV(vector<ll>& v){ll n=sz(v);FOR(i,0,n/2){if(v[i]!=v[n-i-1]) return false;}return true;}\n// bool isPalindromeS(string& v){ll n=sz(v);FOR(i,0,n/2){if(v[i]!=v[n-i-1]) return false;}return true;}\n// bool isSorted(vector<ll> v) {FOR(i,0,sz(v)-1) {if(v[i]>v[i+1]) return false;}return true;}\n// bool isPrime(ll n) {if(n<=1) return false; for(ll i=2;i*i<n;++i) {if(n%i==0) return false;} return true;}\n// vector<ll> sieve(int n) {int*arr=new int[n + 1]();vector<ll>v;for(int i=2;i<=n;i++)if(arr[i]==0){v.push_back(i);for(int j=2*i;j<=n;j+=i)arr[j]=1;}return v;}\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n\nvoid solve() {\n    int n; cin >> n;\n    vector<int> a(n);\n    input(a, n);\n    // debug(a);\n    // output(a,n,\" \");\n    // cout << endl;\n    // return;\n}\n\nint main() {\n    prcs; fast;\n#ifndef ONLINE_JUDGE\n    freopen(\"zin.txt\", \"r\", stdin);\n    freopen(\"zout.txt\", \"w\", stdout);\n    freopen(\"zerr.txt\", \"w\", stderr);\n#endif\n    auto start = high_resolution_clock::now();\n    int T = 1;\n    cin >> T;\n    for (int i = 1; i <= T; i++) {\n        // google(i);\n        solve();\n    }\n    auto stop = high_resolution_clock::now();\n    auto duration = duration_cast<nanoseconds>(stop - start);\n#ifndef ONLINE_JUDGE\n    cerr << \"\\n[Completed in \" << ((ld)duration.count()) / ((ld)1e9) << \" s]\" << endl;\n#endif\n    return 0;\n}\n",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "cpsnip"
							},
							"AgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAY3AAAAAAAAAAANMcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
						],
						[
							129,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"BAAAAJEaAAAAAAAAkRoAAAAAAAADAAAALy8gfBoAAAAAAAB8GgAAAAAAAAMAAAAvLyBkGgAAAAAAAGQaAAAAAAAAAwAAAC8vIFMaAAAAAAAAUxoAAAAAAAADAAAALy8g",
							"AQAAAAAAAAABAAAAmxoAAAAAAABcGgAAAAAAAAAAAAAAAPC/"
						],
						[
							130,
							1,
							"astyleformat",
							null,
							"LQAAAAsAAAAAAAAACwAAAAAAAAABAAAAIBIaAAAAAAAAEhoAAAAAAAAEAAAAICAgIBIaAAAAAAAAExoAAAAAAAAAAAAAJBoAAAAAAAAkGgAAAAAAAAQAAAAgICAgJBoAAAAAAAAlGgAAAAAAAAAAAAA3GgAAAAAAADcaAAAAAAAABAAAACAgICA3GgAAAAAAADgaAAAAAAAAAAAAAEUaAAAAAAAARRoAAAAAAAAEAAAAICAgIEUaAAAAAAAARhoAAAAAAAAAAAAAUBoAAAAAAABQGgAAAAAAAAQAAAAgICAgUBoAAAAAAABRGgAAAAAAAAAAAABaGgAAAAAAAFsaAAAAAAAAAAAAAF0aAAAAAAAAXhoAAAAAAAAAAAAAZBoAAAAAAABkGgAAAAAAAAQAAAAgICAgZBoAAAAAAABlGgAAAAAAAAAAAABzGgAAAAAAAHMaAAAAAAAABAAAACAgICBzGgAAAAAAAHQaAAAAAAAAAAAAAIwaAAAAAAAAjBoAAAAAAAAEAAAAICAgIIwaAAAAAAAAjRoAAAAAAAAAAAAArhoAAAAAAACuGgAAAAAAAAQAAAAgICAgrhoAAAAAAACvGgAAAAAAAAAAAADPGgAAAAAAAM8aAAAAAAAABAAAACAgICDPGgAAAAAAANAaAAAAAAAAAAAAAPIaAAAAAAAA8hoAAAAAAAAEAAAAICAgIPIaAAAAAAAA8xoAAAAAAAAAAAAAHBsAAAAAAAAcGwAAAAAAAAQAAAAgICAgHBsAAAAAAAAdGwAAAAAAAAAAAABIGwAAAAAAAEgbAAAAAAAABAAAACAgICBIGwAAAAAAAEkbAAAAAAAAAAAAAFQbAAAAAAAAVBsAAAAAAAAEAAAAICAgIFQbAAAAAAAAVRsAAAAAAAAAAAAAXxsAAAAAAABfGwAAAAAAAAQAAAAgICAgXxsAAAAAAABgGwAAAAAAAAAAAAB/GwAAAAAAAH8bAAAAAAAACAAAACAgICAgICAgfxsAAAAAAACBGwAAAAAAAAAAAACPGwAAAAAAAI8bAAAAAAAACAAAACAgICAgICAgjxsAAAAAAACRGwAAAAAAAAAAAACaGwAAAAAAAJobAAAAAAAACgAAACAgICB9CiAgICCaGwAAAAAAAJ4bAAAAAAAAAAAAAMgbAAAAAAAAyBsAAAAAAAAEAAAAICAgIMgbAAAAAAAAyRsAAAAAAAAAAAAAGBwAAAAAAAAYHAAAAAAAAAQAAAAgICAgGBwAAAAAAAAZHAAAAAAAAAAAAABzHAAAAAAAAHMcAAAAAAAABAAAACAgICBzHAAAAAAAAHQcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAjxoAAAAAAABZGgAAAAAAAAAAAAAAAPC/"
						],
						[
							135,
							1,
							"cut",
							null,
							"AQAAAHAAAAAAAAAAcAAAAAAAAABFAAAACm10MTk5Mzcgcm5nKGNocm9ubzo6c3RlYWR5X2Nsb2NrOjpub3coKS50aW1lX3NpbmNlX2Vwb2NoKCkuY291bnQoKSk7",
							"AQAAAAAAAAABAAAAtQAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
						],
						[
							139,
							1,
							"paste",
							null,
							"AQAAALkAAAAAAAAA/gAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAuQAAAAAAAAC5AAAAAAAAAAAAAAAAAPC/"
						],
						[
							161,
							1,
							"left_delete",
							null,
							"AQAAANQJAAAAAAAA1AkAAAAAAABfAAAACi8vIHZvaWQgX3ByaW50KHBiZHMgdikge2NlcnIgPDwgIlsgIjsgZm9yIChhdXRvIGkgOiB2KSB7X3ByaW50KGkpOyBjZXJyIDw8ICIgIjt9IGNlcnIgPDwgIl0iO30",
							"AQAAAAAAAAABAAAAMwoAAAAAAADUCQAAAAAAAAAAAAAAAPC/"
						],
						[
							171,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"GgAAAHEYAAAAAAAAcRgAAAAAAAADAAAALy8gBBgAAAAAAAAEGAAAAAAAAAMAAAAvLyCmFwAAAAAAAKYXAAAAAAAAAwAAAC8vID4XAAAAAAAAPhcAAAAAAAADAAAALy8g0hYAAAAAAADSFgAAAAAAAAMAAAAvLyCeFgAAAAAAAJ4WAAAAAAAAAwAAAC8vIHIWAAAAAAAAchYAAAAAAAADAAAALy8gORYAAAAAAAA5FgAAAAAAAAMAAAAvLyD/FQAAAAAAAP8VAAAAAAAAAwAAAC8vIJ4VAAAAAAAAnhUAAAAAAAADAAAALy8gShUAAAAAAABKFQAAAAAAAAMAAAAvLyDXFAAAAAAAANcUAAAAAAAAAwAAAC8vIIUUAAAAAAAAhRQAAAAAAAADAAAALy8gMxQAAAAAAAAzFAAAAAAAAAMAAAAvLyDhEwAAAAAAAOETAAAAAAAAAwAAAC8vIKUTAAAAAAAApRMAAAAAAAADAAAALy8gShMAAAAAAABKEwAAAAAAAAMAAAAvLyDeEgAAAAAAAN4SAAAAAAAAAwAAAC8vILASAAAAAAAAsBIAAAAAAAADAAAALy8gURIAAAAAAABREgAAAAAAAAMAAAAvLyDVEQAAAAAAANURAAAAAAAAAwAAAC8vIGERAAAAAAAAYREAAAAAAAADAAAALy8g6BAAAAAAAADoEAAAAAAAAAMAAAAvLyBmEAAAAAAAAGYQAAAAAAAAAwAAAC8vIC8QAAAAAAAALxAAAAAAAAADAAAALy8gpA8AAAAAAACkDwAAAAAAAAMAAAAvLyA",
							"AQAAAAAAAAABAAAA4xgAAAAAAADtDwAAAAAAAAAAAAAAAPC/"
						],
						[
							172,
							1,
							"astyleformat",
							null,
							"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"
						],
						[
							182,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAEccAAAAAAAARxwAAAAAAAADAAAALy8g",
							"AQAAAAAAAAABAAAAVBwAAAAAAABUHAAAAAAAAAAAAAAAAPC/"
						],
						[
							196,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAEccAAAAAAAAShwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAARxwAAAAAAABHHAAAAAAAAAAAAAAAAPC/"
						],
						[
							213,
							1,
							"insert",
							{
								"characters": "cp"
							},
							"",
							"AQAAAAAAAAABAAAAAAAAAAAAAABGHQAAAAAAAAAAAAAAAPC/"
						],
						[
							214,
							1,
							"insert_completion",
							{
								"completion": "// Problem: \n\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nusing namespace std;\nusing namespace chrono;\nusing namespace __gnu_pbds;\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<ll, ll>, null_type, less<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update> pbds;\n//--------------------------------------------------------------------------------------------------------------\n#define ff first\n#define ss second\n#define endl \"\\n\"\n#define INF (ll)1e18\n#define MOD (ll)1e9+7\n#define MOD2 998244353\n#define PI (ld)acos(-1.0)\n#define sz(x) ((int)(x).size())\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define fill(x,y) memset(x,y,sizeof(x))\n#define FOR(i,a,b) for(ll i=(a);i<(b);++i)\n#define output(a,n,s) FOR(i,0,n) cout<<a[i]<<s;\n#define input(a,n) FOR(i,0,n) cin>>a[i];\n#define minv(v) *min_element(all(v))\n#define maxv(v) *max_element(all(v))\n#define pbds_getidx order_of_key\n#define setbits(x) __builtin_popcountll(x)\n#define prcs cout.precision(15);cout << fixed;\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n#define deb1(a) cerr<<#a<<\": \"<<a<<endl;\n#define deb2(a,b) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<endl;\n#define deb3(a,b,c) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<endl;\n#define deb4(a,b,c,d) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<endl;\n#define deb5(a,b,c,d,e) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<\", \"<<#e<<\": \"<<e<<endl;\n#define deb6(a,b,c,d,e,f) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<\", \"<<#e<<\": \"<<e<<\", \"<<#f<<\": \"<<f<<endl;\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n#ifndef ONLINE_JUDGE\n#define debug(x) cerr << #x << \" : \"; _print(x); cerr << endl;\n#else\n#define debug(x)\n#endif\nvoid _print(ll t) {cerr << t;}\nvoid _print(int t) {cerr << t;}\nvoid _print(string t) {cerr << t;}\nvoid _print(char t) {cerr << t;}\nvoid _print(ld t) {cerr << t;}\nvoid _print(double t) {cerr << t;}\nvoid _print(ull t) {cerr << t;}\ntemplate<class T, class V> void _print(pair<T, V> p);\ntemplate<class T> void _print(vector<T> v);\ntemplate<class T> void _print(set<T> v);\ntemplate<class T> void _print(multiset<T> v);\ntemplate<class T, class V> void _print(map<T, V> v);\ntemplate<class T, class V> void _print(unordered_map<T, V> v);\ntemplate<class T> void _print(vector<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(set<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(multiset<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(unordered_set<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T, class V> void _print(pair<T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\ntemplate<class T, class V> void _print(map<T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T, class V> void _print(unordered_map<T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\nvoid _print(pbds v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n\n// const int MAX_NUM = 200000;\n// priority_queue<int,vector<int>,greater<int>> pq;\n/* Pass an array of size 3 */\n// void extendgcd(ll a,ll b,ll* v){if(b==0){v[0]=1;v[1]=0;v[2]=a;return;}extendgcd(b,a%b,v);ll x=v[1];v[1]=v[0]-v[1]*(a/b);v[0]=x;return;}\n// void google(int t) {cout << \"Case #\" << t << \": \";}\n// ll msb(ll n){ll r=0;FOR(i,0,32){if((1ll<<i)==n) return(i+1);if(((1ll<<i)&n)==(1ll<<i)){if(n==i)r=i;else r=i+1;}} return(r+1);}\n// ll aot(ll x1,ll y1,ll x2,ll y2,ll x3,ll y3){return abs(x1*y2+x2*y3+x3*y1-x2*y1-x3*y2-x1*y3);} // 2*(Area of triangle)\n// ll mex(vector<ll>& v){set<ll> s;for(auto x:v)s.insert(x);ll r=0;for(auto it:s){if(it!=r)return r;++r;}return r;}\n// ll phi(ll n){ll r=n;for(ll i=2;i*i<=n;i++){if(n%i==0){while(n%i==0)n/=i;r-=r/i;}}if(n > 1)r-=r/n;return r;} //O(sqrt(N))\n// ll gcd(ll a,ll b) {if(a>b) swap(a,b);if(a==0) return 0;if(b%a) return gcd(a,b-a);return a;}\n// ll lcm(ll a,ll b) {return (a/gcd(a,b)*b);}\n// ll binexp(ll a,ll b,ll mod) {ll r=1;while(b){if(b&1) r=(r*1LL*a)%mod;a=(a*1LL*a)%mod;b=b>>1;} return r;}\n// ll mminv(ll a,ll b) {ll arr[3];extendgcd(a,b,arr);return arr[0];}    // For non prime b\n// ll mminvprime(ll n,ll mod) {return binexp(n,mod-2,mod);}\n// ll mod_add(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a + b) % m) + m)%m;}\n// ll mod_mul(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a * b) % m) + m)%m;}\n// ll mod_sub(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a - b) % m) + m)%m;}\n// ll mod_div(ll a, ll b, ll m) {a = a%m; b = b%m; return (mod_mul(a,mminvprime(b,m),m)+m)%m;} // Only for prime m\n// ll getRandomNumber(ll l, ll r) {return uniform_int_distribution<ll>(l, r)(rng);}\n// string to_binary(ll n){string s;while(n){s += to_string(n%2);n/=2;}reverse(all(s));return s;}\n// char to_lower(char c){if(c>=97) return c;return c+32;}\n// char to_upper(char c){if(c<97) return c;return c-32;}\n// bool revsort(ll a, ll b) {return a > b;}\n// bool isPowerOf2(ll x){return x && (!(x&(x-1)));}\n// bool isPalindromeV(vector<ll>& v){ll n=sz(v);FOR(i,0,n/2){if(v[i]!=v[n-i-1]) return false;}return true;}\n// bool isPalindromeS(string& v){ll n=sz(v);FOR(i,0,n/2){if(v[i]!=v[n-i-1]) return false;}return true;}\n// bool isSorted(vector<ll> v) {FOR(i,0,sz(v)-1) {if(v[i]>v[i+1]) return false;}return true;}\n// bool isPrime(ll n) {if(n<=1) return false; for(ll i=2;i*i<n;++i) {if(n%i==0) return false;} return true;}\n// vector<ll> sieve(int n) {int*arr=new int[n + 1]();vector<ll>v;for(int i=2;i<=n;i++)if(arr[i]==0){v.push_back(i);for(int j=2*i;j<=n;j+=i)arr[j]=1;}return v;}\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n\nvoid solve() {\n    int n; cin >> n;\n    vector<int> a(n);\n    input(a, n);\n    // debug(a);\n    // output(a,n,\" \");\n    // cout << endl;\n    // return;\n}\n\nint main() {\n    prcs; fast;\n#ifndef ONLINE_JUDGE\n    freopen(\"zin.txt\", \"r\", stdin);\n    freopen(\"zout.txt\", \"w\", stdout);\n    freopen(\"zerr.txt\", \"w\", stderr);\n#endif\n    auto start = high_resolution_clock::now();\n    int T = 1;\n    cin >> T;\n    for (int i = 1; i <= T; i++) {\n        // google(i);\n        solve();\n    }\n    auto stop = high_resolution_clock::now();\n    auto duration = duration_cast<nanoseconds>(stop - start);\n#ifndef ONLINE_JUDGE\n    cerr << \"\\n[Completed in \" << ((ld)duration.count()) / ((ld)1e9) << \" s]\" << endl;\n#endif\n    return 0;\n}\n",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "cpsnip"
							},
							"AgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAY3AAAAAAAAAAADQcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
						],
						[
							215,
							1,
							"astyleformat",
							null,
							"KwAAAAsAAAAAAAAACwAAAAAAAAABAAAAIHMZAAAAAAAAcxkAAAAAAAAEAAAAICAgIHMZAAAAAAAAdBkAAAAAAAAAAAAAhRkAAAAAAACFGQAAAAAAAAQAAAAgICAghRkAAAAAAACGGQAAAAAAAAAAAACYGQAAAAAAAJgZAAAAAAAABAAAACAgICCYGQAAAAAAAJkZAAAAAAAAAAAAAKYZAAAAAAAAphkAAAAAAAAEAAAAICAgIKYZAAAAAAAApxkAAAAAAAAAAAAAtBkAAAAAAAC0GQAAAAAAAAQAAAAgICAgtBkAAAAAAAC1GQAAAAAAAAAAAADJGQAAAAAAAMkZAAAAAAAABAAAACAgICDJGQAAAAAAAMoZAAAAAAAAAAAAANsZAAAAAAAA2xkAAAAAAAAEAAAAICAgINsZAAAAAAAA3BkAAAAAAAAAAAAA9xkAAAAAAAD3GQAAAAAAAAQAAAAgICAg9xkAAAAAAAD4GQAAAAAAAAAAAAAZGgAAAAAAABkaAAAAAAAABAAAACAgICAZGgAAAAAAABoaAAAAAAAAAAAAADoaAAAAAAAAOhoAAAAAAAAEAAAAICAgIDoaAAAAAAAAOxoAAAAAAAAAAAAAXRoAAAAAAABdGgAAAAAAAAQAAAAgICAgXRoAAAAAAABeGgAAAAAAAAAAAACHGgAAAAAAAIcaAAAAAAAABAAAACAgICCHGgAAAAAAAIgaAAAAAAAAAAAAALMaAAAAAAAAsxoAAAAAAAAEAAAAICAgILMaAAAAAAAAtBoAAAAAAAAAAAAAvxoAAAAAAAC/GgAAAAAAAAQAAAAgICAgvxoAAAAAAADAGgAAAAAAAAAAAADKGgAAAAAAAMoaAAAAAAAABAAAACAgICDKGgAAAAAAAMsaAAAAAAAAAAAAAOoaAAAAAAAA6hoAAAAAAAAIAAAAICAgICAgICDqGgAAAAAAAOwaAAAAAAAAAAAAAPoaAAAAAAAA+hoAAAAAAAAIAAAAICAgICAgICD6GgAAAAAAAPwaAAAAAAAAAAAAAAUbAAAAAAAABRsAAAAAAAAKAAAAICAgIH0KICAgIAUbAAAAAAAACRsAAAAAAAAAAAAAMxsAAAAAAAAzGwAAAAAAAAQAAAAgICAgMxsAAAAAAAA0GwAAAAAAAAAAAACDGwAAAAAAAIMbAAAAAAAABAAAACAgICCDGwAAAAAAAIQbAAAAAAAAAAAAAN4bAAAAAAAA3hsAAAAAAAAEAAAAICAgIN4bAAAAAAAA3xsAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAANBwAAAAAAAA0HAAAAAAAAAAAAAAAAPC/"
						],
						[
							220,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"BAAAANwZAAAAAAAA3BkAAAAAAAADAAAALy8gyhkAAAAAAADKGQAAAAAAAAMAAAAvLyC1GQAAAAAAALUZAAAAAAAAAwAAAC8vIKcZAAAAAAAApxkAAAAAAAADAAAALy8g",
							"AQAAAAAAAAABAAAA5hkAAAAAAACrGQAAAAAAAAAAAAAAAPC/"
						],
						[
							221,
							1,
							"astyleformat",
							null,
							"AgAAALsZAAAAAAAAvBkAAAAAAAAAAAAAvhkAAAAAAAC/GQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA2hkAAAAAAACoGQAAAAAAAAAAAAAAAPC/"
						],
						[
							226,
							1,
							"insert",
							{
								"characters": "cp"
							},
							"",
							"AQAAAAAAAAABAAAAAAAAAAAAAADhGwAAAAAAAAAAAAAAAPC/"
						],
						[
							227,
							1,
							"insert_completion",
							{
								"completion": "// Problem: \n\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace chrono;\nusing namespace __gnu_pbds;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<ll, ll>, null_type, less<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update> pbds;\n//--------------------------------------------------------------------------------------------------------------\n#define ff first\n#define ss second\n#define endl \"\\n\"\n#define INF (ll)1e18\n#define MOD (ll)1e9+7\n#define MOD2 998244353\n#define PI (ld)acos(-1.0)\n#define sz(x) ((int)(x).size())\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define fill(x,y) memset(x,y,sizeof(x))\n#define FOR(i,a,b) for(ll i=(a);i<(b);++i)\n#define output(a,n,s) FOR(i,0,n) cout<<a[i]<<s;\n#define input(a,n) FOR(i,0,n) cin>>a[i];\n#define minv(v) *min_element(all(v))\n#define maxv(v) *max_element(all(v))\n#define pbds_getidx order_of_key\n#define setbits(x) __builtin_popcountll(x)\n#define prcs cout.precision(15);cout << fixed;\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n#define deb1(a) cerr<<#a<<\": \"<<a<<endl;\n#define deb2(a,b) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<endl;\n#define deb3(a,b,c) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<endl;\n#define deb4(a,b,c,d) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<endl;\n#define deb5(a,b,c,d,e) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<\", \"<<#e<<\": \"<<e<<endl;\n#define deb6(a,b,c,d,e,f) cerr<<#a<<\": \"<<a<<\", \"<<#b<<\": \"<<b<<\", \"<<#c<<\": \"<<c<<\", \"<<#d<<\": \"<<d<<\", \"<<#e<<\": \"<<e<<\", \"<<#f<<\": \"<<f<<endl;\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n#ifndef ONLINE_JUDGE\n#define debug(x) cerr << #x << \" : \"; _print(x); cerr << endl;\n#else\n#define debug(x)\n#endif\nvoid _print(ll t) {cerr << t;}\nvoid _print(int t) {cerr << t;}\nvoid _print(string t) {cerr << t;}\nvoid _print(char t) {cerr << t;}\nvoid _print(ld t) {cerr << t;}\nvoid _print(double t) {cerr << t;}\nvoid _print(ull t) {cerr << t;}\ntemplate<class T, class V> void _print(pair<T, V> p);\ntemplate<class T> void _print(vector<T> v);\ntemplate<class T> void _print(set<T> v);\ntemplate<class T> void _print(multiset<T> v);\ntemplate<class T, class V> void _print(map<T, V> v);\ntemplate<class T, class V> void _print(unordered_map<T, V> v);\ntemplate<class T> void _print(vector<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(set<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(multiset<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T> void _print(unordered_set<T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T, class V> void _print(pair<T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\ntemplate<class T, class V> void _print(map<T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate<class T, class V> void _print(unordered_map<T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\nvoid _print(pbds v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n\n// const int MAX_NUM = 200000;\n// priority_queue<int,vector<int>,greater<int>> pq;\n/* Pass an array of size 3 */\n// void extendgcd(ll a,ll b,ll* v){if(b==0){v[0]=1;v[1]=0;v[2]=a;return;}extendgcd(b,a%b,v);ll x=v[1];v[1]=v[0]-v[1]*(a/b);v[0]=x;return;}\n// void google(int t) {cout << \"Case #\" << t << \": \";}\n// ll msb(ll n){ll r=0;FOR(i,0,32){if((1ll<<i)==n) return(i+1);if(((1ll<<i)&n)==(1ll<<i)){if(n==i)r=i;else r=i+1;}} return(r+1);}\n// ll aot(ll x1,ll y1,ll x2,ll y2,ll x3,ll y3){return abs(x1*y2+x2*y3+x3*y1-x2*y1-x3*y2-x1*y3);} // 2*(Area of triangle)\n// ll mex(vector<ll>& v){set<ll> s;for(auto x:v)s.insert(x);ll r=0;for(auto it:s){if(it!=r)return r;++r;}return r;}\n// ll phi(ll n){ll r=n;for(ll i=2;i*i<=n;i++){if(n%i==0){while(n%i==0)n/=i;r-=r/i;}}if(n > 1)r-=r/n;return r;} //O(sqrt(N))\n// ll gcd(ll a,ll b) {if(a>b) swap(a,b);if(a==0) return 0;if(b%a) return gcd(a,b-a);return a;}\n// ll lcm(ll a,ll b) {return (a/gcd(a,b)*b);}\n// ll binexp(ll a,ll b,ll mod) {ll r=1;while(b){if(b&1) r=(r*1LL*a)%mod;a=(a*1LL*a)%mod;b=b>>1;} return r;}\n// ll mminv(ll a,ll b) {ll arr[3];extendgcd(a,b,arr);return arr[0];}    // For non prime b\n// ll mminvprime(ll n,ll mod) {return binexp(n,mod-2,mod);}\n// ll mod_add(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a + b) % m) + m)%m;}\n// ll mod_mul(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a * b) % m) + m)%m;}\n// ll mod_sub(ll a, ll b, ll m) {a = a%m; b = b%m; return (((a - b) % m) + m)%m;}\n// ll mod_div(ll a, ll b, ll m) {a = a%m; b = b%m; return (mod_mul(a,mminvprime(b,m),m)+m)%m;} // Only for prime m\n// ll getRandomNumber(ll l, ll r) {return uniform_int_distribution<ll>(l, r)(rng);}\n// string to_binary(ll n){string s;while(n){s += to_string(n%2);n/=2;}reverse(all(s));return s;}\n// char to_lower(char c){if(c>=97) return c;return c+32;}\n// char to_upper(char c){if(c<97) return c;return c-32;}\n// bool revsort(ll a, ll b) {return a > b;}\n// bool isPowerOf2(ll x){return x && (!(x&(x-1)));}\n// bool isPalindromeV(vector<ll>& v){ll n=sz(v);FOR(i,0,n/2){if(v[i]!=v[n-i-1]) return false;}return true;}\n// bool isPalindromeS(string& v){ll n=sz(v);FOR(i,0,n/2){if(v[i]!=v[n-i-1]) return false;}return true;}\n// bool isSorted(vector<ll> v) {FOR(i,0,sz(v)-1) {if(v[i]>v[i+1]) return false;}return true;}\n// bool isPrime(ll n) {if(n<=1) return false; for(ll i=2;i*i<n;++i) {if(n%i==0) return false;} return true;}\n// vector<ll> sieve(int n) {int*arr=new int[n + 1]();vector<ll>v;for(int i=2;i<=n;i++)if(arr[i]==0){v.push_back(i);for(int j=2*i;j<=n;j+=i)arr[j]=1;}return v;}\n//-----------------------------------------------------------------------------------------------------------------------------------------------\n\nvoid solve() {\n    int n; cin >> n;\n    vector<int> a(n);\n    input(a, n);\n    // debug(a);\n    // output(a,n,\" \");\n    // cout << endl;\n    // return;\n}\n\nint main() {\n    prcs; fast;\n#ifndef ONLINE_JUDGE\n    freopen(\"zin.txt\", \"r\", stdin);\n    freopen(\"zout.txt\", \"w\", stdout);\n    freopen(\"zerr.txt\", \"w\", stderr);\n#endif\n    auto start = high_resolution_clock::now();\n    int T = 1;\n    cin >> T;\n    for (int i = 1; i <= T; i++) {\n        // google(i);\n        solve();\n    }\n    auto stop = high_resolution_clock::now();\n    auto duration = duration_cast<nanoseconds>(stop - start);\n#ifndef ONLINE_JUDGE\n    cerr << \"\\n[Completed in \" << ((ld)duration.count()) / ((ld)1e9) << \" s]\" << endl;\n#endif\n    return 0;\n}\n",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "cpsnip"
							},
							"AgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAY3AAAAAAAAAAADQcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
						],
						[
							228,
							1,
							"astyleformat",
							null,
							"KwAAAAsAAAAAAAAACwAAAAAAAAABAAAAIHMZAAAAAAAAcxkAAAAAAAAEAAAAICAgIHMZAAAAAAAAdBkAAAAAAAAAAAAAhRkAAAAAAACFGQAAAAAAAAQAAAAgICAghRkAAAAAAACGGQAAAAAAAAAAAACYGQAAAAAAAJgZAAAAAAAABAAAACAgICCYGQAAAAAAAJkZAAAAAAAAAAAAAKYZAAAAAAAAphkAAAAAAAAEAAAAICAgIKYZAAAAAAAApxkAAAAAAAAAAAAAtBkAAAAAAAC0GQAAAAAAAAQAAAAgICAgtBkAAAAAAAC1GQAAAAAAAAAAAADJGQAAAAAAAMkZAAAAAAAABAAAACAgICDJGQAAAAAAAMoZAAAAAAAAAAAAANsZAAAAAAAA2xkAAAAAAAAEAAAAICAgINsZAAAAAAAA3BkAAAAAAAAAAAAA9xkAAAAAAAD3GQAAAAAAAAQAAAAgICAg9xkAAAAAAAD4GQAAAAAAAAAAAAAZGgAAAAAAABkaAAAAAAAABAAAACAgICAZGgAAAAAAABoaAAAAAAAAAAAAADoaAAAAAAAAOhoAAAAAAAAEAAAAICAgIDoaAAAAAAAAOxoAAAAAAAAAAAAAXRoAAAAAAABdGgAAAAAAAAQAAAAgICAgXRoAAAAAAABeGgAAAAAAAAAAAACHGgAAAAAAAIcaAAAAAAAABAAAACAgICCHGgAAAAAAAIgaAAAAAAAAAAAAALMaAAAAAAAAsxoAAAAAAAAEAAAAICAgILMaAAAAAAAAtBoAAAAAAAAAAAAAvxoAAAAAAAC/GgAAAAAAAAQAAAAgICAgvxoAAAAAAADAGgAAAAAAAAAAAADKGgAAAAAAAMoaAAAAAAAABAAAACAgICDKGgAAAAAAAMsaAAAAAAAAAAAAAOoaAAAAAAAA6hoAAAAAAAAIAAAAICAgICAgICDqGgAAAAAAAOwaAAAAAAAAAAAAAPoaAAAAAAAA+hoAAAAAAAAIAAAAICAgICAgICD6GgAAAAAAAPwaAAAAAAAAAAAAAAUbAAAAAAAABRsAAAAAAAAKAAAAICAgIH0KICAgIAUbAAAAAAAACRsAAAAAAAAAAAAAMxsAAAAAAAAzGwAAAAAAAAQAAAAgICAgMxsAAAAAAAA0GwAAAAAAAAAAAACDGwAAAAAAAIMbAAAAAAAABAAAACAgICCDGwAAAAAAAIQbAAAAAAAAAAAAAN4bAAAAAAAA3hsAAAAAAAAEAAAAICAgIN4bAAAAAAAA3xsAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAANBwAAAAAAAA0HAAAAAAAAAAAAAAAAPC/"
						],
						[
							231,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"BAAAANwZAAAAAAAA3BkAAAAAAAADAAAALy8gyhkAAAAAAADKGQAAAAAAAAMAAAAvLyC1GQAAAAAAALUZAAAAAAAAAwAAAC8vIKcZAAAAAAAApxkAAAAAAAADAAAALy8g",
							"AQAAAAAAAAABAAAA5hkAAAAAAACxGQAAAAAAAAAAAAAAAPC/"
						],
						[
							232,
							1,
							"astyleformat",
							null,
							"AgAAALsZAAAAAAAAvBkAAAAAAAAAAAAAvhkAAAAAAAC/GQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA2hkAAAAAAACuGQAAAAAAAAAAAAAAAPC/"
						],
						[
							249,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAAsAAAAAAAAADAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
						],
						[
							250,
							1,
							"paste",
							null,
							"AQAAAAwAAAAAAAAAPAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
						],
						[
							258,
							1,
							"insert",
							{
								"characters": ",l,r"
							},
							"BAAAAKoZAAAAAAAAqxkAAAAAAAAAAAAAqxkAAAAAAACsGQAAAAAAAAAAAACsGQAAAAAAAK0ZAAAAAAAAAAAAAK0ZAAAAAAAArhkAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAqhkAAAAAAACqGQAAAAAAAAAAAAAAAPC/"
						],
						[
							261,
							1,
							"left_delete",
							null,
							"AQAAAK8ZAAAAAAAArxkAAAAAAAABAAAAIA",
							"AQAAAAAAAAABAAAAsBkAAAAAAACwGQAAAAAAAAAAAAAAAPC/"
						],
						[
							262,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAK8ZAAAAAAAAsBkAAAAAAAAAAAAAsBkAAAAAAACxGQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAArxkAAAAAAACvGQAAAAAAAAAAAAAAAPC/"
						],
						[
							263,
							1,
							"astyleformat",
							null,
							"AgAAAKsZAAAAAAAArBkAAAAAAAAAAAAArhkAAAAAAACvGQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAsRkAAAAAAACxGQAAAAAAAAAAAAAAAPC/"
						],
						[
							266,
							1,
							"insert",
							{
								"characters": ">>l>>r"
							},
							"BgAAALsZAAAAAAAAvBkAAAAAAAAAAAAAvBkAAAAAAAC9GQAAAAAAAAAAAAC9GQAAAAAAAL4ZAAAAAAAAAAAAAL4ZAAAAAAAAvxkAAAAAAAAAAAAAvxkAAAAAAADAGQAAAAAAAAAAAADAGQAAAAAAAMEZAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAuxkAAAAAAAC7GQAAAAAAAAAAAAAAAPC/"
						],
						[
							271,
							1,
							"astyleformat",
							null,
							"BAAAALsZAAAAAAAAvBkAAAAAAAAAAAAAvhkAAAAAAAC/GQAAAAAAAAAAAADAGQAAAAAAAMEZAAAAAAAAAAAAAMMZAAAAAAAAxBkAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAERoAAAAAAAARGgAAAAAAAAAAAAAAAPC/"
						],
						[
							274,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AgAAAPQZAAAAAAAA9xkAAAAAAAAAAAAA6RkAAAAAAADsGQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAABhoAAAAAAADyGQAAAAAAAAAAAAAAAPC/"
						],
						[
							277,
							1,
							"insert",
							{
								"characters": "\n\n\n\n"
							},
							"CwAAAAwaAAAAAAAADRoAAAAAAAAAAAAADRoAAAAAAAAOGgAAAAAAAAAAAAAOGgAAAAAAAA8aAAAAAAAAAAAAAA8aAAAAAAAAEBoAAAAAAAAAAAAADRoAAAAAAAANGgAAAAAAAAEAAAAJDxoAAAAAAAAQGgAAAAAAAAAAAAAQGgAAAAAAABEaAAAAAAAAAAAAAA4aAAAAAAAADhoAAAAAAAABAAAACRAaAAAAAAAAERoAAAAAAAAAAAAAERoAAAAAAAASGgAAAAAAAAAAAAAPGgAAAAAAAA8aAAAAAAAAAQAAAAk",
							"AQAAAAAAAAABAAAADBoAAAAAAAAMGgAAAAAAAAAAAAAAAPC/"
						],
						[
							278,
							1,
							"astyleformat",
							null,
							"AQAAABAaAAAAAAAAEBoAAAAAAAABAAAACQ",
							"AQAAAAAAAAABAAAAERoAAAAAAAARGgAAAAAAAAAAAAAAAPC/"
						],
						[
							281,
							1,
							"insert",
							{
								"characters": "for"
							},
							"AwAAAA4aAAAAAAAADxoAAAAAAAAAAAAADxoAAAAAAAAQGgAAAAAAAAAAAAAQGgAAAAAAABEaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAADhoAAAAAAAAOGgAAAAAAAAAAAAAAAPC/"
						],
						[
							282,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAABEaAAAAAAAAExoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAERoAAAAAAAARGgAAAAAAAAAAAAAAAPC/"
						],
						[
							283,
							1,
							"insert",
							{
								"characters": "int"
							},
							"AwAAABIaAAAAAAAAExoAAAAAAAAAAAAAExoAAAAAAAAUGgAAAAAAAAAAAAAUGgAAAAAAABUaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAEhoAAAAAAAASGgAAAAAAAAAAAAAAAPC/"
						],
						[
							284,
							1,
							"insert",
							{
								"characters": " i=0;"
							},
							"BQAAABUaAAAAAAAAFhoAAAAAAAAAAAAAFhoAAAAAAAAXGgAAAAAAAAAAAAAXGgAAAAAAABgaAAAAAAAAAAAAABgaAAAAAAAAGRoAAAAAAAAAAAAAGRoAAAAAAAAaGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFRoAAAAAAAAVGgAAAAAAAAAAAAAAAPC/"
						],
						[
							285,
							1,
							"insert",
							{
								"characters": " i<n;"
							},
							"BQAAABoaAAAAAAAAGxoAAAAAAAAAAAAAGxoAAAAAAAAcGgAAAAAAAAAAAAAcGgAAAAAAAB0aAAAAAAAAAAAAAB0aAAAAAAAAHhoAAAAAAAAAAAAAHhoAAAAAAAAfGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAGhoAAAAAAAAaGgAAAAAAAAAAAAAAAPC/"
						],
						[
							286,
							1,
							"insert",
							{
								"characters": " i++"
							},
							"BAAAAB8aAAAAAAAAIBoAAAAAAAAAAAAAIBoAAAAAAAAhGgAAAAAAAAAAAAAhGgAAAAAAACIaAAAAAAAAAAAAACIaAAAAAAAAIxoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAHxoAAAAAAAAfGgAAAAAAAAAAAAAAAPC/"
						],
						[
							288,
							1,
							"astyleformat",
							null,
							"BwAAAA4aAAAAAAAADxoAAAAAAAAAAAAAEhoAAAAAAAATGgAAAAAAAAAAAAAZGgAAAAAAABoaAAAAAAAAAAAAABsaAAAAAAAAHBoAAAAAAAAAAAAAIBoAAAAAAAAhGgAAAAAAAAAAAAAiGgAAAAAAACMaAAAAAAAAAAAAAC0aAAAAAAAALhoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAJBoAAAAAAAAkGgAAAAAAAAAAAAAAAPC/"
						],
						[
							289,
							1,
							"insert_snippet",
							{
								"contents": "{$0}"
							},
							"AQAAACoaAAAAAAAALBoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAKhoAAAAAAAAqGgAAAAAAAAAAAAAAAPC/"
						],
						[
							290,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
							},
							"BgAAACsaAAAAAAAALBoAAAAAAAAAAAAALBoAAAAAAAAtGgAAAAAAAAAAAAAtGgAAAAAAAC4aAAAAAAAAAAAAAC4aAAAAAAAALxoAAAAAAAAAAAAALBoAAAAAAAAsGgAAAAAAAAEAAAAJLBoAAAAAAAAuGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAKxoAAAAAAAArGgAAAAAAAAAAAAAAAPC/"
						],
						[
							291,
							1,
							"astyleformat",
							null,
							"AwAAACoaAAAAAAAAKxoAAAAAAAAAAAAALRoAAAAAAAAtGgAAAAAAAAIAAAAJCTMaAAAAAAAAMxoAAAAAAAABAAAACQ",
							"AQAAAAAAAAABAAAALhoAAAAAAAAuGgAAAAAAAAAAAAAAAPC/"
						],
						[
							292,
							1,
							"insert",
							{
								"characters": "for"
							},
							"AwAAAC0aAAAAAAAALhoAAAAAAAAAAAAALhoAAAAAAAAvGgAAAAAAAAAAAAAvGgAAAAAAADAaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAALRoAAAAAAAAtGgAAAAAAAAAAAAAAAPC/"
						],
						[
							293,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAADAaAAAAAAAAMhoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAMBoAAAAAAAAwGgAAAAAAAAAAAAAAAPC/"
						],
						[
							294,
							1,
							"insert",
							{
								"characters": "int"
							},
							"AwAAADEaAAAAAAAAMhoAAAAAAAAAAAAAMhoAAAAAAAAzGgAAAAAAAAAAAAAzGgAAAAAAADQaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAMRoAAAAAAAAxGgAAAAAAAAAAAAAAAPC/"
						],
						[
							295,
							1,
							"insert",
							{
								"characters": " j="
							},
							"AwAAADQaAAAAAAAANRoAAAAAAAAAAAAANRoAAAAAAAA2GgAAAAAAAAAAAAA2GgAAAAAAADcaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAANBoAAAAAAAA0GgAAAAAAAAAAAAAAAPC/"
						],
						[
							296,
							1,
							"insert",
							{
								"characters": "i+1"
							},
							"AwAAADcaAAAAAAAAOBoAAAAAAAAAAAAAOBoAAAAAAAA5GgAAAAAAAAAAAAA5GgAAAAAAADoaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAANxoAAAAAAAA3GgAAAAAAAAAAAAAAAPC/"
						],
						[
							297,
							1,
							"astyleformat",
							null,
							"BwAAAC0aAAAAAAAALxoAAAAAAAAAAAAAMhoAAAAAAAAzGgAAAAAAAAAAAAA5GgAAAAAAADoaAAAAAAAAAAAAADsaAAAAAAAAPBoAAAAAAAAAAAAAPRoAAAAAAAA+GgAAAAAAAAAAAAA/GgAAAAAAAEAaAAAAAAAAAAAAAEMaAAAAAAAARBoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAOhoAAAAAAAA6GgAAAAAAAAAAAAAAAPC/"
						],
						[
							298,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAEEaAAAAAAAAQhoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAQRoAAAAAAABBGgAAAAAAAAAAAAAAAPC/"
						],
						[
							299,
							1,
							"insert",
							{
								"characters": " j<n;"
							},
							"BQAAAEIaAAAAAAAAQxoAAAAAAAAAAAAAQxoAAAAAAABEGgAAAAAAAAAAAABEGgAAAAAAAEUaAAAAAAAAAAAAAEUaAAAAAAAARhoAAAAAAAAAAAAARhoAAAAAAABHGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAQhoAAAAAAABCGgAAAAAAAAAAAAAAAPC/"
						],
						[
							300,
							1,
							"insert",
							{
								"characters": " j++"
							},
							"BAAAAEcaAAAAAAAASBoAAAAAAAAAAAAASBoAAAAAAABJGgAAAAAAAAAAAABJGgAAAAAAAEoaAAAAAAAAAAAAAEoaAAAAAAAASxoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAARxoAAAAAAABHGgAAAAAAAAAAAAAAAPC/"
						],
						[
							302,
							1,
							"astyleformat",
							null,
							"AgAAAEQaAAAAAAAARRoAAAAAAAAAAAAARhoAAAAAAABHGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAATBoAAAAAAABMGgAAAAAAAAAAAAAAAPC/"
						],
						[
							303,
							1,
							"insert_snippet",
							{
								"contents": "{$0}"
							},
							"AQAAAE4aAAAAAAAAUBoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAThoAAAAAAABOGgAAAAAAAAAAAAAAAPC/"
						],
						[
							304,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
							},
							"BgAAAE8aAAAAAAAAUBoAAAAAAAAAAAAAUBoAAAAAAABSGgAAAAAAAAAAAABSGgAAAAAAAFMaAAAAAAAAAAAAAFMaAAAAAAAAVRoAAAAAAAAAAAAAUBoAAAAAAABQGgAAAAAAAAIAAAAJCVAaAAAAAAAAUxoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAATxoAAAAAAABPGgAAAAAAAAAAAAAAAPC/"
						],
						[
							305,
							1,
							"astyleformat",
							null,
							"AwAAAE4aAAAAAAAATxoAAAAAAAAAAAAAURoAAAAAAABRGgAAAAAAAAMAAAAJCQlWGgAAAAAAAFYaAAAAAAAAAQAAAAk",
							"AQAAAAAAAAABAAAAUxoAAAAAAABTGgAAAAAAAAAAAAAAAPC/"
						],
						[
							308,
							1,
							"insert",
							{
								"characters": "int"
							},
							"AwAAAA0aAAAAAAAADhoAAAAAAAAAAAAADhoAAAAAAAAPGgAAAAAAAAAAAAAPGgAAAAAAABAaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAADRoAAAAAAAANGgAAAAAAAAAAAAAAAPC/"
						],
						[
							309,
							1,
							"insert",
							{
								"characters": " cnt="
							},
							"BQAAABAaAAAAAAAAERoAAAAAAAAAAAAAERoAAAAAAAASGgAAAAAAAAAAAAASGgAAAAAAABMaAAAAAAAAAAAAABMaAAAAAAAAFBoAAAAAAAAAAAAAFBoAAAAAAAAVGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAEBoAAAAAAAAQGgAAAAAAAAAAAAAAAPC/"
						],
						[
							310,
							1,
							"insert",
							{
								"characters": "0;"
							},
							"AgAAABUaAAAAAAAAFhoAAAAAAAAAAAAAFhoAAAAAAAAXGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFRoAAAAAAAAVGgAAAAAAAAAAAAAAAPC/"
						],
						[
							311,
							1,
							"astyleformat",
							null,
							"AwAAAA0aAAAAAAAADhoAAAAAAAAAAAAAFRoAAAAAAAAWGgAAAAAAAAAAAAAXGgAAAAAAABgaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFxoAAAAAAAAXGgAAAAAAAAAAAAAAAPC/"
						],
						[
							314,
							1,
							"insert",
							{
								"characters": "if"
							},
							"AgAAAF4aAAAAAAAAXxoAAAAAAAAAAAAAXxoAAAAAAABgGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAXhoAAAAAAABeGgAAAAAAAAAAAAAAAPC/"
						],
						[
							315,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAGAaAAAAAAAAYhoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAYBoAAAAAAABgGgAAAAAAAAAAAAAAAPC/"
						],
						[
							316,
							1,
							"insert",
							{
								"characters": "a"
							},
							"AQAAAGEaAAAAAAAAYhoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAYRoAAAAAAABhGgAAAAAAAAAAAAAAAPC/"
						],
						[
							317,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAGIaAAAAAAAAZBoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAYhoAAAAAAABiGgAAAAAAAAAAAAAAAPC/"
						],
						[
							318,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAGMaAAAAAAAAZBoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAYxoAAAAAAABjGgAAAAAAAAAAAAAAAPC/"
						],
						[
							320,
							1,
							"astyleformat",
							null,
							"AwAAAF4aAAAAAAAAYRoAAAAAAAAAAAAAYxoAAAAAAABkGgAAAAAAAAAAAABrGgAAAAAAAGwaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAZRoAAAAAAABlGgAAAAAAAAAAAAAAAPC/"
						],
						[
							321,
							1,
							"insert",
							{
								"characters": "+a"
							},
							"AgAAAGkaAAAAAAAAahoAAAAAAAAAAAAAahoAAAAAAABrGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAaRoAAAAAAABpGgAAAAAAAAAAAAAAAPC/"
						],
						[
							322,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAGsaAAAAAAAAbRoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAaxoAAAAAAABrGgAAAAAAAAAAAAAAAPC/"
						],
						[
							323,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAGwaAAAAAAAAbRoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAbBoAAAAAAABsGgAAAAAAAAAAAAAAAPC/"
						],
						[
							325,
							1,
							"astyleformat",
							null,
							"AgAAAGkaAAAAAAAAahoAAAAAAAAAAAAAaxoAAAAAAABsGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAbhoAAAAAAABuGgAAAAAAAAAAAAAAAPC/"
						],
						[
							326,
							1,
							"insert",
							{
								"characters": "<=r"
							},
							"AwAAAHAaAAAAAAAAcRoAAAAAAAAAAAAAcRoAAAAAAAByGgAAAAAAAAAAAAByGgAAAAAAAHMaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAcBoAAAAAAABwGgAAAAAAAAAAAAAAAPC/"
						],
						[
							328,
							1,
							"astyleformat",
							null,
							"AgAAAHAaAAAAAAAAcRoAAAAAAAAAAAAAcxoAAAAAAAB0GgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAdBoAAAAAAAB0GgAAAAAAAAAAAAAAAPC/"
						],
						[
							330,
							1,
							"insert",
							{
								"characters": "&&"
							},
							"AgAAAHUaAAAAAAAAdhoAAAAAAAAAAAAAdhoAAAAAAAB3GgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAdRoAAAAAAAB1GgAAAAAAAAAAAAAAAPC/"
						],
						[
							333,
							1,
							"left_delete",
							null,
							"AQAAAHEaAAAAAAAAcRoAAAAAAAABAAAAPA",
							"AQAAAAAAAAABAAAAchoAAAAAAAByGgAAAAAAAAAAAAAAAPC/"
						],
						[
							334,
							1,
							"insert",
							{
								"characters": "?"
							},
							"AQAAAHEaAAAAAAAAchoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAcRoAAAAAAABxGgAAAAAAAAAAAAAAAPC/"
						],
						[
							336,
							1,
							"astyleformat",
							null,
							"AQAAAHIaAAAAAAAAcxoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAcxoAAAAAAABzGgAAAAAAAAAAAAAAAPC/"
						],
						[
							337,
							3,
							"left_delete",
							null,
							"AwAAAHMaAAAAAAAAcxoAAAAAAAABAAAAPXIaAAAAAAAAchoAAAAAAAABAAAAIHEaAAAAAAAAcRoAAAAAAAABAAAAPw",
							"AQAAAAAAAAABAAAAdBoAAAAAAAB0GgAAAAAAAAAAAAAAAPC/"
						],
						[
							339,
							1,
							"insert",
							{
								"characters": ">="
							},
							"AgAAAHEaAAAAAAAAchoAAAAAAAAAAAAAchoAAAAAAABzGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAcRoAAAAAAABxGgAAAAAAAAAAAAAAAPC/"
						],
						[
							343,
							1,
							"left_delete",
							null,
							"AQAAAHQaAAAAAAAAdBoAAAAAAAABAAAAcg",
							"AQAAAAAAAAABAAAAdRoAAAAAAAB1GgAAAAAAAAAAAAAAAPC/"
						],
						[
							344,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAHQaAAAAAAAAdRoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAdBoAAAAAAAB0GgAAAAAAAAAAAAAAAPC/"
						],
						[
							345,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAHUaAAAAAAAAdhoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAdRoAAAAAAAB1GgAAAAAAAAAAAAAAAPC/"
						],
						[
							348,
							1,
							"insert",
							{
								"characters": " a"
							},
							"AgAAAHgaAAAAAAAAeRoAAAAAAAAAAAAAeRoAAAAAAAB6GgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAeBoAAAAAAAB4GgAAAAAAAAAAAAAAAPC/"
						],
						[
							349,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAHoaAAAAAAAAfBoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAehoAAAAAAAB6GgAAAAAAAAAAAAAAAPC/"
						],
						[
							351,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAHsaAAAAAAAAfBoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAexoAAAAAAAB7GgAAAAAAAAAAAAAAAPC/"
						],
						[
							354,
							1,
							"insert",
							{
								"characters": "+a"
							},
							"AgAAAH0aAAAAAAAAfhoAAAAAAAAAAAAAfhoAAAAAAAB/GgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAfRoAAAAAAAB9GgAAAAAAAAAAAAAAAPC/"
						],
						[
							355,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAH8aAAAAAAAAgRoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAfxoAAAAAAAB/GgAAAAAAAAAAAAAAAPC/"
						],
						[
							356,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAIAaAAAAAAAAgRoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAgBoAAAAAAACAGgAAAAAAAAAAAAAAAPC/"
						],
						[
							358,
							1,
							"astyleformat",
							null,
							"AgAAAH0aAAAAAAAAfhoAAAAAAAAAAAAAfxoAAAAAAACAGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAghoAAAAAAACCGgAAAAAAAAAAAAAAAPC/"
						],
						[
							359,
							1,
							"insert",
							{
								"characters": "<=r"
							},
							"AwAAAIQaAAAAAAAAhRoAAAAAAAAAAAAAhRoAAAAAAACGGgAAAAAAAAAAAACGGgAAAAAAAIcaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAhBoAAAAAAACEGgAAAAAAAAAAAAAAAPC/"
						],
						[
							361,
							1,
							"insert",
							{
								"characters": "\ncnt++p;"
							},
							"CwAAAIgaAAAAAAAAiRoAAAAAAAAAAAAAiRoAAAAAAACMGgAAAAAAAAAAAACJGgAAAAAAAIkaAAAAAAAAAwAAAAkJCYkaAAAAAAAAjRoAAAAAAAAAAAAAjRoAAAAAAACOGgAAAAAAAAAAAACOGgAAAAAAAI8aAAAAAAAAAAAAAI8aAAAAAAAAkBoAAAAAAAAAAAAAkBoAAAAAAACRGgAAAAAAAAAAAACRGgAAAAAAAJIaAAAAAAAAAAAAAJIaAAAAAAAAkxoAAAAAAAAAAAAAkxoAAAAAAACUGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAiBoAAAAAAACIGgAAAAAAAAAAAAAAAPC/"
						],
						[
							362,
							1,
							"astyleformat",
							null,
							"AwAAAIQaAAAAAAAAhRoAAAAAAAAAAAAAhxoAAAAAAACIGgAAAAAAAAAAAACXGgAAAAAAAJcaAAAAAAAAAQAAAAk",
							"AQAAAAAAAAABAAAAlBoAAAAAAACUGgAAAAAAAAAAAAAAAPC/"
						],
						[
							363,
							2,
							"left_delete",
							null,
							"AgAAAJUaAAAAAAAAlRoAAAAAAAABAAAAO5QaAAAAAAAAlBoAAAAAAAABAAAAcA",
							"AQAAAAAAAAABAAAAlhoAAAAAAACWGgAAAAAAAAAAAAAAAPC/"
						],
						[
							364,
							1,
							"astyleformat",
							null,
							"AQAAAJcaAAAAAAAAmBoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAlBoAAAAAAACUGgAAAAAAAAAAAAAAAPC/"
						],
						[
							365,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAJQaAAAAAAAAlRoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAlBoAAAAAAACUGgAAAAAAAAAAAAAAAPC/"
						],
						[
							366,
							1,
							"astyleformat",
							null,
							"AQAAAJgaAAAAAAAAmBoAAAAAAAABAAAACQ",
							"AQAAAAAAAAABAAAAlRoAAAAAAACVGgAAAAAAAAAAAAAAAPC/"
						],
						[
							369,
							2,
							"left_delete",
							null,
							"AgAAAJ0aAAAAAAAAnRoAAAAAAAABAAAACpwaAAAAAAAAnBoAAAAAAAABAAAACg",
							"AQAAAAAAAAABAAAAnhoAAAAAAACeGgAAAAAAAAAAAAAAAPC/"
						],
						[
							373,
							1,
							"insert",
							{
								"characters": "<<ant"
							},
							"BQAAAKMaAAAAAAAApBoAAAAAAAAAAAAApBoAAAAAAAClGgAAAAAAAAAAAAClGgAAAAAAAKYaAAAAAAAAAAAAAKYaAAAAAAAApxoAAAAAAAAAAAAApxoAAAAAAACoGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAoxoAAAAAAACjGgAAAAAAAAAAAAAAAPC/"
						],
						[
							374,
							1,
							"astyleformat",
							null,
							"AgAAAKUaAAAAAAAAphoAAAAAAAAAAAAAqRoAAAAAAACqGgAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAqBoAAAAAAACoGgAAAAAAAAAAAAAAAPC/"
						],
						[
							375,
							4,
							"left_delete",
							null,
							"BAAAAKkaAAAAAAAAqRoAAAAAAAABAAAAIKgaAAAAAAAAqBoAAAAAAAABAAAAdKcaAAAAAAAApxoAAAAAAAABAAAAbqYaAAAAAAAAphoAAAAAAAABAAAAYQ",
							"AQAAAAAAAAABAAAAqhoAAAAAAACqGgAAAAAAAAAAAAAAAPC/"
						],
						[
							376,
							1,
							"insert",
							{
								"characters": "cnt"
							},
							"AwAAAKYaAAAAAAAApxoAAAAAAAAAAAAApxoAAAAAAACoGgAAAAAAAAAAAACoGgAAAAAAAKkaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAphoAAAAAAACmGgAAAAAAAAAAAAAAAPC/"
						],
						[
							377,
							1,
							"astyleformat",
							null,
							"AQAAAKkaAAAAAAAAqhoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAqRoAAAAAAACpGgAAAAAAAAAAAAAAAPC/"
						],
						[
							384,
							1,
							"left_delete",
							null,
							"AQAAAOcZAAAAAAAA5xkAAAAAAAAlAAAACgkvLyBkZWJ1ZyhhKTsKCS8vIG91dHB1dChhLCBuLCAiICIpOw",
							"AQAAAAAAAAABAAAADBoAAAAAAADnGQAAAAAAAAAAAAAAAPC/"
						],
						[
							394,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"GgAAAGIYAAAAAAAAYhgAAAAAAAADAAAALy8g9RcAAAAAAAD1FwAAAAAAAAMAAAAvLyCXFwAAAAAAAJcXAAAAAAAAAwAAAC8vIC8XAAAAAAAALxcAAAAAAAADAAAALy8gwxYAAAAAAADDFgAAAAAAAAMAAAAvLyCPFgAAAAAAAI8WAAAAAAAAAwAAAC8vIGMWAAAAAAAAYxYAAAAAAAADAAAALy8gKhYAAAAAAAAqFgAAAAAAAAMAAAAvLyDwFQAAAAAAAPAVAAAAAAAAAwAAAC8vII8VAAAAAAAAjxUAAAAAAAADAAAALy8gOxUAAAAAAAA7FQAAAAAAAAMAAAAvLyDIFAAAAAAAAMgUAAAAAAAAAwAAAC8vIHYUAAAAAAAAdhQAAAAAAAADAAAALy8gJBQAAAAAAAAkFAAAAAAAAAMAAAAvLyDSEwAAAAAAANITAAAAAAAAAwAAAC8vIJYTAAAAAAAAlhMAAAAAAAADAAAALy8gOxMAAAAAAAA7EwAAAAAAAAMAAAAvLyDPEgAAAAAAAM8SAAAAAAAAAwAAAC8vIKESAAAAAAAAoRIAAAAAAAADAAAALy8gQhIAAAAAAABCEgAAAAAAAAMAAAAvLyDGEQAAAAAAAMYRAAAAAAAAAwAAAC8vIFIRAAAAAAAAUhEAAAAAAAADAAAALy8g2RAAAAAAAADZEAAAAAAAAAMAAAAvLyBXEAAAAAAAAFcQAAAAAAAAAwAAAC8vICAQAAAAAAAAIBAAAAAAAAADAAAALy8glQ8AAAAAAACVDwAAAAAAAAMAAAAvLyA",
							"AQAAAAAAAAABAAAAyBgAAAAAAADLDwAAAAAAAAAAAAAAAPC/"
						],
						[
							395,
							1,
							"astyleformat",
							null,
							"",
							"AQAAAAAAAAABAAAAehgAAAAAAADIDwAAAAAAAAAAAAAAAPC/"
						],
						[
							405,
							1,
							"insert",
							{
								"characters": "1"
							},
							"AQAAAMQaAAAAAAAAxRoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAxBoAAAAAAADEGgAAAAAAAAAAAAAAAPC/"
						],
						[
							413,
							1,
							"insert",
							{
								"characters": "\n\n"
							},
							"AgAAAL4bAAAAAAAAvxsAAAAAAAAAAAAAvxsAAAAAAADAGwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAvhsAAAAAAAC+GwAAAAAAAAAAAAAAAPC/"
						],
						[
							415,
							1,
							"paste",
							null,
							"AQAAAMAbAAAAAAAAxBwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAwBsAAAAAAADAGwAAAAAAAAAAAAAAAPC/"
						],
						[
							419,
							1,
							"left_delete",
							null,
							"AQAAAMobAAAAAAAAyhsAAAAAAAABAAAAMQ",
							"AQAAAAAAAAABAAAAyxsAAAAAAADLGwAAAAAAAAAAAAAAAPC/"
						],
						[
							423,
							1,
							"left_delete",
							null,
							"AQAAAMQaAAAAAAAAxBoAAAAAAAABAAAAMQ",
							"AQAAAAAAAAABAAAAxRoAAAAAAADFGgAAAAAAAAAAAAAAAPC/"
						],
						[
							424,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAAMQaAAAAAAAAxRoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAxBoAAAAAAADEGgAAAAAAAAAAAAAAAPC/"
						],
						[
							430,
							1,
							"left_delete",
							null,
							"AQAAAEIcAAAAAAAAQhwAAAAAAABdAAAAZm9yIChpbnQgaiA9IGkgKyAxOyBqIDwgbjsgaisrKSB7CgkJCWlmIChhW2ldICsgYVtqXSA+PSBsICYmIGFbaV0gKyBhW2pdIDw9IHIpCgkJCQljbnQrKzsKCQl9",
							"AQAAAAAAAAABAAAAnxwAAAAAAABCHAAAAAAAAAAAAAAAAPC/"
						],
						[
							431,
							1,
							"astyleformat",
							null,
							"AQAAAEAcAAAAAAAAQBwAAAAAAAACAAAACQk",
							"AQAAAAAAAAABAAAAQhwAAAAAAABCHAAAAAAAAAAAAAAAAPC/"
						],
						[
							432,
							1,
							"left_delete",
							null,
							"AQAAAD8cAAAAAAAAPxwAAAAAAAABAAAACg",
							"AQAAAAAAAAABAAAAQBwAAAAAAABAHAAAAAAAAAAAAAAAAPC/"
						],
						[
							438,
							1,
							"insert",
							{
								"characters": "\nun"
							},
							"BAAAACAcAAAAAAAAIRwAAAAAAAAAAAAAIRwAAAAAAAAiHAAAAAAAAAAAAAAiHAAAAAAAACMcAAAAAAAAAAAAACMcAAAAAAAAJBwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAIBwAAAAAAAAgHAAAAAAAAAAAAAAAAPC/"
						],
						[
							441,
							1,
							"insert",
							{
								"characters": "o"
							},
							"AQAAACQcAAAAAAAAJRwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAJBwAAAAAAAAkHAAAAAAAAAAAAAAAAPC/"
						],
						[
							442,
							1,
							"insert_completion",
							{
								"completion": "unordered_map",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "unordered_map"
							},
							"AgAAACIcAAAAAAAAIhwAAAAAAAADAAAAdW5vIhwAAAAAAAAvHAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAJRwAAAAAAAAlHAAAAAAAAAAAAAAAAPC/"
						],
						[
							444,
							1,
							"insert",
							{
								"characters": "<int,"
							},
							"BQAAAC8cAAAAAAAAMBwAAAAAAAAAAAAAMBwAAAAAAAAxHAAAAAAAAAAAAAAxHAAAAAAAADIcAAAAAAAAAAAAADIcAAAAAAAAMxwAAAAAAAAAAAAAMxwAAAAAAAA0HAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAALxwAAAAAAAAvHAAAAAAAAAAAAAAAAPC/"
						],
						[
							445,
							1,
							"insert",
							{
								"characters": " int>"
							},
							"BQAAADQcAAAAAAAANRwAAAAAAAAAAAAANRwAAAAAAAA2HAAAAAAAAAAAAAA2HAAAAAAAADccAAAAAAAAAAAAADccAAAAAAAAOBwAAAAAAAAAAAAAOBwAAAAAAAA5HAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAANBwAAAAAAAA0HAAAAAAAAAAAAAAAAPC/"
						],
						[
							447,
							1,
							"insert",
							{
								"characters": " mp;"
							},
							"BAAAADkcAAAAAAAAOhwAAAAAAAAAAAAAOhwAAAAAAAA7HAAAAAAAAAAAAAA7HAAAAAAAADwcAAAAAAAAAAAAADwcAAAAAAAAPRwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAORwAAAAAAAA5HAAAAAAAAAAAAAAAAPC/"
						],
						[
							449,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAD0cAAAAAAAAPhwAAAAAAAAAAAAAPhwAAAAAAAA/HAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAPRwAAAAAAAA9HAAAAAAAAAAAAAAAAPC/"
						],
						[
							450,
							1,
							"astyleformat",
							null,
							"AQAAAD4cAAAAAAAAPhwAAAAAAAABAAAACQ",
							"AQAAAAAAAAABAAAAPxwAAAAAAAA/HAAAAAAAAAAAAAAAAPC/"
						],
						[
							451,
							1,
							"insert",
							{
								"characters": "for"
							},
							"AwAAAD4cAAAAAAAAPxwAAAAAAAAAAAAAPxwAAAAAAABAHAAAAAAAAAAAAABAHAAAAAAAAEEcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAPhwAAAAAAAA+HAAAAAAAAAAAAAAAAPC/"
						],
						[
							452,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAEEcAAAAAAAAQxwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAQRwAAAAAAABBHAAAAAAAAAAAAAAAAPC/"
						],
						[
							453,
							1,
							"insert",
							{
								"characters": "int"
							},
							"AwAAAEIcAAAAAAAAQxwAAAAAAAAAAAAAQxwAAAAAAABEHAAAAAAAAAAAAABEHAAAAAAAAEUcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAQhwAAAAAAABCHAAAAAAAAAAAAAAAAPC/"
						],
						[
							454,
							1,
							"insert",
							{
								"characters": " x;"
							},
							"AwAAAEUcAAAAAAAARhwAAAAAAAAAAAAARhwAAAAAAABHHAAAAAAAAAAAAABHHAAAAAAAAEgcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAARRwAAAAAAABFHAAAAAAAAAAAAAAAAPC/"
						],
						[
							455,
							1,
							"astyleformat",
							null,
							"BAAAAD4cAAAAAAAAPxwAAAAAAAAAAAAAQhwAAAAAAABDHAAAAAAAAAAAAABMHAAAAAAAAE0cAAAAAAAAAAAAAGwcAAAAAAAAbRwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAASBwAAAAAAABIHAAAAAAAAAAAAAAAAPC/"
						],
						[
							456,
							1,
							"insert",
							{
								"characters": "a"
							},
							"AQAAAEocAAAAAAAASxwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAShwAAAAAAABKHAAAAAAAAAAAAAAAAPC/"
						],
						[
							457,
							2,
							"left_delete",
							null,
							"AgAAAEocAAAAAAAAShwAAAAAAAABAAAAYUkcAAAAAAAASRwAAAAAAAABAAAAOw",
							"AQAAAAAAAAABAAAASxwAAAAAAABLHAAAAAAAAAAAAAAAAPC/"
						],
						[
							458,
							1,
							"insert",
							{
								"characters": ":a"
							},
							"AgAAAEkcAAAAAAAAShwAAAAAAAAAAAAAShwAAAAAAABLHAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAASRwAAAAAAABJHAAAAAAAAAAAAAAAAPC/"
						],
						[
							460,
							1,
							"astyleformat",
							null,
							"AgAAAEkcAAAAAAAAShwAAAAAAAAAAAAASxwAAAAAAABMHAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAATBwAAAAAAABMHAAAAAAAAAAAAAAAAPC/"
						],
						[
							461,
							1,
							"insert",
							{
								"characters": "m"
							},
							"AQAAAE4cAAAAAAAATxwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAThwAAAAAAABOHAAAAAAAAAAAAAAAAPC/"
						],
						[
							462,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAE8cAAAAAAAAURwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAATxwAAAAAAABPHAAAAAAAAAAAAAAAAPC/"
						],
						[
							463,
							1,
							"insert",
							{
								"characters": "x"
							},
							"AQAAAFAcAAAAAAAAURwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAUBwAAAAAAABQHAAAAAAAAAAAAAAAAPC/"
						],
						[
							466,
							1,
							"insert",
							{
								"characters": "++;"
							},
							"AwAAAFIcAAAAAAAAUxwAAAAAAAAAAAAAUxwAAAAAAABUHAAAAAAAAAAAAABUHAAAAAAAAFUcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAUhwAAAAAAABSHAAAAAAAAAAAAAAAAPC/"
						],
						[
							467,
							1,
							"astyleformat",
							null,
							"AgAAAFccAAAAAAAAVxwAAAAAAAABAAAACXUcAAAAAAAAdRwAAAAAAAABAAAACQ",
							"AQAAAAAAAAABAAAAVRwAAAAAAABVHAAAAAAAAAAAAAAAAPC/"
						],
						[
							470,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAE4cAAAAAAAATxwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAThwAAAAAAABOHAAAAAAAAAAAAAAAAPC/"
						],
						[
							476,
							1,
							"insert",
							{
								"characters": "p"
							},
							"AQAAAFAcAAAAAAAAURwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAUBwAAAAAAABQHAAAAAAAAAAAAAAAAPC/"
						],
						[
							483,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AwAAAHYcAAAAAAAAdxwAAAAAAAAAAAAAdxwAAAAAAAB4HAAAAAAAAAAAAAB4HAAAAAAAAHkcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAdhwAAAAAAAB2HAAAAAAAAAAAAAAAAPC/"
						],
						[
							484,
							1,
							"astyleformat",
							null,
							"AQAAAHccAAAAAAAAdxwAAAAAAAACAAAACQk",
							"AQAAAAAAAAABAAAAeRwAAAAAAAB5HAAAAAAAAAAAAAAAAPC/"
						],
						[
							485,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAHccAAAAAAAAeRwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAdxwAAAAAAAB3HAAAAAAAAAAAAAAAAPC/"
						],
						[
							486,
							1,
							"astyleformat",
							null,
							"AQAAAHccAAAAAAAAeRwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAeBwAAAAAAAB4HAAAAAAAAAAAAAAAAPC/"
						],
						[
							487,
							1,
							"insert",
							{
								"characters": "if"
							},
							"AgAAAHocAAAAAAAAexwAAAAAAAAAAAAAexwAAAAAAAB8HAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAehwAAAAAAAB6HAAAAAAAAAAAAAAAAPC/"
						],
						[
							490,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAB8cAAAAAAAAIBwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAHxwAAAAAAAAfHAAAAAAAAAAAAAAAAPC/"
						],
						[
							491,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAACAcAAAAAAAAIRwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAIBwAAAAAAAAgHAAAAAAAAAAAAAAAAPC/"
						],
						[
							492,
							1,
							"insert",
							{
								"characters": "num"
							},
							"AwAAACEcAAAAAAAAIhwAAAAAAAAAAAAAIhwAAAAAAAAjHAAAAAAAAAAAAAAjHAAAAAAAACQcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAIRwAAAAAAAAhHAAAAAAAAAAAAAAAAPC/"
						],
						[
							512,
							1,
							"insert",
							{
								"characters": "brute"
							},
							"BgAAAL8aAAAAAAAAwBoAAAAAAAAAAAAAwBoAAAAAAADAGgAAAAAAAAYAAABzb2x2ZTLAGgAAAAAAAMEaAAAAAAAAAAAAAMEaAAAAAAAAwhoAAAAAAAAAAAAAwhoAAAAAAADDGgAAAAAAAAAAAADDGgAAAAAAAMQaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAvxoAAAAAAADFGgAAAAAAAAAAAAAAAPC/"
						],
						[
							525,
							1,
							"insert",
							{
								"characters": "\n\n\n"
							},
							"AwAAAKUcAAAAAAAAphwAAAAAAAAAAAAAphwAAAAAAACnHAAAAAAAAAAAAACnHAAAAAAAAKgcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAApRwAAAAAAAClHAAAAAAAAAAAAAAAAPC/"
						],
						[
							527,
							1,
							"insert",
							{
								"characters": "void"
							},
							"BAAAAKgcAAAAAAAAqRwAAAAAAAAAAAAAqRwAAAAAAACqHAAAAAAAAAAAAACqHAAAAAAAAKscAAAAAAAAAAAAAKscAAAAAAAArBwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAqBwAAAAAAACoHAAAAAAAAAAAAAAAAPC/"
						],
						[
							529,
							1,
							"insert",
							{
								"characters": " new"
							},
							"BAAAAKwcAAAAAAAArRwAAAAAAAAAAAAArRwAAAAAAACuHAAAAAAAAAAAAACuHAAAAAAAAK8cAAAAAAAAAAAAAK8cAAAAAAAAsBwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAArBwAAAAAAACsHAAAAAAAAAAAAAAAAPC/"
						],
						[
							531,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAALAcAAAAAAAAshwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAsBwAAAAAAACwHAAAAAAAAAAAAAAAAPC/"
						],
						[
							534,
							1,
							"insert",
							{
								"characters": "App"
							},
							"AwAAALAcAAAAAAAAsRwAAAAAAAAAAAAAsRwAAAAAAACyHAAAAAAAAAAAAACyHAAAAAAAALMcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAsBwAAAAAAACwHAAAAAAAAAAAAAAAAPC/"
						],
						[
							536,
							6,
							"left_delete",
							null,
							"BgAAALIcAAAAAAAAshwAAAAAAAABAAAAcLEcAAAAAAAAsRwAAAAAAAABAAAAcLAcAAAAAAAAsBwAAAAAAAABAAAAQa8cAAAAAAAArxwAAAAAAAABAAAAd64cAAAAAAAArhwAAAAAAAABAAAAZa0cAAAAAAAArRwAAAAAAAABAAAAbg",
							"AQAAAAAAAAABAAAAsxwAAAAAAACzHAAAAAAAAAAAAAAAAPC/"
						],
						[
							537,
							1,
							"insert",
							{
								"characters": "solve"
							},
							"BQAAAK0cAAAAAAAArhwAAAAAAAAAAAAArhwAAAAAAACvHAAAAAAAAAAAAACvHAAAAAAAALAcAAAAAAAAAAAAALAcAAAAAAAAsRwAAAAAAAAAAAAAsRwAAAAAAACyHAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAArRwAAAAAAACtHAAAAAAAAAAAAAAAAPC/"
						],
						[
							538,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAALIcAAAAAAAAsxwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAshwAAAAAAACyHAAAAAAAAAAAAAAAAPC/"
						],
						[
							540,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAALUcAAAAAAAAthwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAtRwAAAAAAAC1HAAAAAAAAAAAAAAAAPC/"
						],
						[
							541,
							1,
							"insert_snippet",
							{
								"contents": "{$0}"
							},
							"AQAAALYcAAAAAAAAuBwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAthwAAAAAAAC2HAAAAAAAAAAAAAAAAPC/"
						],
						[
							542,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
							},
							"AwAAALccAAAAAAAAuBwAAAAAAAAAAAAAuBwAAAAAAAC5HAAAAAAAAAAAAAC4HAAAAAAAALkcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAtxwAAAAAAAC3HAAAAAAAAAAAAAAAAPC/"
						],
						[
							543,
							1,
							"astyleformat",
							null,
							"AQAAALgcAAAAAAAAuBwAAAAAAAABAAAACQ",
							"AQAAAAAAAAABAAAAuRwAAAAAAAC5HAAAAAAAAAAAAAAAAPC/"
						],
						[
							544,
							1,
							"paste",
							null,
							"AQAAALgcAAAAAAAAxx0AAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAuBwAAAAAAAC4HAAAAAAAAAAAAAAAAPC/"
						],
						[
							545,
							1,
							"astyleformat",
							null,
							"CQAAALgcAAAAAAAAuRwAAAAAAAAAAAAA2hwAAAAAAADbHAAAAAAAAAAAAADcHAAAAAAAAN0cAAAAAAAAAAAAACgdAAAAAAAAKR0AAAAAAAAAAAAAKh0AAAAAAAArHQAAAAAAAAAAAABZHQAAAAAAAFodAAAAAAAAAAAAAFsdAAAAAAAAXB0AAAAAAAAAAAAAmR0AAAAAAACaHQAAAAAAAAAAAACbHQAAAAAAAJwdAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAxx0AAAAAAADHHQAAAAAAAAAAAAAAAPC/"
						],
						[
							551,
							1,
							"paste",
							null,
							"AQAAALccAAAAAAAA+xwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAtxwAAAAAAAC3HAAAAAAAAAAAAAAAAPC/"
						],
						[
							557,
							1,
							"left_delete",
							null,
							"AQAAAPUcAAAAAAAA9RwAAAAAAAABAAAAYQ",
							"AQAAAAAAAAABAAAA9hwAAAAAAAD2HAAAAAAAAAAAAAAAAPC/"
						],
						[
							558,
							1,
							"insert",
							{
								"characters": "v"
							},
							"AQAAAPUcAAAAAAAA9hwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA9RwAAAAAAAD1HAAAAAAAAAAAAAAAAPC/"
						],
						[
							561,
							1,
							"left_delete",
							null,
							"AQAAAOgcAAAAAAAA6BwAAAAAAAABAAAAYQ",
							"AQAAAAAAAAABAAAA6RwAAAAAAADpHAAAAAAAAAAAAAAAAPC/"
						],
						[
							562,
							1,
							"insert",
							{
								"characters": "v"
							},
							"AQAAAOgcAAAAAAAA6RwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA6BwAAAAAAADoHAAAAAAAAAAAAAAAAPC/"
						],
						[
							567,
							1,
							"insert",
							{
								"characters": "\nre"
							},
							"BAAAABQeAAAAAAAAFR4AAAAAAAAAAAAAFR4AAAAAAAAWHgAAAAAAAAAAAAAWHgAAAAAAABceAAAAAAAAAAAAABceAAAAAAAAGB4AAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFB4AAAAAAAAUHgAAAAAAAAAAAAAAAPC/"
						],
						[
							568,
							1,
							"insert_completion",
							{
								"completion": "return",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "return"
							},
							"AgAAABYeAAAAAAAAFh4AAAAAAAACAAAAcmUWHgAAAAAAABweAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAGB4AAAAAAAAYHgAAAAAAAAAAAAAAAPC/"
						],
						[
							570,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAABweAAAAAAAAHR4AAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAHB4AAAAAAAAcHgAAAAAAAAAAAAAAAPC/"
						],
						[
							574,
							1,
							"insert",
							{
								"characters": "endl"
							},
							"BQAAAA8eAAAAAAAAEB4AAAAAAAAAAAAAEB4AAAAAAAAQHgAAAAAAAAQAAAAnXG4nEB4AAAAAAAARHgAAAAAAAAAAAAARHgAAAAAAABIeAAAAAAAAAAAAABIeAAAAAAAAEx4AAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAEx4AAAAAAAAPHgAAAAAAAAAAAAAAAPC/"
						],
						[
							580,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAADgfAAAAAAAAOR8AAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAOB8AAAAAAAA4HwAAAAAAAAAAAAAAAPC/"
						],
						[
							586,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAH0cAAAAAAAAgBwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAgRwAAAAAAACBHAAAAAAAAAAAAAAAAPC/"
						],
						[
							592,
							1,
							"paste",
							null,
							"AgAAAH0cAAAAAAAACR0AAAAAAAAAAAAACR0AAAAAAAAJHQAAAAAAAAcAAAAvLyAoaWYp",
							"AQAAAAAAAAABAAAAhBwAAAAAAAB9HAAAAAAAAAAAAAAAAPC/"
						],
						[
							593,
							1,
							"astyleformat",
							null,
							"HQAAAIUcAAAAAAAAhhwAAAAAAAAAAAAAhxwAAAAAAACIHAAAAAAAAAAAAACdHAAAAAAAAJ4cAAAAAAAAAAAAAJ8cAAAAAAAAoBwAAAAAAAAAAAAAoRwAAAAAAACiHAAAAAAAAAAAAACjHAAAAAAAAKQcAAAAAAAAAAAAAKYcAAAAAAAApxwAAAAAAAAAAAAArxwAAAAAAACwHAAAAAAAAAAAAACxHAAAAAAAALIcAAAAAAAAAAAAALMcAAAAAAAAtBwAAAAAAAAAAAAAvRwAAAAAAAC9HAAAAAAAAAIAAAAgIMUcAAAAAAAAxhwAAAAAAAAAAAAAxxwAAAAAAADIHAAAAAAAAAAAAADdHAAAAAAAAN4cAAAAAAAAAAAAAN8cAAAAAAAA4BwAAAAAAAAAAAAA4RwAAAAAAADiHAAAAAAAAAAAAADjHAAAAAAAAOQcAAAAAAAAAAAAAOYcAAAAAAAA5xwAAAAAAAAAAAAA7xwAAAAAAADwHAAAAAAAAAAAAADxHAAAAAAAAPIcAAAAAAAAAAAAAPMcAAAAAAAA9BwAAAAAAAAAAAAA/RwAAAAAAAD9HAAAAAAAAAIAAAAgIAYdAAAAAAAABh0AAAAAAAACAAAAICAJHQAAAAAAAAodAAAAAAAAAAAAAAwdAAAAAAAADR0AAAAAAAAAAAAAER0AAAAAAAASHQAAAAAAAAAAAAATHQAAAAAAABQdAAAAAAAAAAAAABcdAAAAAAAAGB0AAAAAAAAAAAAAGR0AAAAAAAAaHQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACR0AAAAAAAAJHQAAAAAAAAAAAAAAAPC/"
						],
						[
							596,
							1,
							"left_delete",
							null,
							"AQAAAJQcAAAAAAAAlBwAAAAAAAABAAAAdg",
							"AQAAAAAAAAABAAAAlRwAAAAAAACVHAAAAAAAAAAAAAAAAPC/"
						],
						[
							597,
							1,
							"insert",
							{
								"characters": "a"
							},
							"AQAAAJQcAAAAAAAAlRwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAlBwAAAAAAACUHAAAAAAAAAAAAAAAAPC/"
						],
						[
							600,
							1,
							"left_delete",
							null,
							"AQAAAKccAAAAAAAApxwAAAAAAAABAAAAdg",
							"AQAAAAAAAAABAAAAqBwAAAAAAACoHAAAAAAAAAAAAAAAAPC/"
						],
						[
							601,
							1,
							"insert",
							{
								"characters": "a"
							},
							"AQAAAKccAAAAAAAAqBwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAApxwAAAAAAACnHAAAAAAAAAAAAAAAAPC/"
						],
						[
							604,
							1,
							"left_delete",
							null,
							"AQAAALQcAAAAAAAAtBwAAAAAAAABAAAAdg",
							"AQAAAAAAAAABAAAAtRwAAAAAAAC1HAAAAAAAAAAAAAAAAPC/"
						],
						[
							605,
							1,
							"insert",
							{
								"characters": "a"
							},
							"AQAAALQcAAAAAAAAtRwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAtBwAAAAAAAC0HAAAAAAAAAAAAAAAAPC/"
						],
						[
							610,
							1,
							"left_delete",
							null,
							"AQAAANQcAAAAAAAA1BwAAAAAAAABAAAAdg",
							"AQAAAAAAAAABAAAA1RwAAAAAAADVHAAAAAAAAAAAAAAAAPC/"
						],
						[
							611,
							1,
							"insert",
							{
								"characters": "a"
							},
							"AQAAANQcAAAAAAAA1RwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA1BwAAAAAAADUHAAAAAAAAAAAAAAAAPC/"
						],
						[
							614,
							1,
							"left_delete",
							null,
							"AQAAAOccAAAAAAAA5xwAAAAAAAABAAAAdg",
							"AQAAAAAAAAABAAAA6BwAAAAAAADoHAAAAAAAAAAAAAAAAPC/"
						],
						[
							615,
							1,
							"insert",
							{
								"characters": "a"
							},
							"AQAAAOccAAAAAAAA6BwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA5xwAAAAAAADnHAAAAAAAAAAAAAAAAPC/"
						],
						[
							618,
							1,
							"left_delete",
							null,
							"AQAAAPQcAAAAAAAA9BwAAAAAAAABAAAAdg",
							"AQAAAAAAAAABAAAA9RwAAAAAAAD1HAAAAAAAAAAAAAAAAPC/"
						],
						[
							619,
							1,
							"insert",
							{
								"characters": "a"
							},
							"AQAAAPQcAAAAAAAA9RwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA9BwAAAAAAAD0HAAAAAAAAAAAAAAAAPC/"
						],
						[
							626,
							1,
							"insert",
							{
								"characters": "cnt"
							},
							"BAAAAAYdAAAAAAAABx0AAAAAAAAAAAAABx0AAAAAAAAHHQAAAAAAAAMAAABhbnMHHQAAAAAAAAgdAAAAAAAAAAAAAAgdAAAAAAAACR0AAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAABh0AAAAAAAAJHQAAAAAAAAAAAAAAAPC/"
						],
						[
							633,
							1,
							"insert",
							{
								"characters": "sort"
							},
							"BQAAACYcAAAAAAAAJxwAAAAAAAAAAAAAJxwAAAAAAAAnHAAAAAAAADUAAAB1bm9yZGVyZWRfbWFwPGludCwgaW50PiBtcDsKCWZvciAoaW50IHggOiBhKSBtcFt4XSsrOyccAAAAAAAAKBwAAAAAAAAAAAAAKBwAAAAAAAApHAAAAAAAAAAAAAApHAAAAAAAACocAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAWxwAAAAAAAAmHAAAAAAAAAAAAAAAAPC/"
						],
						[
							634,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAACocAAAAAAAALBwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAKhwAAAAAAAAqHAAAAAAAAAAAAAAAAPC/"
						],
						[
							635,
							1,
							"insert",
							{
								"characters": "all"
							},
							"AwAAACscAAAAAAAALBwAAAAAAAAAAAAALBwAAAAAAAAtHAAAAAAAAAAAAAAtHAAAAAAAAC4cAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAKxwAAAAAAAArHAAAAAAAAAAAAAAAAPC/"
						],
						[
							636,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAC4cAAAAAAAAMBwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAALhwAAAAAAAAuHAAAAAAAAAAAAAAAAPC/"
						],
						[
							637,
							1,
							"insert",
							{
								"characters": "a"
							},
							"AQAAAC8cAAAAAAAAMBwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAALxwAAAAAAAAvHAAAAAAAAAAAAAAAAPC/"
						],
						[
							639,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAADIcAAAAAAAAMxwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAMhwAAAAAAAAyHAAAAAAAAAAAAAAAAPC/"
						],
						[
							643,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AgAAAB4cAAAAAAAAHxwAAAAAAAAAAAAAHxwAAAAAAAAfHAAAAAAAAAYAAAAsIG51bTs",
							"AQAAAAAAAAABAAAAJBwAAAAAAAAeHAAAAAAAAAAAAAAAAPC/"
						],
						[
							649,
							1,
							"left_delete",
							null,
							"AQAAAKcfAAAAAAAApx8AAAAAAAABAAAAMg",
							"AQAAAAAAAAABAAAAqB8AAAAAAACoHwAAAAAAAAAAAAAAAPC/"
						],
						[
							653,
							1,
							"left_delete",
							null,
							"AQAAABQdAAAAAAAAFB0AAAAAAAABAAAACg",
							"AQAAAAAAAAABAAAAFR0AAAAAAAAVHQAAAAAAAAAAAAAAAPC/"
						],
						[
							680,
							1,
							"insert",
							{
								"characters": "-1"
							},
							"AgAAAEUcAAAAAAAARhwAAAAAAAAAAAAARhwAAAAAAABHHAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAARRwAAAAAAABFHAAAAAAAAAAAAAAAAPC/"
						],
						[
							698,
							1,
							"astyleformat",
							null,
							"AgAAAEUcAAAAAAAARhwAAAAAAAAAAAAARxwAAAAAAABIHAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACx0AAAAAAAALHQAAAAAAAAAAAAAAAPC/"
						],
						[
							706,
							1,
							"insert",
							{
								"characters": "ll"
							},
							"AwAAAM8bAAAAAAAA0BsAAAAAAAAAAAAA0BsAAAAAAADQGwAAAAAAAAMAAABpbnTQGwAAAAAAANEbAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAzxsAAAAAAADSGwAAAAAAAAAAAAAAAPC/"
						],
						[
							714,
							1,
							"insert",
							{
								"characters": "ll"
							},
							"AwAAABIcAAAAAAAAExwAAAAAAAAAAAAAExwAAAAAAAATHAAAAAAAAAMAAABpbnQTHAAAAAAAABQcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAEhwAAAAAAAAVHAAAAAAAAAAAAAAAAPC/"
						],
						[
							722,
							1,
							"insert",
							{
								"characters": "ll"
							},
							"AwAAADMcAAAAAAAANBwAAAAAAAAAAAAANBwAAAAAAAA0HAAAAAAAAAMAAABpbnQ0HAAAAAAAADUcAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAMxwAAAAAAAA2HAAAAAAAAAAAAAAAAPC/"
						],
						[
							730,
							1,
							"left_delete",
							null,
							"AQAAAEIcAAAAAAAAQhwAAAAAAAAEAAAAIC0gMQ",
							"AQAAAAAAAAABAAAARhwAAAAAAABCHAAAAAAAAAAAAAAAAPC/"
						],
						[
							738,
							1,
							"left_delete",
							null,
							"AQAAAMocAAAAAAAAyhwAAAAAAAAJAAAACgkJaXQyLS07",
							"AQAAAAAAAAABAAAA0xwAAAAAAADKHAAAAAAAAAAAAAAAAPC/"
						],
						[
							742,
							1,
							"left_delete",
							null,
							"AQAAAN4cAAAAAAAA3hwAAAAAAAAEAAAAICsgMQ",
							"AQAAAAAAAAABAAAA4hwAAAAAAADeHAAAAAAAAAAAAAAAAPC/"
						],
						[
							753,
							1,
							"insert",
							{
								"characters": "ll"
							},
							"AwAAABcdAAAAAAAAGB0AAAAAAAAAAAAAGB0AAAAAAAAYHQAAAAAAAAMAAABpbnQYHQAAAAAAABkdAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFx0AAAAAAAAaHQAAAAAAAAAAAAAAAPC/"
						],
						[
							761,
							1,
							"insert",
							{
								"characters": "ll"
							},
							"AwAAAGkdAAAAAAAAah0AAAAAAAAAAAAAah0AAAAAAABqHQAAAAAAAAMAAABpbnRqHQAAAAAAAGsdAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAaR0AAAAAAABsHQAAAAAAAAAAAAAAAPC/"
						],
						[
							773,
							1,
							"insert",
							{
								"characters": "ll"
							},
							"AwAAAPgbAAAAAAAA+RsAAAAAAAAAAAAA+RsAAAAAAAD5GwAAAAAAAAMAAABpbnT5GwAAAAAAAPobAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA+BsAAAAAAAD7GwAAAAAAAAAAAAAAAPC/"
						],
						[
							781,
							1,
							"insert",
							{
								"characters": "ll"
							},
							"AwAAAD8dAAAAAAAAQB0AAAAAAAAAAAAAQB0AAAAAAABAHQAAAAAAAAMAAABpbnRAHQAAAAAAAEEdAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAPx0AAAAAAABCHQAAAAAAAAAAAAAAAPC/"
						],
						[
							791,
							1,
							"insert",
							{
								"characters": "ll"
							},
							"AwAAAMoaAAAAAAAAyxoAAAAAAAAAAAAAyxoAAAAAAADLGgAAAAAAAAMAAABpbnTLGgAAAAAAAMwaAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAyhoAAAAAAADNGgAAAAAAAAAAAAAAAPC/"
						],
						[
							799,
							1,
							"insert",
							{
								"characters": "lll"
							},
							"BAAAAPMaAAAAAAAA9BoAAAAAAAAAAAAA9BoAAAAAAAD0GgAAAAAAAAMAAABpbnT0GgAAAAAAAPUaAAAAAAAAAAAAAPUaAAAAAAAA9hoAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA8xoAAAAAAAD2GgAAAAAAAAAAAAAAAPC/"
						],
						[
							801,
							1,
							"left_delete",
							null,
							"AQAAAPUaAAAAAAAA9RoAAAAAAAABAAAAbA",
							"AQAAAAAAAAABAAAA9hoAAAAAAAD2GgAAAAAAAAAAAAAAAPC/"
						],
						[
							807,
							1,
							"insert",
							{
								"characters": ";;"
							},
							"AwAAAAwbAAAAAAAADRsAAAAAAAAAAAAADRsAAAAAAAANGwAAAAAAAAMAAABpbnQNGwAAAAAAAA4bAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAADBsAAAAAAAAPGwAAAAAAAAAAAAAAAPC/"
						],
						[
							813,
							1,
							"insert",
							{
								"characters": "ll"
							},
							"AwAAAAwbAAAAAAAADRsAAAAAAAAAAAAADRsAAAAAAAANGwAAAAAAAAIAAAA7Ow0bAAAAAAAADhsAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAADhsAAAAAAAAMGwAAAAAAAAAAAAAAAPC/"
						],
						[
							819,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAB8bAAAAAAAAIBsAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAHxsAAAAAAAAfGwAAAAAAAAAAAAAAAPC/"
						],
						[
							822,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AgAAAB4bAAAAAAAAHxsAAAAAAAAAAAAAHxsAAAAAAAAfGwAAAAAAAAQAAABpbG50",
							"AQAAAAAAAAABAAAAHhsAAAAAAAAiGwAAAAAAAAAAAAAAAPC/"
						],
						[
							824,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAB8bAAAAAAAAIBsAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAHxsAAAAAAAAfGwAAAAAAAAAAAAAAAPC/"
						],
						[
							831,
							1,
							"insert",
							{
								"characters": "ll"
							},
							"AwAAAD0bAAAAAAAAPhsAAAAAAAAAAAAAPhsAAAAAAAA+GwAAAAAAAAMAAABpbnQ+GwAAAAAAAD8bAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAPRsAAAAAAABAGwAAAAAAAAAAAAAAAPC/"
						]
					]
				},
				{
					"file": "/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/zin.txt",
					"settings":
					{
						"buffer_size": 66,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							9,
							1,
							"insert",
							{
								"characters": "1"
							},
							"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
						],
						[
							10,
							1,
							"insert",
							{
								"characters": "\n1"
							},
							"AgAAAAEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAADAAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAA8L8"
						],
						[
							11,
							1,
							"insert",
							{
								"characters": "\n1000"
							},
							"BQAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAA8L8"
						],
						[
							12,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AQAAAAgAAAAAAAAACQAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAA8L8"
						],
						[
							18,
							1,
							"paste",
							null,
							"AgAAAAAAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAaAAAAAAAAAAkAAAAxCjEKMTAwMAo",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAkAAAAAAAAAAAAAAAAA8L8"
						],
						[
							22,
							1,
							"paste",
							null,
							"AgAAAAAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA0AAAAAAAAABoAAAAzCjMKNSAyIDcKNQoxIDQgMiAyIDMKMQoyCg",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAPC/"
						],
						[
							26,
							1,
							"paste",
							null,
							"AgAAAAAAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABCAAAAAAAAADQAAAA1CjQKMSAzIDcgMTUKNAoxIDIgNCA4CjUKMSAyIDMgNCA1CjQKMTEgMTMgMTUgMQoxCjAK",
							"AQAAAAAAAAABAAAAAAAAAAAAAAA0AAAAAAAAAAAAAAAAAPC/"
						]
					]
				},
				{
					"file": "/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/zout.txt",
					"settings":
					{
						"buffer_size": 8,
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							4,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAQ2FzZSAjMTogQ2FzZSAjMjogQ2FzZSAjMzogAAAAAAAAAAA5AAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
						],
						[
							11,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAA5AAAAQ2FzZSAjMTogIGFbMF0gPSA1CkNhc2UgIzI6ICBhWzBdID0gMQpDYXNlICMzOiAgYVswXSA9IDIKAAAAAAAAAAA5AAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAOQAAAAAAAAA5AAAAAAAAAAAAAAAAAPC/"
						],
						[
							14,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAA5AAAAQ2FzZSAjMTogIGFbMF0gPSA1CkNhc2UgIzI6ICBhWzBdID0gMQpDYXNlICMzOiAgYVswXSA9IDIKAAAAAAAAAAAeAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAOQAAAAAAAAA5AAAAAAAAAAAAAAAAAPC/"
						],
						[
							15,
							1,
							"revert",
							null,
							"AwAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAIGFbMF0gPSA1CiBhWzBdID0gMQogYVswXSA9IDIKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
						],
						[
							29,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAVAAAANSAyIDcgCjEgNCAyIDIgMyAKMiAKAAAAAAAAAAAwAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
						],
						[
							32,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAQ2FzZSAjMTogNSAyIDcgCkNhc2UgIzI6IDEgNCAyIDIgMyAKQ2FzZSAjMzogMiAKAAAAAAAAAAAwAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/"
						],
						[
							33,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAQ2FzZSAjMTogNSAyIDcgCkNhc2UgIzI6IDEgNCAyIDIgMyAKQ2FzZSAjMzogMiAKAAAAAAAAAAAVAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/"
						],
						[
							36,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAVAAAANSAyIDcgCjEgNCAyIDIgMyAKMiAKAAAAAAAAAAAVAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
						],
						[
							40,
							1,
							"left_delete",
							null,
							"AQAAAAAAAAAAAAAAAAAAAAAAAAAVAAAANSAyIDcgCjEgNCAyIDIgMyAKMiAK",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
						],
						[
							46,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAVAAAANSAyIDcgCjEgNCAyIDIgMyAKMiAKAAAAAAAAAAAtAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
						],
						[
							49,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAtAAAAMSAzIDcgMTUgCjEgMiA0IDggCjEgMiAzIDQgNSAKMTEgMTMgMTUgMSAKMCAKAAAAAAAAAAAtAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
						],
						[
							50,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAtAAAAMSAzIDcgMTUgCjEgMiA0IDggCjEgMiAzIDQgNSAKMTEgMTMgMTUgMSAKMCAKAAAAAAAAAAAmAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
						],
						[
							53,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAAAANSAxIDIgCjUgMSAyIDQgMyAKMSAxIDEgMSAKMiA1IDUgMSAxIAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/"
						],
						[
							56,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAMgo3CjAKMQoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
						],
						[
							57,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAMgo3CjAKMQoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
						],
						[
							58,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAMgo3CjAKMQoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
						],
						[
							59,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAMgo3CjAKMQoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
						],
						[
							60,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAMgo3CjAKMQoAAAAAAAAAAAsAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
						],
						[
							61,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAALAAAALTEKMgotNAotNAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
						],
						[
							62,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAMgo3CjAKMQoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
						],
						[
							63,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAMgo3CjAKMQoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
						],
						[
							64,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAMgo3CjAKMQoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
						],
						[
							65,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAMgo3CjAKMQoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
						],
						[
							66,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAMgo3CjAKMQoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
						]
					]
				},
				{
					"file": "/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/zerr.txt",
					"settings":
					{
						"buffer_size": 28,
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							12,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAAYSA6IFsgNSAyIDcgXQphIDogWyAxIDQgMiAyIDMgXQphIDogWyAyIF0KCltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAAD4AAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
						],
						[
							19,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAAYSA6IFsgNSAyIDcgXQphIDogWyAxIDQgMiAyIDMgXQphIDogWyAyIF0KCltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAAD4AAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
						],
						[
							20,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAAYSA6IFsgNSAyIDcgXQphIDogWyAxIDQgMiAyIDMgXQphIDogWyAyIF0KCltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAAD4AAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
						],
						[
							23,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAAYSA6IFsgNSAyIDcgXQphIDogWyAxIDQgMiAyIDMgXQphIDogWyAyIF0KCltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
						],
						[
							26,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAAD4AAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							33,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAAYSA6IFsgNSAyIDcgXQphIDogWyAxIDQgMiAyIDMgXQphIDogWyAyIF0KCltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAAEYAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
						],
						[
							38,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAABGAAAAYSA6IFsgNSAyIDcgXQphIDogWyAxIDQgMiAyIDMgXQphIDogWyAyIF0KCltDb21wbGV0ZWQgaW4gMC4wMDEwMjA2IHNdCgAAAAAAAAAAPgAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAPC/"
						],
						[
							39,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAAYSA6IFsgNSAyIDcgXQphIDogWyAxIDQgMiAyIDMgXQphIDogWyAyIF0KCltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAAEYAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
						],
						[
							42,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAABGAAAAYSA6IFsgNSAyIDcgXQphIDogWyAxIDQgMiAyIDMgXQphIDogWyAyIF0KCltDb21wbGV0ZWQgaW4gMC4wMDE5MzcxIHNdCgAAAAAAAAAAPgAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAPC/"
						],
						[
							45,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAAYSA6IFsgNSAyIDcgXQphIDogWyAxIDQgMiAyIDMgXQphIDogWyAyIF0KCltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAAD4AAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
						],
						[
							46,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAAYSA6IFsgNSAyIDcgXQphIDogWyAxIDQgMiAyIDMgXQphIDogWyAyIF0KCltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAAGQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
						],
						[
							49,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAABkAAAAYSA6IFsgMSAzIDcgMTUgXQphIDogWyAxIDIgNCA4IF0KYSA6IFsgMSAyIDMgNCA1IF0KYSA6IFsgMTEgMTMgMTUgMSBdCmEgOiBbIDAgXQoKW0NvbXBsZXRlZCBpbiAwIHNdCgAAAAAAAAAAZAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
						],
						[
							50,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAABkAAAAYSA6IFsgMSAzIDcgMTUgXQphIDogWyAxIDIgNCA4IF0KYSA6IFsgMSAyIDMgNCA1IF0KYSA6IFsgMTEgMTMgMTUgMSBdCmEgOiBbIDAgXQoKW0NvbXBsZXRlZCBpbiAwIHNdCgAAAAAAAAAAVgAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
						],
						[
							53,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAABWAAAAYSA6IFsgNSAxIDIgXQphIDogWyA1IDEgMiA0IDMgXQphIDogWyAxIDEgMSAxIF0KYSA6IFsgMiA1IDUgMSAxIF0KCltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAVgAAAAAAAABWAAAAAAAAAAAAAAAAAPC/"
						],
						[
							56,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							57,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							58,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							59,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							60,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							61,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							62,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							63,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							64,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							65,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABQAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							66,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACltDb21wbGV0ZWQgaW4gMCBzXQoAAAAAAAAAABwAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
						]
					]
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Packages/C++/C Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/User/C++ 14.sublime-build",
							""
						],
						[
							"Packages/User/C++ 14.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/User/C++ 14.sublime-build",
							""
						],
						[
							"Packages/User/C++ 14.sublime-build",
							"Run"
						]
					],
					[
						"Packages/User/C++ 14.sublime-build",
						"Run"
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"fo",
						"SublimeAStyleFormatter: Format Current File"
					],
					[
						"for",
						"SublimeAStyleFormatter: Format Current File"
					],
					[
						"buil",
						"Build: Cancel"
					],
					[
						"auto",
						"Toggle AutoSave: all files"
					],
					[
						"au",
						"Toggle AutoSave: all files"
					],
					[
						"forma",
						"SublimeAStyleFormatter: Format Current File"
					],
					[
						"aut",
						"Toggle AutoSave: all files"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"pac",
						"Package Control: Install Package"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 128.981124878,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/C/Users/2001a/Documents/GitHub/CPMaster",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300"
			],
			"file_history":
			[
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpv.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpz.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpy.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpx.sublime-snippet",
				"/C/Users/2001a/AppData/Roaming/Sublime Text/Packages/User/cpw.sublime-snippet",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/1657C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/try1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/temp2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_CodeTON_DIV2/1656E.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/021_Something_DIV2/D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/temp2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/020_EDU125_DIV2/E.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1536B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1514B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1497C1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1527B1.cpp",
				"/C/Users/2001a/Downloads/assignment3.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/4.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/Kichstart_2022/Round_A/temp.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1553C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1539C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/test.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1541B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1559C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1537C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1520D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1385C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1339B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/08_SUB_XOR.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/07_SUBSTRING.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/06_GENIUS.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/05_CHFDBT.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/04_CHFCLASS.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/03_WORDLE.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/02_BATH.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/015_MARCH_221D_DIV4/01_DISCUS.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/1647A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/1647B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/1647C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/1647D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/temp2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/try1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/019_#777_DIV2/D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1353A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1200/1354B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/018_#776_DIV3/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/018_#776_DIV3/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/018_#776_DIV3/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/018_#776_DIV3/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/018_#776_DIV3/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/018_#776_DIV3/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/README.md",
				"/C/Users/2001a/Downloads/Compiler_Asg3/MH/zin.txt",
				"/C/Users/2001a/Downloads/Compiler_Asg3/MH/zin_3.txt",
				"/C/Users/2001a/Downloads/Compiler_Asg3/MH/q3.cpp",
				"/C/Users/2001a/Downloads/Compiler_Asg3/MH/ques_2.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/AtCoder/BeginnerContest240/abc240_A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/1646C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/1646B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/1646A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/1646D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/temp1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/try1.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/C.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/B.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/D.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/017_#774_DIV2/temp2.cpp",
				"/C/Program Files/Sublime Text/zerr.txt",
				"/C/Program Files/Sublime Text/zout.txt",
				"/C/Program Files/Sublime Text/zin.txt",
				"/C/Program Files/Sublime Text/new.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1100/1365A.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/zerr.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/zout.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/zin.txt",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/04_MAGICMOD.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/03_MAGNETSORT.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/02_DISTCON.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/01_PLPROCESS.cpp",
				"/C/Users/2001a/Documents/GitHub/CPMaster/CodeChef/014_LTIME105B_DIV2/04.cpp"
			],
			"find":
			{
				"height": 28.0754716981
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"int64_t",
					"'\\n'",
					"want",
					"inp",
					"emplace_back",
					"list",
					"Check",
					"Disc",
					"LCM",
					"check",
					"solFunc",
					"vp",
					"cand",
					"pre",
					"vll",
					"SOLVE",
					"last",
					"start",
					"inputFiles",
					"NET_PAY",
					"val",
					"push_back",
					"emplace_back",
					"idxap",
					"sw",
					"vp",
					"curr",
					"__lg",
					"nl"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
				],
				"reverse": false,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "C:\\Users\\2001a\\Documents\\GitHub\\CPMaster"
				}
			],
			"groups":
			[
				{
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/1538C.cpp",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 8311,
								"regions":
								{
								},
								"selection":
								[
									[
										6935,
										6935
									]
								],
								"settings":
								{
									"auto_name": "1538C.cpp",
									"syntax": "Packages/C++/C++.sublime-syntax",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 1732.52830189,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				},
				{
					"sheets":
					[
						{
							"buffer": 1,
							"file": "/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/zin.txt",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 66,
								"regions":
								{
								},
								"selection":
								[
									[
										66,
										66
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				},
				{
					"sheets":
					[
						{
							"buffer": 2,
							"file": "/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/zout.txt",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 8,
								"regions":
								{
								},
								"selection":
								[
									[
										8,
										8
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/C/Users/2001a/Documents/GitHub/CPMaster/CodeForces/PRACTICE/1300/zerr.txt",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 28,
								"regions":
								{
								},
								"selection":
								[
									[
										20,
										20
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 28.0754716981
			},
			"input":
			{
				"height": 39.3207550049
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						2
					],
					[
						1,
						0,
						2,
						1
					],
					[
						1,
						1,
						2,
						2
					]
				],
				"cols":
				[
					0.0,
					0.753720908408,
					1.0
				],
				"rows":
				[
					0.0,
					0.5,
					1.0
				]
			},
			"menu_visible": true,
			"output.astyle_error_message":
			{
				"height": 0.0
			},
			"output.exec":
			{
				"height": 61.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "Packages/User/CPP17.sublime-build",
			"position": "0,2,3,-32000,-32000,-1,-1,912,361,11,1731,d95a77b0a7c2034e8744cb8f415a6a73",
			"project": "",
			"replace":
			{
				"height": 52.5283018868
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
				"last_automatic_layout":
				[
					[
						0,
						0,
						1,
						2
					],
					[
						1,
						0,
						2,
						1
					],
					[
						1,
						1,
						2,
						2
					]
				]
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 231.0,
			"status_bar_visible": true,
			"template_settings":
			{
				"max_columns": 2
			},
			"window_id": 77,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
